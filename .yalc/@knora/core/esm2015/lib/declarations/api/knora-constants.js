export class KnoraConstants {
}
KnoraConstants.KnoraApi = 'http://api.knora.org/ontology/knora-api';
KnoraConstants.PathSeparator = '#';
KnoraConstants.KnoraOntologyPath = 'http://www.knora.org/ontology';
KnoraConstants.KnoraBase = KnoraConstants.KnoraOntologyPath + '/knora-base';
KnoraConstants.KnoraAdmin = KnoraConstants.KnoraOntologyPath + '/knora-admin';
KnoraConstants.SystemProjectIRI = KnoraConstants.KnoraAdmin + '#SystemProject';
KnoraConstants.SystemAdminGroupIRI = KnoraConstants.KnoraAdmin + '#SystemAdmin';
KnoraConstants.ProjectAdminGroupIRI = KnoraConstants.KnoraAdmin + '#ProjectAdmin';
KnoraConstants.ProjectMemberGroupIRI = KnoraConstants.KnoraAdmin + '#ProjectMember';
KnoraConstants.KnoraApiV2WithValueObjectPath = KnoraConstants.KnoraApi + '/v2' + KnoraConstants.PathSeparator;
KnoraConstants.KnoraApiV2SimplePath = KnoraConstants.KnoraApi + '/simple/v2' + KnoraConstants.PathSeparator;
KnoraConstants.SalsahGuiOntology = 'http://api.knora.org/ontology/salsah-gui/v2';
KnoraConstants.SalsahGuiOrder = KnoraConstants.SalsahGuiOntology + '#guiOrder';
KnoraConstants.SalsahGuiAttribute = KnoraConstants.SalsahGuiOntology + '#guiAttribute';
KnoraConstants.StandoffOntology = 'http://api.knora.org/ontology/standoff/v2';
KnoraConstants.Resource = KnoraConstants.KnoraApiV2WithValueObjectPath + 'Resource';
KnoraConstants.TextValue = KnoraConstants.KnoraApiV2WithValueObjectPath + 'TextValue';
KnoraConstants.IntValue = KnoraConstants.KnoraApiV2WithValueObjectPath + 'IntValue';
KnoraConstants.BooleanValue = KnoraConstants.KnoraApiV2WithValueObjectPath + 'BooleanValue';
KnoraConstants.UriValue = KnoraConstants.KnoraApiV2WithValueObjectPath + 'UriValue';
KnoraConstants.DecimalValue = KnoraConstants.KnoraApiV2WithValueObjectPath + 'DecimalValue';
KnoraConstants.DateValue = KnoraConstants.KnoraApiV2WithValueObjectPath + 'DateValue';
KnoraConstants.ColorValue = KnoraConstants.KnoraApiV2WithValueObjectPath + 'ColorValue';
KnoraConstants.GeomValue = KnoraConstants.KnoraApiV2WithValueObjectPath + 'GeomValue';
KnoraConstants.ListValue = KnoraConstants.KnoraApiV2WithValueObjectPath + 'ListValue';
KnoraConstants.IntervalValue = KnoraConstants.KnoraApiV2WithValueObjectPath + 'IntervalValue';
KnoraConstants.LinkValue = KnoraConstants.KnoraApiV2WithValueObjectPath + 'LinkValue';
KnoraConstants.GeonameValue = KnoraConstants.KnoraApiV2WithValueObjectPath + 'GeonameValue';
KnoraConstants.FileValue = KnoraConstants.KnoraApiV2WithValueObjectPath + 'FileValue';
KnoraConstants.AudioFileValue = KnoraConstants.KnoraApiV2WithValueObjectPath + 'AudioFileValue';
KnoraConstants.DDDFileValue = KnoraConstants.KnoraApiV2WithValueObjectPath + 'DDDFileValue';
KnoraConstants.DocumentFileValue = KnoraConstants.KnoraApiV2WithValueObjectPath + 'DocumentFileValue';
KnoraConstants.StillImageFileValue = KnoraConstants.KnoraApiV2WithValueObjectPath + 'StillImageFileValue';
KnoraConstants.MovingImageFileValue = KnoraConstants.KnoraApiV2WithValueObjectPath + 'MovingImageFileValue';
KnoraConstants.TextFileValue = KnoraConstants.KnoraApiV2WithValueObjectPath + 'TextFileValue';
KnoraConstants.IsResourceClass = KnoraConstants.KnoraApiV2WithValueObjectPath + 'isResourceClass';
KnoraConstants.IsValueClass = KnoraConstants.KnoraApiV2WithValueObjectPath + 'isValueClass';
KnoraConstants.ForbiddenResource = KnoraConstants.KnoraApiV2WithValueObjectPath + 'ForbiddenResource';
KnoraConstants.XMLToStandoffMapping = KnoraConstants.KnoraApiV2WithValueObjectPath + 'XMLToStandoffMapping';
KnoraConstants.ListNode = KnoraConstants.KnoraApiV2WithValueObjectPath + 'ListNode';
KnoraConstants.ArkUrl = KnoraConstants.KnoraApiV2WithValueObjectPath + 'arkUrl';
KnoraConstants.versionArkUrl = KnoraConstants.KnoraApiV2WithValueObjectPath + 'versionArkUrl';
KnoraConstants.ObjectType = KnoraConstants.KnoraApiV2WithValueObjectPath + 'objectType';
KnoraConstants.ResourceIcon = KnoraConstants.KnoraApiV2WithValueObjectPath + 'resourceIcon';
KnoraConstants.isEditable = KnoraConstants.KnoraApiV2WithValueObjectPath + 'isEditable';
KnoraConstants.isLinkProperty = KnoraConstants.KnoraApiV2WithValueObjectPath + 'isLinkProperty';
KnoraConstants.isLinkValueProperty = KnoraConstants.KnoraApiV2WithValueObjectPath + 'isLinkValueProperty';
KnoraConstants.hasGeometry = KnoraConstants.KnoraApiV2WithValueObjectPath + 'hasGeometry';
KnoraConstants.schemaName = 'http://schema.org/name';
KnoraConstants.schemaNumberOfItems = 'http://schema.org/numberOfItems';
KnoraConstants.schemaItemListElement = 'http://schema.org/itemListElement';
KnoraConstants.RdfProperty = 'http://www.w3.org/1999/02/22-rdf-syntax-ns#Property';
KnoraConstants.RdfsSchema = 'http://www.w3.org/2000/01/rdf-schema' + KnoraConstants.PathSeparator;
KnoraConstants.RdfsLabel = KnoraConstants.RdfsSchema + 'label';
KnoraConstants.RdfsComment = KnoraConstants.RdfsSchema + 'comment';
KnoraConstants.RdfsSubclassOf = KnoraConstants.RdfsSchema + 'subClassOf';
KnoraConstants.subPropertyOf = KnoraConstants.RdfsSchema + 'subPropertyOf';
KnoraConstants.owl = 'http://www.w3.org/2002/07/owl';
KnoraConstants.OwlClass = KnoraConstants.owl + '#Class';
KnoraConstants.OwlObjectProperty = KnoraConstants.owl + '#ObjectProperty';
KnoraConstants.OwlDatatypeProperty = KnoraConstants.owl + '#DatatypeProperty';
KnoraConstants.OwlAnnotationProperty = KnoraConstants.owl + '#AnnotationProperty';
KnoraConstants.OwlOnProperty = KnoraConstants.owl + '#onProperty';
KnoraConstants.OwlMaxCardinality = KnoraConstants.owl + '#maxCardinality';
KnoraConstants.OwlMinCardinality = KnoraConstants.owl + '#minCardinality';
KnoraConstants.OwlCardinality = KnoraConstants.owl + '#cardinality';
KnoraConstants.OwlRestriction = KnoraConstants.owl + '#Restriction';
KnoraConstants.creationDate = KnoraConstants.KnoraApiV2WithValueObjectPath + 'creationDate';
KnoraConstants.lastModificationDate = KnoraConstants.KnoraApiV2WithValueObjectPath + 'lastModificationDate';
KnoraConstants.hasPermissions = KnoraConstants.KnoraApiV2WithValueObjectPath + 'hasPermissions';
KnoraConstants.userHasPermission = KnoraConstants.KnoraApiV2WithValueObjectPath + 'userHasPermission';
KnoraConstants.attachedToProject = KnoraConstants.KnoraApiV2WithValueObjectPath + 'attachedToProject';
KnoraConstants.attachedToUser = KnoraConstants.KnoraApiV2WithValueObjectPath + 'attachedToUser';
KnoraConstants.Region = KnoraConstants.KnoraApiV2WithValueObjectPath + 'Region';
KnoraConstants.ReadTextValueAsHtml = 'ReadTextValueAsHtml';
KnoraConstants.ReadTextValueAsString = 'ReadTextValueAsString';
KnoraConstants.ReadTextValueAsXml = 'ReadTextValueAsXml';
KnoraConstants.ReadDateValue = 'ReadDateValue';
KnoraConstants.ReadLinkValue = 'ReadLinkValue';
KnoraConstants.ReadIntegerValue = 'ReadIntegerValue';
KnoraConstants.ReadDecimalValue = 'ReadDecimalValue';
KnoraConstants.ReadStillImageFileValue = 'ReadStillImageFileValue';
KnoraConstants.ReadMovingImageFileValue = 'ReadMovingImageFileValue';
KnoraConstants.ReadAudioFileValue = 'ReadAudioFileValue';
KnoraConstants.ReadTextFileValue = 'ReadTextFileValue';
KnoraConstants.ReadGeomValue = 'ReadGeomValue';
KnoraConstants.ReadColorValue = 'ReadColorValue';
KnoraConstants.ReadUriValue = 'ReadUriValue';
KnoraConstants.ReadBooleanValue = 'ReadBooleanValue';
KnoraConstants.ReadIntervalValue = 'ReadIntervalValue';
KnoraConstants.ReadListValue = 'ReadListValue';
KnoraConstants.valueAsString = KnoraConstants.KnoraApiV2WithValueObjectPath + 'valueAsString';
KnoraConstants.textValueAsHtml = KnoraConstants.KnoraApiV2WithValueObjectPath + 'textValueAsHtml';
KnoraConstants.textValueAsXml = KnoraConstants.KnoraApiV2WithValueObjectPath + 'textValueAsXml';
KnoraConstants.textValueHasMapping = KnoraConstants.KnoraApiV2WithValueObjectPath + 'textValueHasMapping';
KnoraConstants.hasStandoffLinkToValue = KnoraConstants.KnoraApiV2WithValueObjectPath + 'hasStandoffLinkToValue';
KnoraConstants.dateValueHasStartYear = KnoraConstants.KnoraApiV2WithValueObjectPath + 'dateValueHasStartYear';
KnoraConstants.dateValueHasEndYear = KnoraConstants.KnoraApiV2WithValueObjectPath + 'dateValueHasEndYear';
KnoraConstants.dateValueHasStartEra = KnoraConstants.KnoraApiV2WithValueObjectPath + 'dateValueHasStartEra';
KnoraConstants.dateValueHasEndEra = KnoraConstants.KnoraApiV2WithValueObjectPath + 'dateValueHasEndEra';
KnoraConstants.dateValueHasStartMonth = KnoraConstants.KnoraApiV2WithValueObjectPath + 'dateValueHasStartMonth';
KnoraConstants.dateValueHasEndMonth = KnoraConstants.KnoraApiV2WithValueObjectPath + 'dateValueHasEndMonth';
KnoraConstants.dateValueHasStartDay = KnoraConstants.KnoraApiV2WithValueObjectPath + 'dateValueHasStartDay';
KnoraConstants.dateValueHasEndDay = KnoraConstants.KnoraApiV2WithValueObjectPath + 'dateValueHasEndDay';
KnoraConstants.dateValueHasCalendar = KnoraConstants.KnoraApiV2WithValueObjectPath + 'dateValueHasCalendar';
KnoraConstants.linkValueHasTarget = KnoraConstants.KnoraApiV2WithValueObjectPath + 'linkValueHasTarget';
KnoraConstants.linkValueHasSource = KnoraConstants.KnoraApiV2WithValueObjectPath + 'linkValueHasSource';
KnoraConstants.linkValueHasSourceIri = KnoraConstants.KnoraApiV2WithValueObjectPath + 'linkValueHasSourceIri';
KnoraConstants.linkValueHasTargetIri = KnoraConstants.KnoraApiV2WithValueObjectPath + 'linkValueHasTargetIri';
KnoraConstants.integerValueAsInteger = KnoraConstants.KnoraApiV2WithValueObjectPath + 'intValueAsInt';
KnoraConstants.decimalValueAsDecimal = KnoraConstants.KnoraApiV2WithValueObjectPath + 'decimalValueAsDecimal';
KnoraConstants.fileValueAsUrl = KnoraConstants.KnoraApiV2WithValueObjectPath + 'fileValueAsUrl';
KnoraConstants.fileValueIsPreview = KnoraConstants.KnoraApiV2WithValueObjectPath + 'fileValueIsPreview';
KnoraConstants.fileValueHasFilename = KnoraConstants.KnoraApiV2WithValueObjectPath + 'fileValueHasFilename';
KnoraConstants.hasStillImageFileValue = KnoraConstants.KnoraApiV2WithValueObjectPath + 'hasStillImageFileValue';
KnoraConstants.stillImageFileValueHasDimX = KnoraConstants.KnoraApiV2WithValueObjectPath + 'stillImageFileValueHasDimX';
KnoraConstants.stillImageFileValueHasDimY = KnoraConstants.KnoraApiV2WithValueObjectPath + 'stillImageFileValueHasDimY';
KnoraConstants.stillImageFileValueHasIIIFBaseUrl = KnoraConstants.KnoraApiV2WithValueObjectPath + 'stillImageFileValueHasIIIFBaseUrl';
KnoraConstants.colorValueAsColor = KnoraConstants.KnoraApiV2WithValueObjectPath + 'colorValueAsColor';
KnoraConstants.geometryValueAsGeometry = KnoraConstants.KnoraApiV2WithValueObjectPath + 'geometryValueAsGeometry';
KnoraConstants.uriValueAsUri = KnoraConstants.KnoraApiV2WithValueObjectPath + 'uriValueAsUri';
KnoraConstants.booleanValueAsBoolean = KnoraConstants.KnoraApiV2WithValueObjectPath + 'booleanValueAsBoolean';
KnoraConstants.intervalValueHasStart = KnoraConstants.KnoraApiV2WithValueObjectPath + 'intervalValueHasStart';
KnoraConstants.intervalValueHasEnd = KnoraConstants.KnoraApiV2WithValueObjectPath + 'intervalValueHasEnd';
KnoraConstants.listValueAsListNode = KnoraConstants.KnoraApiV2WithValueObjectPath + 'listValueAsListNode';
KnoraConstants.Xsd = 'http://www.w3.org/2001/XMLSchema#';
KnoraConstants.xsdString = KnoraConstants.Xsd + 'string';
KnoraConstants.xsdBoolean = KnoraConstants.Xsd + 'boolean';
KnoraConstants.xsdInteger = KnoraConstants.Xsd + 'integer';
KnoraConstants.xsdDecimal = KnoraConstants.Xsd + 'decimal';
KnoraConstants.xsdUri = KnoraConstants.Xsd + 'anyURI';
KnoraConstants.resourceSimple = KnoraConstants.KnoraApiV2SimplePath + 'Resource';
KnoraConstants.dateSimple = KnoraConstants.KnoraApiV2SimplePath + 'Date';
KnoraConstants.intervalSimple = KnoraConstants.KnoraApiV2SimplePath + 'Interval';
KnoraConstants.geomSimple = KnoraConstants.KnoraApiV2SimplePath + 'Geom';
KnoraConstants.colorSimple = KnoraConstants.KnoraApiV2SimplePath + 'Color';
KnoraConstants.geonameSimple = KnoraConstants.KnoraApiV2SimplePath + 'Geoname';
KnoraConstants.fileSimple = KnoraConstants.KnoraApiV2SimplePath + 'File';
KnoraConstants.listNodeSimple = KnoraConstants.KnoraApiV2SimplePath + 'ListNode';
KnoraConstants.matchFunction = KnoraConstants.KnoraApiV2WithValueObjectPath + 'match';
KnoraConstants.EqualsComparisonOperator = '=';
KnoraConstants.EqualsComparisonLabel = 'is equal to';
KnoraConstants.NotEqualsComparisonOperator = '!=';
KnoraConstants.NotEqualsComparisonLabel = 'is not equal to';
KnoraConstants.GreaterThanComparisonOperator = '>';
KnoraConstants.GreaterThanComparisonLabel = 'is greater than';
KnoraConstants.GreaterThanEqualsComparisonOperator = '>=';
KnoraConstants.GreaterThanEqualsComparisonLabel = 'is greater than equals to';
KnoraConstants.LessThanComparisonOperator = '<';
KnoraConstants.LessThanComparisonLabel = 'is less than';
KnoraConstants.LessThanEqualsComparisonOperator = '<=';
KnoraConstants.LessThanQualsComparisonLabel = 'is less than equals to';
KnoraConstants.ExistsComparisonOperator = 'E';
KnoraConstants.ExistsComparisonLabel = 'exists';
KnoraConstants.LikeComparisonOperator = 'regex';
KnoraConstants.LikeComparisonLabel = 'is like';
KnoraConstants.MatchComparisonOperator = 'contains';
KnoraConstants.MatchComparisonLabel = 'matches';
KnoraConstants.SalsahLink = 'salsah-link'; // class on an HTML <a> element that indicates a link to a Knora resource
KnoraConstants.RefMarker = 'ref-marker'; // class on an HTML element that refers to another element in the same document
KnoraConstants.GNDPrefix = '(DE-588)';
KnoraConstants.GNDResolver = 'http://d-nb.info/gnd/';
KnoraConstants.VIAFPrefix = '(VIAF)';
KnoraConstants.VIAFResolver = 'https://viaf.org/viaf/';
export var KnoraSchema;
(function (KnoraSchema) {
    KnoraSchema[KnoraSchema["complex"] = 0] = "complex";
    KnoraSchema[KnoraSchema["simple"] = 1] = "simple";
})(KnoraSchema || (KnoraSchema = {}));
//# sourceMappingURL=data:application/json;base64,