{"version":3,"sources":["../../../../node_modules/tslib/tslib.es6.js","ng://@knora/authentication/lib/declarations/current-user.ts","ng://@knora/authentication/lib/session/session.service.ts","ng://@knora/authentication/lib/guard/auth.guard.ts","ng://@knora/authentication/lib/authentication.service.ts","ng://@knora/authentication/lib/login-form/login-form.component.ts","ng://@knora/authentication/lib/interceptors/jwt.interceptor.ts","ng://@knora/authentication/lib/interceptors/with-credentials.interceptor.ts","ng://@knora/authentication/lib/authentication.module.ts"],"names":["__decorate","decorators","target","key","desc","d","c","arguments","length","r","Object","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","__param","paramIndex","decorator","__metadata","metadataKey","metadataValue","metadata","CurrentUser","this","name","undefined","jwt","lang","sysAdmin","projectAdmin","tslib_1.__decorate","JsonProperty","String","Boolean","JsonObject","moment","momentImported","SessionService","_http","config","_users","MAX_SESSION_TIME","prototype","setSession","username","_this","identifierType","indexOf","getUser","subscribe","result","groupsPerProjectKeys","keys","permissions","groupsPerProject","groupsPerProjectKeys_1","o","m","Symbol","iterator","call","next","value","done","tslib_1.__values","groupsPerProjectKeys_1_1","KnoraConstants","SystemProjectIRI","SystemAdminGroupIRI","ProjectAdminGroupIRI","push","session","id","setTimestamp","user","localStorage","setItem","JSON","stringify","error","console","add","valueOf","getSession","updateSession","validateSession","parse","getItem","tsNow","authenticate","destroySession","get","api","pipe","map","status","removeItem","Injectable","providedIn","tslib_1.__param","Inject","KuiCoreConfigToken","HttpClient","UsersService","AuthGuard","_session","_router","canActivate","state","navigate","queryParams","returnUrl","url","Router","AuthenticationService","http","login","password","params","email","post","observe","response","catchError","handleRequestError","logout","serviceError","ApiServiceError","header","server","headers","statusText","errorInfo","message","throwError","LoginFormComponent","_auth","_fb","_route","loading","loginErrorUser","loginErrorPw","loginErrorServer","title","pw","button","remember","forgot_pw","failed","formErrors","validationMessages","required","ngOnInit","loggedInUser","buildForm","frm","group","Validators","valueChanges","data","onValueChanged","form","field","control","dirty","valid","messages_1","errors","doLogin","errorMessage","invalid","body","token","setTimeout","snapshot","location","reload","Input","Component","selector","template","FormBuilder","ActivatedRoute","JwtInterceptor","intercept","request","clone","setHeaders","Authorization","handle","WithCredentialsInterceptor","withCredentials","KuiAuthenticationModule","NgModule","imports","CommonModule","KuiActionModule","MatCardModule","MatIconModule","MatInputModule","MatButtonModule","MatDialogModule","MatFormFieldModule","ReactiveFormsModule","HttpClientModule","declarations","exports","providers","provide","HTTP_INTERCEPTORS","useClass","multi"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import { JsonObject, JsonProperty } from 'json2typescript';\n\n/**\n * currently logged-in user\n */\n@JsonObject\nexport class CurrentUser {\n\n    /**\n     * username\n     */\n    @JsonProperty('name', String)\n    public name: string = undefined;\n\n    /**\n     * json web token\n     */\n    @JsonProperty('jwt', String, true)\n    public jwt: string = undefined;\n\n    /**\n     * language for the user interface\n     */\n    @JsonProperty('lang', String, true)\n    public lang: string = undefined;\n\n    /**\n     * is system administrator?\n     */\n    @JsonProperty('sysAdmin', Boolean)\n    public sysAdmin: boolean = undefined;\n\n    /**\n     * list of project shortcodes, where the user is project admin\n     */\n    @JsonProperty('projectAdmin', [String], true)\n    public projectAdmin: string[] = undefined;\n\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Inject, Injectable } from '@angular/core';\nimport { ApiServiceError, KnoraConstants, KuiCoreConfigToken, User, UsersService } from '@knora/core';\nimport { Session } from '../declarations';\n\nimport * as momentImported from 'moment';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nconst moment = momentImported;\n\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class SessionService {\n\n    public session: Session;\n\n    /**\n     * max session time in milliseconds\n     * default value (24h): 86400000\n     *\n     */\n    readonly MAX_SESSION_TIME: number = 86400000; // 1d = 24 * 60 * 60 * 1000\n\n    constructor (\n        private _http: HttpClient,\n        @Inject(KuiCoreConfigToken) public config,\n        private _users: UsersService) {\n    }\n\n    /**\n     * set the session by using the json web token (jwt) and the user object;\n     * it will be used in the login process\n     *\n     * @param jwt\n     * @param username\n     */\n    setSession(jwt: string, username: string) {\n\n        // username can be either name or email address, so what do we have?\n        const identifierType: string = ((username.indexOf('@') > -1) ? 'email' : 'username');\n\n        /*\n        this.session = {\n            id: this.setTimestamp(),\n            user: {\n                name: username,\n                jwt: jwt,\n                lang: 'en',\n                sysAdmin: false,\n                projectAdmin: []\n            }\n        };\n        // store in the localStorage\n        localStorage.setItem('session', JSON.stringify(this.session));\n        */\n\n        // get user information\n        this._users.getUser(username, identifierType).subscribe(\n            (result: User) => {\n                let sysAdmin: boolean = false;\n                const projectAdmin: string[] = [];\n\n                const groupsPerProjectKeys: string[] = Object.keys(result.permissions.groupsPerProject);\n\n                for (const key of groupsPerProjectKeys) {\n                    if (key === KnoraConstants.SystemProjectIRI) {\n                        sysAdmin = result.permissions.groupsPerProject[key].indexOf(KnoraConstants.SystemAdminGroupIRI) > -1;\n                    }\n\n                    if (result.permissions.groupsPerProject[key].indexOf(KnoraConstants.ProjectAdminGroupIRI) > -1) {\n                        projectAdmin.push(key);\n                    }\n                }\n\n                // define a session id, which is the timestamp of login\n                this.session = {\n                    id: this.setTimestamp(),\n                    user: {\n                        name: result.username,\n                        jwt: jwt,\n                        lang: result.lang,\n                        sysAdmin: sysAdmin,\n                        projectAdmin: projectAdmin\n                    }\n                };\n                // store in the localStorage\n                localStorage.setItem('session', JSON.stringify(this.session));\n\n            },\n            (error: ApiServiceError) => {\n                console.error(error);\n            }\n        );\n    }\n\n    private setTimestamp() {\n        return (moment().add(0, 'second')).valueOf();\n    }\n\n    getSession() {\n\n    }\n\n    updateSession() {\n\n    }\n\n    validateSession() {\n        // mix of checks with session.validation and this.authenticate\n        this.session = JSON.parse(localStorage.getItem('session'));\n\n        const tsNow: number = this.setTimestamp();\n\n        if (this.session) {\n            // the session exists\n            // check if the session is still valid:\n            // if session.id + MAX_SESSION_TIME > now: _session.validateSession()\n            if (this.session.id + this.MAX_SESSION_TIME < tsNow) {\n                // the internal session has expired\n                // check if the api v2/authentication is still valid\n\n                if (this.authenticate()) {\n                    // the api authentication is valid;\n                    // update the session.id\n                    this.session.id = tsNow;\n\n                    // localStorage.removeItem('session');\n                    localStorage.setItem('session', JSON.stringify(this.session));\n                    return true;\n\n                } else {\n                    // console.error('session.service -- validateSession -- authenticate: the session expired on API side');\n                    // a user is not authenticated anymore!\n                    this.destroySession();\n                    return false;\n                }\n\n            } else {\n                return true;\n            }\n        }\n        return false;\n    }\n\n\n    private authenticate(): Observable<boolean> {\n        return this._http.get(this.config.api + '/v2/authentication').pipe(\n            map((result: any) => {\n\n                // console.log('AuthenticationService - authenticate - result: ', result);\n                // return true || false\n                return result.status === 200;\n            })\n        );\n    }\n\n    destroySession() {\n        localStorage.removeItem('session');\n    }\n\n\n}\n","import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { SessionService } from '../session/session.service';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n\n    constructor(private _session: SessionService,\n                private _router: Router) {\n\n    }\n\n    canActivate(\n        next: ActivatedRouteSnapshot,\n        state: RouterStateSnapshot): Observable<boolean> | Promise<boolean> | boolean {\n\n        if (!this._session.validateSession()) {\n            this._router.navigate(['login'], {queryParams: {returnUrl: state.url}});\n            return false;\n        }\n\n        return true;\n    }\n\n}\n","import { HttpClient, HttpErrorResponse, HttpResponse } from '@angular/common/http';\nimport { Inject, Injectable } from '@angular/core';\nimport { ApiServiceError, KuiCoreConfigToken } from '@knora/core';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError, map } from 'rxjs/operators';\nimport { SessionService } from './session/session.service';\n\n/**\n * Authentication service includes the login, logout method and a session method to check if a user is logged in or not.\n */\n@Injectable({\n    providedIn: 'root'\n})\nexport class AuthenticationService {\n\n    constructor (public http: HttpClient,\n        private _session: SessionService,\n        @Inject(KuiCoreConfigToken) public config) {\n\n        // console.log('AuthenticationService constructor: config', config);\n    }\n\n    /**\n     * validate if a user is logged in or not\n     * returns true if the session is active\n     *\n     * @returns boolean\n     */\n    session(): boolean {\n        return this._session.validateSession();\n    }\n\n    /**\n     * update the session storage\n     * @param jwt\n     * @param username\n     *\n     * @returns boolean\n     */\n    updateSession(jwt: string, username: string): boolean {\n        if (jwt && username) {\n            this._session.setSession(jwt, username);\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     * login process;\n     * it's used by the login component\n     *\n     * @param {string} identifier email or username\n     * @param {string} password\n     * @returns Observable<any>\n     */\n    login(username: string, password: string): Observable<any> {\n\n        // console.log('AuthenticationService - login - api: ', this.config.api);\n\n        let params: any = { username: username, password: password };\n\n        // username can be either name or email address, so what do we have?\n        if (username.indexOf('@') > -1) {\n            // username is email address\n            params = { email: username, password: password };\n        }\n\n        return this.http.post(\n            this.config.api + '/v2/authentication',\n            params,\n            { observe: 'response' }).pipe(\n                map((response: HttpResponse<any>): any => {\n                    return response;\n                }),\n                catchError((error: HttpErrorResponse) => {\n\n                    return this.handleRequestError(error);\n                })\n            );\n    }\n\n    /**\n     * logout the user by destroying the session\n     *\n     * @param\n     */\n    logout() {\n        // destroy the session\n        localStorage.removeItem('session');\n    }\n\n\n    /**\n     * @ignore\n     * handle request error in case of server error\n     *\n     * @param error\n     * @returns\n     */\n    protected handleRequestError(error: HttpErrorResponse): Observable<ApiServiceError> {\n        const serviceError = new ApiServiceError();\n        serviceError.header = { 'server': error.headers.get('Server') };\n        serviceError.status = error.status;\n        serviceError.statusText = error.statusText;\n        serviceError.errorInfo = error.message;\n        serviceError.url = error.url;\n        return throwError(serviceError);\n    }\n}\n","import { Component, Input, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { ApiServiceError, ApiServiceResult } from '@knora/core';\nimport { AuthenticationService } from '../authentication.service';\nimport { SessionService } from '../session/session.service';\n\n@Component({\n    selector: 'kui-login-form',\n    templateUrl: './login-form.component.html',\n    styleUrls: ['./login-form.component.scss']\n})\nexport class LoginFormComponent implements OnInit {\n\n    /**\n     * @param {string} [navigate]\n     * navigate to the defined url after successful login\n     */\n    @Input() navigate?: string;\n\n    /**\n     * @param {string} [color]\n     * set your theme color here,\n     * it will be used in the progress-indicator\n     */\n    @Input() color?: string;\n\n    returnUrl: string;\n\n    // is there already a valid session?\n    loggedInUser: string;\n\n    // form\n    frm: FormGroup;\n\n    loading = false;\n\n    // general error message\n    errorMessage: any;\n\n    // specific error messages\n    loginErrorUser = false;\n    loginErrorPw = false;\n    loginErrorServer = false;\n\n    // labels for the login form\n    login = {\n        title: 'Login',\n        name: 'Username',\n        pw: 'Password',\n        button: 'Login',\n        remember: 'Remember me',\n        forgot_pw: 'Forgot password?',\n        error: {\n            failed: 'Password or username is wrong',\n            server: 'There\\'s an error with the server connection. Try it again later or inform the Knora Team'\n        }\n    };\n\n    // error definitions for the following form fields\n    formErrors = {\n        'username': '',\n        'password': ''\n    };\n\n    // error messages for the form fields defined in formErrors\n    validationMessages = {\n        'username': {\n            'required': 'user name is required.'\n        },\n        'password': {\n            'required': 'password is required'\n        }\n    };\n\n\n    constructor (private _auth: AuthenticationService,\n        private _session: SessionService,\n        private _fb: FormBuilder,\n        private _route: ActivatedRoute,\n        private _router: Router) {\n    }\n\n\n    ngOnInit() {\n\n        // check if a user is already logged in\n        if (this._session.validateSession()) {\n            this.loggedInUser = JSON.parse(localStorage.getItem('session')).user.name;\n        } else {\n            this.buildForm();\n        }\n    }\n\n    buildForm(): void {\n        this.frm = this._fb.group({\n            username: ['', Validators.required],\n            password: ['', Validators.required]\n        });\n\n        this.frm.valueChanges\n            .subscribe(data => this.onValueChanged(data));\n    }\n\n    /**\n     * @ignore\n     *\n     * check for errors while using the form\n     * @param data\n     */\n    onValueChanged(data?: any) {\n\n        if (!this.frm) {\n            return;\n        }\n\n        const form = this.frm;\n\n        Object.keys(this.formErrors).map(field => {\n            this.formErrors[field] = '';\n            const control = form.get(field);\n            if (control && control.dirty && !control.valid) {\n                const messages = this.validationMessages[field];\n                Object.keys(control.errors).map(key => {\n                    this.formErrors[field] += messages[key] + ' ';\n                });\n            }\n        });\n    }\n\n    doLogin() {\n\n        // reset the error messages\n        this.errorMessage = undefined;\n        this.loginErrorUser = false;\n        this.loginErrorPw = false;\n        this.loginErrorServer = false;\n\n        // make sure form values are valid\n        if (this.frm.invalid) {\n            this.loginErrorPw = true;\n            this.loginErrorUser = true;\n            return;\n        }\n\n        // Reset status\n        this.loading = true;\n\n        // Grab values from form\n        const username = this.frm.get('username').value;\n        const password = this.frm.get('password').value;\n\n        this._auth.login(username, password)\n            .subscribe(\n                (response: ApiServiceResult) => {\n\n                    // we have a token; set the session now\n                    this._session.setSession(response.body.token, username);\n\n                    setTimeout(() => {\n                        // get return url from route parameters or default to '/'\n                        this.returnUrl = this._route.snapshot.queryParams['returnUrl'] || '/';\n\n\n                        // go back to the previous route or to the route defined in the @Input if navigate exists\n                        if (!this.navigate) {\n                            this._router.navigate([this.returnUrl]);\n                        } else {\n                            this._router.navigate([this.navigate]);\n                        }\n\n                        this.loading = false;\n                    }, 2000);\n                },\n                (error: ApiServiceError) => {\n                    // error handling\n                    if (error.status === 0) {\n                        this.loginErrorUser = false;\n                        this.loginErrorPw = false;\n                        this.loginErrorServer = true;\n                    }\n                    if (error.status === 401) {\n                        this.loginErrorUser = false;\n                        this.loginErrorPw = true;\n                        this.loginErrorServer = false;\n                    }\n                    if (error.status === 404) {\n                        this.loginErrorUser = true;\n                        this.loginErrorPw = false;\n                        this.loginErrorServer = false;\n                    }\n                    this.errorMessage = <any>error;\n                    this.loading = false;\n                }\n            );\n\n    }\n\n    logout() {\n        this._auth.logout();\n        location.reload(true);\n    }\n\n}\n","import { HttpEvent, HttpHandler, HttpInterceptor, HttpRequest } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { SessionService } from '../session/session.service';\n\n@Injectable()\nexport class JwtInterceptor implements HttpInterceptor {\n\n    constructor(private _session: SessionService) {\n    }\n\n    intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n        // add authorization header with jwt token if available\n\n        if (this._session.validateSession()) {\n            // the session is valid (and up to date)\n            const jwt = JSON.parse(localStorage.getItem('session')).user.jwt;\n            request = request.clone({\n                setHeaders: {\n                    Authorization: `Bearer ${jwt}`\n                }\n            });\n        } else {\n            this._session.destroySession();\n        }\n\n\n        return next.handle(request);\n    }\n}\n","import { HttpEvent, HttpHandler, HttpInterceptor, HttpRequest } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { SessionService } from '../session/session.service';\n\n@Injectable()\nexport class WithCredentialsInterceptor implements HttpInterceptor {\n\n    constructor(private _session: SessionService) {\n    }\n\n    intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n        // add authorization header with jwt token if available\n\n        // console.log('WithCredentialsInterceptor - intercept - request: ', request);\n\n        request = request.clone({\n            withCredentials: true\n        });\n\n        return next.handle(request);\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { HTTP_INTERCEPTORS, HttpClientModule } from '@angular/common/http';\nimport { NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatInputModule } from '@angular/material/input';\nimport { KuiActionModule } from '@knora/action';\n\nimport { LoginFormComponent } from './login-form/login-form.component';\nimport { JwtInterceptor } from './interceptors/jwt.interceptor';\nimport { WithCredentialsInterceptor } from './interceptors/with-credentials.interceptor';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        KuiActionModule,\n        MatCardModule,\n        MatIconModule,\n        MatInputModule,\n        MatButtonModule,\n        MatDialogModule,\n        MatFormFieldModule,\n        ReactiveFormsModule,\n        HttpClientModule\n    ],\n    declarations: [\n        LoginFormComponent\n    ],\n    exports: [\n        LoginFormComponent\n    ],\n    providers: [\n        { provide: HTTP_INTERCEPTORS, useClass: JwtInterceptor, multi: true },\n        { provide: HTTP_INTERCEPTORS, useClass: WithCredentialsInterceptor, multi: true}\n    ]\n})\nexport class KuiAuthenticationModule {\n}\n"]}