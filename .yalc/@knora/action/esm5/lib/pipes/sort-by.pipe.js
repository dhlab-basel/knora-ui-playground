import * as tslib_1 from "tslib";
import { Pipe } from '@angular/core';
var SortByPipe = /** @class */ (function () {
    function SortByPipe() {
    }
    /**
     * TODO: add description
     */
    SortByPipe.prototype.transform = function (array, args) {
        if (array !== undefined) {
            array.sort(function (a, b) {
                if (args) {
                    a[args] = (a[args] === null ? '' : a[args]);
                    b[args] = (b[args] === null ? '' : b[args]);
                    if (a[args].toLowerCase() < b[args].toLowerCase()) {
                        return -1;
                    }
                    else if (a[args].toLowerCase() > b[args].toLowerCase()) {
                        return 1;
                    }
                    else {
                        return 0;
                    }
                }
            });
        }
        return array;
    };
    SortByPipe = tslib_1.__decorate([
        Pipe({
            name: 'kuiSortBy'
        })
    ], SortByPipe);
    return SortByPipe;
}());
export { SortByPipe };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic29ydC1ieS5waXBlLmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGtub3JhL2FjdGlvbi8iLCJzb3VyY2VzIjpbImxpYi9waXBlcy9zb3J0LWJ5LnBpcGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLE9BQU8sRUFBRSxJQUFJLEVBQWlCLE1BQU0sZUFBZSxDQUFDO0FBS3BEO0lBQUE7SUF5QkEsQ0FBQztJQXZCRzs7T0FFRztJQUNILDhCQUFTLEdBQVQsVUFBVSxLQUFpQixFQUFFLElBQVk7UUFDckMsSUFBSSxLQUFLLEtBQUssU0FBUyxFQUFFO1lBQ3JCLEtBQUssQ0FBQyxJQUFJLENBQUMsVUFBQyxDQUFNLEVBQUUsQ0FBTTtnQkFDdEIsSUFBSSxJQUFJLEVBQUU7b0JBQ04sQ0FBQyxDQUFDLElBQUksQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxLQUFLLElBQUksQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQztvQkFDNUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxLQUFLLElBQUksQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQztvQkFDNUMsSUFBSSxDQUFDLENBQUMsSUFBSSxDQUFDLENBQUMsV0FBVyxFQUFFLEdBQUcsQ0FBQyxDQUFDLElBQUksQ0FBQyxDQUFDLFdBQVcsRUFBRSxFQUFFO3dCQUMvQyxPQUFPLENBQUMsQ0FBQyxDQUFDO3FCQUNiO3lCQUFNLElBQUksQ0FBQyxDQUFDLElBQUksQ0FBQyxDQUFDLFdBQVcsRUFBRSxHQUFHLENBQUMsQ0FBQyxJQUFJLENBQUMsQ0FBQyxXQUFXLEVBQUUsRUFBRTt3QkFDdEQsT0FBTyxDQUFDLENBQUM7cUJBQ1o7eUJBQU07d0JBQ0gsT0FBTyxDQUFDLENBQUM7cUJBQ1o7aUJBQ0o7WUFDTCxDQUFDLENBQUMsQ0FBQztTQUNOO1FBRUQsT0FBTyxLQUFLLENBQUM7SUFDakIsQ0FBQztJQXZCUSxVQUFVO1FBSHRCLElBQUksQ0FBQztZQUNGLElBQUksRUFBRSxXQUFXO1NBQ3BCLENBQUM7T0FDVyxVQUFVLENBeUJ0QjtJQUFELGlCQUFDO0NBQUEsQUF6QkQsSUF5QkM7U0F6QlksVUFBVSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFBpcGUsIFBpcGVUcmFuc2Zvcm0gfSBmcm9tICdAYW5ndWxhci9jb3JlJztcblxuQFBpcGUoe1xuICAgIG5hbWU6ICdrdWlTb3J0QnknXG59KVxuZXhwb3J0IGNsYXNzIFNvcnRCeVBpcGUgaW1wbGVtZW50cyBQaXBlVHJhbnNmb3JtIHtcblxuICAgIC8qKlxuICAgICAqIFRPRE86IGFkZCBkZXNjcmlwdGlvblxuICAgICAqL1xuICAgIHRyYW5zZm9ybShhcnJheTogQXJyYXk8YW55PiwgYXJnczogc3RyaW5nKTogQXJyYXk8YW55PiB7XG4gICAgICAgIGlmIChhcnJheSAhPT0gdW5kZWZpbmVkKSB7XG4gICAgICAgICAgICBhcnJheS5zb3J0KChhOiBhbnksIGI6IGFueSkgPT4ge1xuICAgICAgICAgICAgICAgIGlmIChhcmdzKSB7XG4gICAgICAgICAgICAgICAgICAgIGFbYXJnc10gPSAoYVthcmdzXSA9PT0gbnVsbCA/ICcnIDogYVthcmdzXSk7XG4gICAgICAgICAgICAgICAgICAgIGJbYXJnc10gPSAoYlthcmdzXSA9PT0gbnVsbCA/ICcnIDogYlthcmdzXSk7XG4gICAgICAgICAgICAgICAgICAgIGlmIChhW2FyZ3NdLnRvTG93ZXJDYXNlKCkgPCBiW2FyZ3NdLnRvTG93ZXJDYXNlKCkpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiAtMTtcbiAgICAgICAgICAgICAgICAgICAgfSBlbHNlIGlmIChhW2FyZ3NdLnRvTG93ZXJDYXNlKCkgPiBiW2FyZ3NdLnRvTG93ZXJDYXNlKCkpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiAxO1xuICAgICAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIDA7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfVxuXG4gICAgICAgIHJldHVybiBhcnJheTtcbiAgICB9XG5cbn1cblxuIl19