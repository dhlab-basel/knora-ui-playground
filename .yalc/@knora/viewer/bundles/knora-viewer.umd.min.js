!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports,require("@angular/core"),require("@knora/core"),require("@angular/router"),require("@angular/common"),require("@angular/forms"),require("@angular/flex-layout"),require("@angular/material/autocomplete"),require("@angular/material/button"),require("@angular/material/card"),require("@angular/material/checkbox"),require("@angular/material/core"),require("@angular/material/expansion"),require("@angular/material/form-field"),require("@angular/material/icon"),require("@angular/material/input"),require("@angular/material/list"),require("@angular/material/slide-toggle"),require("@angular/material/tabs"),require("@angular/material/toolbar"),require("@angular/material/tooltip"),require("@angular/material/datepicker"),require("@knora/action")):"function"==typeof define&&define.amd?define("@knora/viewer",["exports","@angular/core","@knora/core","@angular/router","@angular/common","@angular/forms","@angular/flex-layout","@angular/material/autocomplete","@angular/material/button","@angular/material/card","@angular/material/checkbox","@angular/material/core","@angular/material/expansion","@angular/material/form-field","@angular/material/icon","@angular/material/input","@angular/material/list","@angular/material/slide-toggle","@angular/material/tabs","@angular/material/toolbar","@angular/material/tooltip","@angular/material/datepicker","@knora/action"],t):t(((e=e||self).knora=e.knora||{},e.knora.viewer={}),e.ng.core,e["@knora/core"],e.ng.router,e.ng.common,e.ng.forms,e.ng["flex-layout"],e.ng.material.autocomplete,e.ng.material.button,e.ng.material.card,e.ng.material.checkbox,e.ng.material.core,e.ng.material.expansion,e.ng.material["form-field"],e.ng.material.icon,e.ng.material.input,e.ng.material.list,e.ng.material["slide-toggle"],e.ng.material.tabs,e.ng.material.toolbar,e.ng.material.tooltip,e.ng.material.datepicker,e["@knora/action"])}(this,function(e,t,n,o,i,r,a,s,l,p,u,c,d,g,m,h,f,v,y,x,b,k,w){"use strict";function O(e,t,n,o){var i,r=arguments.length,a=r<3?t:null===o?o=Object.getOwnPropertyDescriptor(t,n):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)a=Reflect.decorate(e,t,n,o);else for(var s=e.length-1;s>=0;s--)(i=e[s])&&(a=(r<3?i(a):r>3?i(t,n,a):i(t,n))||a);return r>3&&a&&Object.defineProperty(t,n,a),a}function I(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)}function R(e){var t="function"==typeof Symbol&&e[Symbol.iterator],n=0;return t?t.call(e):{next:function(){return e&&n>=e.length&&(e=void 0),{value:e&&e[n++],done:!e}}}}var C=function(){function e(){}return e.prototype.ngOnInit=function(){},e=O([t.Component({selector:"kui-annotation",template:"<p>\n  annotation works!\n</p>\n",styles:[""]}),I("design:paramtypes",[])],e)}(),S=function(){function e(){}return e.prototype.ngOnInit=function(){},e=O([t.Component({selector:"kui-audio",template:"<p>\n  audio works!\n</p>\n",styles:[""]}),I("design:paramtypes",[])],e)}(),j=function(){function e(){}return e.prototype.ngOnInit=function(){},e=O([t.Component({selector:"kui-collection",template:"<p>\n  collection works!\n</p>\n",styles:[""]}),I("design:paramtypes",[])],e)}(),V=function(){function e(){}return e.prototype.ngOnInit=function(){},e=O([t.Component({selector:"kui-ddd",template:"<p>\n  ddd works!\n</p>\n",styles:[""]}),I("design:paramtypes",[])],e)}(),_=function(){function e(){}return e.prototype.ngOnInit=function(){},e=O([t.Component({selector:"kui-document",template:"<p>\n  document works!\n</p>\n",styles:[""]}),I("design:paramtypes",[])],e)}(),M=function(){function e(){}return e.prototype.ngOnInit=function(){},e=O([t.Component({selector:"kui-link-obj",template:"<p>\n  link-obj works!\n</p>\n",styles:[""]}),I("design:paramtypes",[])],e)}(),L=function(){function e(){}return e.prototype.ngOnInit=function(){},e=O([t.Component({selector:"kui-moving-image",template:'\x3c!-- video container --\x3e\n<div class="moving-image-viewer">\n\n  \x3c!-- video source --\x3e\n  <video></video>\n\n  \x3c!-- timeline incl. preview --\x3e\n  <div class="kui-mi-timeline">\n\n  </div>\n  <div class="kui-mi-navigation">\n\n\n  </div>\n\n</div>\n',styles:[""]}),I("design:paramtypes",[])],e)}(),P=function(){function e(){}return e.prototype.ngOnInit=function(){},e=O([t.Component({selector:"kui-object",template:"<p>\n  object works!\n</p>",styles:[""]}),I("design:paramtypes",[])],e)}(),D=function(){function e(){}return e.prototype.ngOnInit=function(){},e=O([t.Component({selector:"kui-region",template:"<p>\n  region works!\n</p>\n",styles:[""]}),I("design:paramtypes",[])],e)}(),F=function(){function e(e){this.regionResource=e}return e.prototype.getGeometries=function(){return this.regionResource.properties[n.KnoraConstants.hasGeometry]},e}(),T=function(){return function(e,t){this.stillImageFileValue=e,this.regions=t}}(),A=function(){return function(e,t){this.geometry=e,this.region=t}}(),E=function(){function e(e){this.elementRef=e,this.currentImageIndex=new t.EventEmitter,this.regionHovered=new t.EventEmitter,this.regions={}}var o;return o=e,e.surfaceOfRectangularRegion=function(e){return"rectangle"!==e.type?(console.log("expected rectangular region, but "+e.type+" given"),0):(Math.max(e.points[0].x,e.points[1].x)-Math.min(e.points[0].x,e.points[1].x))*(Math.max(e.points[0].y,e.points[1].y)-Math.min(e.points[0].y,e.points[1].y))},e.prepareTileSourcesFromFileValues=function(e){var t,n,o=0,i=[];try{for(var r=R(e),a=r.next();!a.done;a=r.next()){var s=a.value,l=s.imageServerIIIFBaseURL+"/"+s.imageFilename,p=s.dimX,u=s.dimY;i.push({tileSource:{"@context":"http://iiif.io/api/image/2/context.json","@id":l,height:u,width:p,profile:["http://iiif.io/api/image/2/level2.json"],protocol:"http://iiif.io/api/image",tiles:[{scaleFactors:[1,2,4,8,16,32],width:1024}]},x:o,y:0}),o++}}catch(c){t={error:c}}finally{try{a&&!a.done&&(n=r["return"])&&n.call(r)}finally{if(t)throw t.error}}return i},e.prototype.ngOnChanges=function(e){e.images&&e.images.isFirstChange()&&this.setupViewer(),e.images?(this.openImages(),this.renderRegions(),this.unhighlightAllRegions(),this.activateRegion!==undefined&&this.highlightRegion(this.activateRegion)):e.activateRegion&&(this.unhighlightAllRegions(),this.activateRegion!==undefined&&this.highlightRegion(this.activateRegion)),this.viewer},e.prototype.ngOnInit=function(){},e.prototype.ngOnDestroy=function(){this.viewer&&(this.viewer.destroy(),this.viewer=undefined)},e.prototype.updateImages=function(){this.viewer||this.setupViewer(),this.openImages()},e.prototype.updateRegions=function(){this.viewer||this.setupViewer(),this.renderRegions()},e.prototype.highlightRegion=function(e){var t,n,o=this.regions[e];if(o!==undefined)try{for(var i=R(o),r=i.next();!r.done;r=i.next()){r.value.setAttribute("class","roi-svgoverlay active")}}catch(a){t={error:a}}finally{try{r&&!r.done&&(n=i["return"])&&n.call(i)}finally{if(t)throw t.error}}},e.prototype.unhighlightAllRegions=function(){var e,t;for(var n in this.regions)if(this.regions.hasOwnProperty(n))try{for(var o=R(this.regions[n]),i=o.next();!i.done;i=o.next()){i.value.setAttribute("class","roi-svgoverlay")}}catch(r){e={error:r}}finally{try{i&&!i.done&&(t=o["return"])&&t.call(o)}finally{if(e)throw e.error}}},e.prototype.setupViewer=function(){var e=this.elementRef.nativeElement.getElementsByClassName("osd-container")[0],t={element:e,sequenceMode:!0,showReferenceStrip:!0,showNavigator:!0,zoomInButton:"KUI_OSD_ZOOM_IN",zoomOutButton:"KUI_OSD_ZOOM_OUT",previousButton:"KUI_OSD_PREV_PAGE",nextButton:"KUI_OSD_NEXT_PAGE",homeButton:"KUI_OSD_HOME",fullPageButton:"KUI_OSD_FULL_PAGE",rotateLeftButton:"KUI_OSD_ROTATE_LEFT",rotateRightButton:"KUI_OSD_ROTATE_RIGHT"};this.viewer=new OpenSeadragon.Viewer(t),this.viewer.addHandler("full-screen",function(t){t.fullScreen?e.classList.add("fullscreen"):e.classList.remove("fullscreen")}),this.viewer.addHandler("resize",function(e){e.eventSource.svgOverlay().resize()});var n=this.images.map(function(e){return e.stillImageFileValue});this.viewer.addHandler("page",function(e){console.log("event on page",e),console.log("Now on page",e.page);var t=e.page;console.log("= id",n[t].id);n[t].id})},e.prototype.openImages=function(){var e=this.images.map(function(e){return e.stillImageFileValue}),t=o.prepareTileSourcesFromFileValues(e);this.removeOverlays(),this.viewer.open(t)},e.prototype.removeOverlays=function(){var e,t;for(var n in this.regions)if(this.regions.hasOwnProperty(n))try{for(var o=R(this.regions[n]),i=o.next();!i.done;i=o.next()){var r=i.value;r instanceof SVGPolygonElement&&r.remove()}}catch(a){e={error:a}}finally{try{i&&!i.done&&(t=o["return"])&&t.call(o)}finally{if(e)throw e.error}}this.regions={},this.viewer.clearOverlays()},e.prototype.renderRegions=function(){var e,t,n=this;this.removeOverlays();var i=0,r=function(e){var t,r,s=e.stillImageFileValue.dimY/e.stillImageFileValue.dimX,l=[];e.regions.map(function(e){n.regions[e.regionResource.id]=[],e.getGeometries().map(function(t){var n=new A(t.geometry,e.regionResource);l.push(n)})}),l.sort(function(e,t){return"rectangle"===e.geometry.type&&"rectangle"===t.geometry.type?o.surfaceOfRectangularRegion(e.geometry)<o.surfaceOfRectangularRegion(t.geometry)?1:-1:0});try{for(var p=R(l),u=p.next();!u.done;u=p.next()){var c=u.value,d=c.geometry;a.createSVGOverlay(c.region.id,d,s,i,c.region.label)}}catch(g){t={error:g}}finally{try{u&&!u.done&&(r=p["return"])&&r.call(p)}finally{if(t)throw t.error}}i++},a=this;try{for(var s=R(this.images),l=s.next();!l.done;l=s.next()){r(l.value)}}catch(p){e={error:p}}finally{try{l&&!l.done&&(t=s["return"])&&t.call(s)}finally{if(e)throw e.error}}},e.prototype.createSVGOverlay=function(e,t,n,o,i){var r,a=this,s=t.lineColor,l=t.lineWidth;switch(t.type){case"rectangle":r=document.createElementNS("http://www.w3.org/2000/svg","polygon"),this.addSVGAttributesRectangle(r,t,n,o);break;case"polygon":r=document.createElementNS("http://www.w3.org/2000/svg","polygon"),this.addSVGAttributesPolygon(r,t,n,o);break;case"circle":r=document.createElementNS("http://www.w3.org/2000/svg","circle"),this.addSVGAttributesCircle(r,t,n,o);break;default:return void console.log("ERROR: StillImageOSDViewerComponent.createSVGOverlay: unknown geometryType: "+t.type)}r.id="roi-svgoverlay-"+1e4*Math.random(),r.setAttribute("class","roi-svgoverlay"),r.setAttribute("style","stroke: "+s+"; stroke-width: "+l+"px;"),r.addEventListener("click",function(){a.regionHovered.emit(e)},!1);var p=document.createElementNS("http://www.w3.org/2000/svg","title");p.textContent=i;var u=document.createElementNS("http://www.w3.org/2000/svg","g");u.appendChild(p),u.appendChild(r),this.viewer.svgOverlay().node().appendChild(u),this.regions[e].push(r)},e.prototype.addSVGAttributesRectangle=function(e,t,o,i){var r=t.points[0],a=t.points[1],s=new n.Point2D(Math.min(r.x,a.x),Math.min(r.y,a.y)),l=new n.Point2D(Math.max(r.x,a.x),Math.max(r.y,a.y)),p=[s,new n.Point2D(Math.max(r.x,a.x),Math.min(r.y,a.y)),l,new n.Point2D(Math.min(r.x,a.x),Math.max(r.y,a.y))],u=this.image2ViewPortCoords(p,o,i),c=this.createSVGPolygonPointsAttribute(u);e.setAttribute("points",c)},e.prototype.addSVGAttributesPolygon=function(e,t,n,o){var i=this.image2ViewPortCoords(t.points,n,o),r=this.createSVGPolygonPointsAttribute(i);e.setAttribute("points",r)},e.prototype.addSVGAttributesCircle=function(e,t,n,o){var i=this.image2ViewPortCoords(t.points,n,o),r=String(i[0].x),a=String(i[0].y),s=String(Math.sqrt(t.radius.x*t.radius.x+n*n*t.radius.y*t.radius.y));e.setAttribute("cx",r),e.setAttribute("cy",a),e.setAttribute("r",s)},e.prototype.image2ViewPortCoords=function(e,t,o){return e.map(function(e){return new n.Point2D(e.x+o,e.y*t)})},e.prototype.createSVGPolygonPointsAttribute=function(e){var t="";for(var n in e)e.hasOwnProperty(n)&&(t+=e[n].x,t+=",",t+=e[n].y,t+=" ");return t},e.prototype.getCurrentImage=function(){},O([t.Input(),I("design:type",Array)],e.prototype,"images",void 0),O([t.Input(),I("design:type",String)],e.prototype,"imageCaption",void 0),O([t.Input(),I("design:type",String)],e.prototype,"activateRegion",void 0),O([t.Output(),I("design:type",t.EventEmitter)],e.prototype,"currentImageIndex",void 0),O([t.Output(),I("design:type",Object)],e.prototype,"regionHovered",void 0),e=o=O([t.Component({selector:"kui-still-image",template:'<div class="still-image-viewer">\n    <div class="navigation left">\n        <button mat-button class="full-size" id="KUI_OSD_PREV_PAGE">\n            <mat-icon>keyboard_arrow_left</mat-icon>\n        </button>\n    </div>\n\n    \x3c!-- main content with navigation and osd viewer --\x3e\n    <div class="content">\n\n        \x3c!-- openseadragon (osd) viewer --\x3e\n        <div class="osd-container"></div>\n        \x3c!-- /openseadragon (osd) --\x3e\n\n        \x3c!-- footer with image caption e.g. copyright information --\x3e\n        <div class="footer">\n            <p class="mat-caption" [innerHtml]="imageCaption"></p>\n        </div>\n\n        \x3c!-- action panel with tools for image --\x3e\n        <mat-toolbar class="action">\n            <mat-toolbar-row>\n                \x3c!-- home button --\x3e\n                <span>\n                    <button mat-icon-button id="KUI_OSD_HOME">\n                        <mat-icon>home</mat-icon>\n                    </button>\n                </span>\n                \x3c!-- zoom buttons --\x3e\n                <span class="fill-remaining-space"></span>\n                <span>\n                    <button mat-icon-button id="KUI_OSD_ZOOM_IN">\n                        <mat-icon>add</mat-icon>\n                    </button>\n                    <button mat-icon-button id="KUI_OSD_ZOOM_OUT">\n                        <mat-icon>remove</mat-icon>\n                    </button>\n                </span>\n                \x3c!-- window button --\x3e\n                <span class="fill-remaining-space"></span>\n                <span>\n                    <button mat-icon-button id="KUI_OSD_FULL_PAGE">\n                        <mat-icon>fullscreen</mat-icon>\n                    </button>\n                </span>\n            </mat-toolbar-row>\n        </mat-toolbar>\n\n    </div>\n\n    <div class="navigation">\n        <button mat-button class="full-size" id="KUI_OSD_NEXT_PAGE" (click)="getCurrentImage()">\n            <mat-icon>keyboard_arrow_right</mat-icon>\n        </button>\n    </div>\n\n</div>\n\n\x3c!-- simple image viewer e.g. as a preview --\x3e\n\x3c!-- TODO: handle images array --\x3e\n\x3c!--<img *ngIf="simple && images?.length === 1; else osdViewer" [src]="simpleImageExample">--\x3e\n\n\n\x3c!--\n    <div>\n        <span *ngIf="images.length > 1" (click)="gotoLeft()">&lt;&lt;</span>\n        <span *ngIf="images.length > 1" (click)="gotoRight()">&gt;&gt;</span>\n    </div>\n--\x3e\n',styles:[".still-image-viewer{display:inline-flex;height:400px;max-width:800px;width:100%}@media (max-height:636px){.still-image-viewer{height:300px}}.still-image-viewer .navigation{height:calc(400px + 64px + 24px);width:36px}.still-image-viewer .navigation .mat-button.full-size{height:100%!important;width:36px!important;padding:0!important;min-width:36px!important}.still-image-viewer .content{height:calc(400px + 64px + 24px);max-width:calc(800px - (2 * 36px));width:calc(100% - (2 * 36px))}.still-image-viewer .content .osd-container{color:#ccc;background-color:#000;height:400px}.still-image-viewer .content .osd-container.fullscreen{max-width:100vw}.still-image-viewer .content .footer p{color:#ccc;background-color:#000;height:24px;margin:0;padding:0 16px}::ng-deep .roi-svgoverlay{opacity:.4;fill:transparent;stroke:#00695c;stroke-width:2px;vector-effect:non-scaling-stroke}.roi-svgoverlay:focus,::ng-deep .roi-svgoverlay:hover{opacity:1}::ng-deep .roi-svgoverlay.active{opacity:1}"]}),I("design:paramtypes",[t.ElementRef])],e)}(),K=function(){function e(){}return e.prototype.ngOnInit=function(){},e=O([t.Component({selector:"kui-text",template:"<p>\n  text works!\n</p>\n",styles:[""]}),I("design:paramtypes",[])],e)}(),q=function(){function e(){}return Object.defineProperty(e.prototype,"valueObject",{get:function(){return this._booleanValueObj},set:function(e){this._booleanValueObj=e},enumerable:!0,configurable:!0}),O([t.Input(),I("design:type",n.ReadBooleanValue),I("design:paramtypes",[n.ReadBooleanValue])],e.prototype,"valueObject",null),e=O([t.Component({selector:"kui-boolean-value",template:'<mat-checkbox [checked]="valueObject.bool" disabled="true"></mat-checkbox>\n',styles:[".mat-form-field{width:320px}.fill-remaining-space{flex:1 1 auto}.center{text-align:center}a{text-decoration:none;color:inherit}.kui-link{cursor:pointer;border-bottom:2px solid rgba(0,105,92,.25)}.kui-link:hover{box-shadow:0 -10px 0 rgba(0,105,92,.25) inset}.lv-html-text{max-height:60px;position:relative;overflow:hidden}.lv-read-more{position:absolute;bottom:0;left:0;width:100%;text-align:center;margin:0;padding:30px 0;border-radius:3px}"]}),I("design:paramtypes",[])],e)}(),G=function(){function e(){}return Object.defineProperty(e.prototype,"valueObject",{get:function(){return this._colorValueObj},set:function(e){this._colorValueObj=e},enumerable:!0,configurable:!0}),O([t.Input(),I("design:type",n.ReadColorValue),I("design:paramtypes",[n.ReadColorValue])],e.prototype,"valueObject",null),e=O([t.Component({selector:"kui-color-value",template:'<span [style.background-color]="valueObject.colorHex">{{valueObject.colorHex}}</span>',styles:[".fill-remaining-space{flex:1 1 auto}.center{text-align:center}a{text-decoration:none;color:inherit}.kui-link{cursor:pointer;border-bottom:2px solid rgba(0,105,92,.25)}.kui-link:hover{box-shadow:0 -10px 0 rgba(0,105,92,.25) inset}.lv-html-text{max-height:60px;position:relative;overflow:hidden}.lv-read-more{position:absolute;bottom:0;left:0;width:100%;text-align:center;margin:0;padding:30px 0;border-radius:3px}.mat-form-field{width:36px;overflow-x:visible}"]}),I("design:paramtypes",[])],e)}(),U=function(){function e(){}return Object.defineProperty(e.prototype,"calendar",{get:function(){return this._calendar},set:function(e){this._calendar=e},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"era",{get:function(){return this._era},set:function(e){this._era=e},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"valueObject",{get:function(){return this._dateValueObj},set:function(e){this._dateValueObj=e;var t=this.valueObject.getDateSalsah();t instanceof n.DateRangeSalsah?(this.period=!0,this.dates=[this.getJSDate(t.start),this.getJSDate(t.end)]):(this.period=!1,this.dates=[this.getJSDate(t)])},enumerable:!0,configurable:!0}),e.prototype.getJSDate=function(e){return e.precision===n.Precision.yearPrecision?{format:"yyyy",date:new Date(e.year.toString()),era:e.era,calendar:e.calendar}:e.precision===n.Precision.monthPrecision?{format:"MMMM yyyy",date:new Date(e.year,e.month-1,1),era:e.era,calendar:e.calendar}:e.precision===n.Precision.dayPrecision?{format:"longDate",date:new Date(e.year,e.month-1,e.day),era:e.era,calendar:e.calendar}:void console.error("Error: incorrect precision for date")},O([t.Input(),I("design:type",Boolean),I("design:paramtypes",[Boolean])],e.prototype,"calendar",null),O([t.Input(),I("design:type",Boolean),I("design:paramtypes",[Boolean])],e.prototype,"era",null),O([t.Input(),I("design:type",n.ReadDateValue),I("design:paramtypes",[n.ReadDateValue])],e.prototype,"valueObject",null),e=O([t.Component({selector:"kui-date-value",template:'<span *ngIf="period; else preciseDate">\n    {{dates[0].date | date: dates[0].format}}\n    <span *ngIf="era">\n        {{dates[0].era}}\n    </span>\n    - {{dates[1].date | date: dates[1].format}}\n    <span *ngIf="era">\n        {{dates[1].era}}\n    </span>\n\n    <span *ngIf="calendar">\n        ({{dates[0].calendar}})\n    </span>\n</span>\n\n<ng-template #preciseDate>\n\n    <span>\n        {{dates[0].date | date: dates[0].format}}\n        <span *ngIf="era">\n            {{dates[0].era}}\n        </span>\n        <span *ngIf="calendar">\n            ({{dates[0].calendar}})\n        </span>\n    </span>\n\n</ng-template>\n',styles:[".mat-form-field{width:320px}.fill-remaining-space{flex:1 1 auto}.center{text-align:center}a{text-decoration:none;color:inherit}.kui-link{cursor:pointer;border-bottom:2px solid rgba(0,105,92,.25)}.kui-link:hover{box-shadow:0 -10px 0 rgba(0,105,92,.25) inset}.lv-html-text{max-height:60px;position:relative;overflow:hidden}.lv-read-more{position:absolute;bottom:0;left:0;width:100%;text-align:center;margin:0;padding:30px 0;border-radius:3px}"]}),I("design:paramtypes",[])],e)}(),N=function(){function e(){}return Object.defineProperty(e.prototype,"valueObject",{get:function(){return this._decimalValueObj},set:function(e){this._decimalValueObj=e},enumerable:!0,configurable:!0}),O([t.Input(),I("design:type",n.ReadDecimalValue),I("design:paramtypes",[n.ReadDecimalValue])],e.prototype,"valueObject",null),e=O([t.Component({selector:"kui-decimal-value",template:"<span>{{valueObject.decimal}}</span>",styles:[".mat-form-field{width:320px}.fill-remaining-space{flex:1 1 auto}.center{text-align:center}a{text-decoration:none;color:inherit}.kui-link{cursor:pointer;border-bottom:2px solid rgba(0,105,92,.25)}.kui-link:hover{box-shadow:0 -10px 0 rgba(0,105,92,.25) inset}.lv-html-text{max-height:60px;position:relative;overflow:hidden}.lv-read-more{position:absolute;bottom:0;left:0;width:100%;text-align:center;margin:0;padding:30px 0;border-radius:3px}"]}),I("design:paramtypes",[])],e)}(),B=function(){function e(){}return e.prototype.ngOnInit=function(){},e=O([t.Component({selector:"kui-external-res-value",template:"<p>\n  external-res-value works!\n</p>\n",styles:[".mat-form-field{width:320px}.fill-remaining-space{flex:1 1 auto}.center{text-align:center}a{text-decoration:none;color:inherit}.kui-link{cursor:pointer;border-bottom:2px solid rgba(0,105,92,.25)}.kui-link:hover{box-shadow:0 -10px 0 rgba(0,105,92,.25) inset}.lv-html-text{max-height:60px;position:relative;overflow:hidden}.lv-read-more{position:absolute;bottom:0;left:0;width:100%;text-align:center;margin:0;padding:30px 0;border-radius:3px}"]}),I("design:paramtypes",[])],e)}(),H=function(){function e(){}return Object.defineProperty(e.prototype,"valueObject",{get:function(){return this._geomValueObj},set:function(e){this._geomValueObj=e},enumerable:!0,configurable:!0}),O([t.Input(),I("design:type",n.ReadGeomValue),I("design:paramtypes",[n.ReadGeomValue])],e.prototype,"valueObject",null),e=O([t.Component({selector:"kui-geometry-value",template:"<span>{{valueObject.geometryString}}</span>",styles:[".mat-form-field{width:320px}.fill-remaining-space{flex:1 1 auto}.center{text-align:center}a{text-decoration:none;color:inherit}.kui-link{cursor:pointer;border-bottom:2px solid rgba(0,105,92,.25)}.kui-link:hover{box-shadow:0 -10px 0 rgba(0,105,92,.25) inset}.lv-html-text{max-height:60px;position:relative;overflow:hidden}.lv-read-more{position:absolute;bottom:0;left:0;width:100%;text-align:center;margin:0;padding:30px 0;border-radius:3px}"]}),I("design:paramtypes",[])],e)}(),Q=function(){function e(){}return e.prototype.ngOnInit=function(){},e=O([t.Component({selector:"kui-geoname-value",template:"<p>\n  geoname-value works!\n</p>",styles:[".mat-form-field{width:320px}.fill-remaining-space{flex:1 1 auto}.center{text-align:center}a{text-decoration:none;color:inherit}.kui-link{cursor:pointer;border-bottom:2px solid rgba(0,105,92,.25)}.kui-link:hover{box-shadow:0 -10px 0 rgba(0,105,92,.25) inset}.lv-html-text{max-height:60px;position:relative;overflow:hidden}.lv-read-more{position:absolute;bottom:0;left:0;width:100%;text-align:center;margin:0;padding:30px 0;border-radius:3px}"]}),I("design:paramtypes",[])],e)}(),z=function(){function e(){}return Object.defineProperty(e.prototype,"valueObject",{get:function(){return this._integerValueObj},set:function(e){this._integerValueObj=e},enumerable:!0,configurable:!0}),O([t.Input(),I("design:type",n.ReadIntegerValue),I("design:paramtypes",[n.ReadIntegerValue])],e.prototype,"valueObject",null),e=O([t.Component({selector:"kui-integer-value",template:"<span>{{valueObject.integer}}</span>",styles:[".mat-form-field{width:320px}.fill-remaining-space{flex:1 1 auto}.center{text-align:center}a{text-decoration:none;color:inherit}.kui-link{cursor:pointer;border-bottom:2px solid rgba(0,105,92,.25)}.kui-link:hover{box-shadow:0 -10px 0 rgba(0,105,92,.25) inset}.lv-html-text{max-height:60px;position:relative;overflow:hidden}.lv-read-more{position:absolute;bottom:0;left:0;width:100%;text-align:center;margin:0;padding:30px 0;border-radius:3px}"]}),I("design:paramtypes",[])],e)}(),X=function(){function e(){}return Object.defineProperty(e.prototype,"valueObject",{get:function(){return this._intervalValueObj},set:function(e){this._intervalValueObj=e},enumerable:!0,configurable:!0}),O([t.Input(),I("design:type",n.ReadIntervalValue),I("design:paramtypes",[n.ReadIntervalValue])],e.prototype,"valueObject",null),e=O([t.Component({selector:"kui-interval-value",template:"<span>{{valueObject.intervalStart}} - {{valueObject.intervalEnd}}</span>",styles:[".mat-form-field{width:320px}.fill-remaining-space{flex:1 1 auto}.center{text-align:center}a{text-decoration:none;color:inherit}.kui-link{cursor:pointer;border-bottom:2px solid rgba(0,105,92,.25)}.kui-link:hover{box-shadow:0 -10px 0 rgba(0,105,92,.25) inset}.lv-html-text{max-height:60px;position:relative;overflow:hidden}.lv-read-more{position:absolute;bottom:0;left:0;width:100%;text-align:center;margin:0;padding:30px 0;border-radius:3px}"]}),I("design:paramtypes",[])],e)}(),Z=function(){function e(){this.referredResourceClicked=new t.EventEmitter}return Object.defineProperty(e.prototype,"ontologyInfo",{get:function(){return this._ontoInfo},set:function(e){this._ontoInfo=e},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"valueObject",{get:function(){return this._linkValueObj},set:function(e){this._linkValueObj=e,this.valueObject.referredResource!==undefined?this.referredResource=this.valueObject.referredResource.label:this.referredResource=this.valueObject.referredResourceIri},enumerable:!0,configurable:!0}),e.prototype.refResClicked=function(){this.referredResourceClicked.emit(this._linkValueObj)},O([t.Input(),I("design:type",n.OntologyInformation),I("design:paramtypes",[n.OntologyInformation])],e.prototype,"ontologyInfo",null),O([t.Input(),I("design:type",n.ReadLinkValue),I("design:paramtypes",[n.ReadLinkValue])],e.prototype,"valueObject",null),O([t.Output(),I("design:type",t.EventEmitter)],e.prototype,"referredResourceClicked",void 0),e=O([t.Component({selector:"kui-link-value",template:'<a class="kui-link" (click)="refResClicked()">{{referredResource}}</a>\n',styles:[".mat-form-field{width:320px}.fill-remaining-space{flex:1 1 auto}.center{text-align:center}a{text-decoration:none;color:inherit}.kui-link{cursor:pointer;border-bottom:2px solid rgba(0,105,92,.25)}.kui-link:hover{box-shadow:0 -10px 0 rgba(0,105,92,.25) inset}.lv-html-text{max-height:60px;position:relative;overflow:hidden}.lv-read-more{position:absolute;bottom:0;left:0;width:100%;text-align:center;margin:0;padding:30px 0;border-radius:3px}"]}),I("design:paramtypes",[])],e)}(),J=function(){function e(e){this._listCacheService=e}return Object.defineProperty(e.prototype,"valueObject",{get:function(){return this._listValueObj},set:function(e){this._listValueObj=e},enumerable:!0,configurable:!0}),e.prototype.ngOnChanges=function(){this.node=this._listCacheService.getListNode(this._listValueObj.listNodeIri)},O([t.Input(),I("design:type",n.ReadListValue),I("design:paramtypes",[n.ReadListValue])],e.prototype,"valueObject",null),e=O([t.Component({selector:"kui-list-value",template:'<span *ngIf="node | async">{{(node | async )?.label}}</span>\n',styles:[".mat-form-field{width:320px}.fill-remaining-space{flex:1 1 auto}.center{text-align:center}a{text-decoration:none;color:inherit}.kui-link{cursor:pointer;border-bottom:2px solid rgba(0,105,92,.25)}.kui-link:hover{box-shadow:0 -10px 0 rgba(0,105,92,.25) inset}.lv-html-text{max-height:60px;position:relative;overflow:hidden}.lv-read-more{position:absolute;bottom:0;left:0;width:100%;text-align:center;margin:0;padding:30px 0;border-radius:3px}"]}),I("design:paramtypes",[n.ListCacheService])],e)}(),Y=function(){function e(e){this.el=e,this.referredResourceClicked=new t.EventEmitter}return Object.defineProperty(e.prototype,"ontologyInfo",{get:function(){return this._ontoInfo},set:function(e){this._ontoInfo=e},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"bindEvents",{get:function(){return this._bindEvents},set:function(e){this._bindEvents=e},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"valueObject",{get:function(){return this._htmlValueObj},set:function(e){this._htmlValueObj=e,this.el.nativeElement.innerHTML&&(this.el.nativeElement.innerHTML=this.valueObject.html)},enumerable:!0,configurable:!0}),e.prototype.refResClicked=function(e){this.referredResourceClicked.emit(e)},e.prototype.onClick=function(e){return this._bindEvents&&"a"===e.nodeName.toLowerCase()&&e.className.toLowerCase().indexOf(n.KnoraConstants.SalsahLink)>=0&&e.href!==undefined?(this.refResClicked(e.href),!1):!(!this.bindEvents||"a"!==e.nodeName.toLowerCase()||e.href===undefined)&&(window.open(e.href,"_blank"),!1)},O([t.Output(),I("design:type",t.EventEmitter)],e.prototype,"referredResourceClicked",void 0),O([t.Input(),I("design:type",n.OntologyInformation),I("design:paramtypes",[n.OntologyInformation])],e.prototype,"ontologyInfo",null),O([t.Input(),I("design:type",Boolean),I("design:paramtypes",[Boolean])],e.prototype,"bindEvents",null),O([t.Input(),I("design:type",n.ReadTextValueAsHtml),I("design:paramtypes",[n.ReadTextValueAsHtml])],e.prototype,"valueObject",null),O([t.HostListener("click",["$event.target"]),I("design:type",Function),I("design:paramtypes",[Object]),I("design:returntype",void 0)],e.prototype,"onClick",null),e=O([t.Component({selector:"kui-text-value-as-html",template:"<div>{{valueObject.html}}</div>",styles:[""]}),I("design:paramtypes",[t.ElementRef])],e)}(),W=function(){function e(){this.regexUrl=/(http|https|ftp|ftps)\:\/\/[a-zA-Z0-9\-\.]+\.[a-zA-Z]{2,3}(\/\S*)?/}return Object.defineProperty(e.prototype,"valueObject",{get:function(){return this._textStringValueObj},set:function(e){var t=e.str;if(this.regexUrl.exec(t)){var n=this.regexUrl.exec(t)[0],o=t.replace(this.regexUrl,'<a class="kui-link" href="'+n+'">'+n+"</a>");e.str=o,this._textStringValueObj=e}else this._textStringValueObj=e},enumerable:!0,configurable:!0}),O([t.Input(),I("design:type",n.ReadTextValueAsString),I("design:paramtypes",[n.ReadTextValueAsString])],e.prototype,"valueObject",null),e=O([t.Component({selector:"kui-text-value-as-string",template:'<span [innerHTML]="valueObject.str"></span>\n',styles:[".mat-form-field{width:320px}.fill-remaining-space{flex:1 1 auto}.center{text-align:center}a{text-decoration:none;color:inherit}.lv-html-text{max-height:60px;position:relative;overflow:hidden}.lv-read-more{position:absolute;bottom:0;left:0;width:100%;text-align:center;margin:0;padding:30px 0;border-radius:3px}.kui-link{cursor:pointer;border-bottom:2px solid rgba(0,105,92,.25)}.kui-link:hover{box-shadow:0 -10px 0 rgba(0,105,92,.25) inset}"]}),I("design:paramtypes",[])],e)}(),$=function(){function e(){}return Object.defineProperty(e.prototype,"valueObject",{get:function(){return this._xmlValueObj},set:function(e){this._xmlValueObj=e},enumerable:!0,configurable:!0}),O([t.Input(),I("design:type",n.ReadTextValueAsXml),I("design:paramtypes",[n.ReadTextValueAsXml])],e.prototype,"valueObject",null),e=O([t.Component({selector:"kui-text-value-as-xml",template:"<span>{{valueObject.xml}}</span>",styles:[""]}),I("design:paramtypes",[])],e)}(),ee=function(){function e(){}return Object.defineProperty(e.prototype,"valueObject",{get:function(){return this._textfileValueObj},set:function(e){this._textfileValueObj=e},enumerable:!0,configurable:!0}),O([t.Input(),I("design:type",n.ReadTextFileValue),I("design:paramtypes",[n.ReadTextFileValue])],e.prototype,"valueObject",null),e=O([t.Component({selector:"kui-textfile-value",template:'<a target="_blank" href="{{valueObject.textFileURL}}">{{valueObject.textFilename}}</a>',styles:[""]}),I("design:paramtypes",[])],e)}(),te=function(){function e(){}return Object.defineProperty(e.prototype,"valueObject",{get:function(){return this.__uriValueObj},set:function(e){this.__uriValueObj=e},enumerable:!0,configurable:!0}),e.prototype.ngOnChanges=function(){this.label===undefined?this.displayString=this.__uriValueObj.uri:this.displayString=this.label},O([t.Input(),I("design:type",n.ReadUriValue),I("design:paramtypes",[n.ReadUriValue])],e.prototype,"valueObject",null),O([t.Input(),I("design:type",String)],e.prototype,"label",void 0),e=O([t.Component({selector:"   kui-uri-value",template:'<a href="{{valueObject.uri}}" target="_blank" class="kui-link">{{displayString}}</a>\n',styles:[".mat-form-field{width:320px}.fill-remaining-space{flex:1 1 auto}.center{text-align:center}a{text-decoration:none;color:inherit}.kui-link{cursor:pointer;border-bottom:2px solid rgba(0,105,92,.25)}.kui-link:hover{box-shadow:0 -10px 0 rgba(0,105,92,.25) inset}.lv-html-text{max-height:60px;position:relative;overflow:hidden}.lv-read-more{position:absolute;bottom:0;left:0;width:100%;text-align:center;margin:0;padding:30px 0;border-radius:3px}"]}),I("design:paramtypes",[])],e)}(),ne=function(){function e(){}return e.prototype.ngOnInit=function(){},e=O([t.Component({selector:"kui-compare-view",template:"<p>\n  compare-view works!\n</p>\n",styles:[".mat-form-field{width:320px}.fill-remaining-space{flex:1 1 auto}.center{text-align:center}a{text-decoration:none;color:inherit}.kui-link{cursor:pointer;border-bottom:2px solid rgba(0,105,92,.25)}.kui-link:hover{box-shadow:0 -10px 0 rgba(0,105,92,.25) inset}.lv-html-text{max-height:60px;position:relative;overflow:hidden}.lv-read-more{position:absolute;bottom:0;left:0;width:100%;text-align:center;margin:0;padding:30px 0;border-radius:3px}"]}),I("design:paramtypes",[])],e)}(),oe=function(){function e(){}return e.prototype.ngOnInit=function(){},e=O([t.Component({selector:"kui-graph-view",template:"<p>This is the GraphView component to visualize the connection of a resource. This view will implement the d3js library</p>\n",styles:[".mat-form-field{width:320px}.fill-remaining-space{flex:1 1 auto}.center{text-align:center}a{text-decoration:none;color:inherit}.kui-link{cursor:pointer;border-bottom:2px solid rgba(0,105,92,.25)}.kui-link:hover{box-shadow:0 -10px 0 rgba(0,105,92,.25) inset}.lv-html-text{max-height:60px;position:relative;overflow:hidden}.lv-read-more{position:absolute;bottom:0;left:0;width:100%;text-align:center;margin:0;padding:30px 0;border-radius:3px}"]}),I("design:paramtypes",[])],e)}(),ie=function(){function e(e){this._router=e,this.KnoraConstants=n.KnoraConstants}return e.prototype.ngOnInit=function(){},e.prototype.openResource=function(e){var t="/resource/"+encodeURIComponent(e);this._router.navigate([t])},O([t.Input(),I("design:type",Object)],e.prototype,"result",void 0),O([t.Input(),I("design:type",n.OntologyInformation)],e.prototype,"ontologyInfo",void 0),e=O([t.Component({selector:"kui-grid-view",template:'<div>\n  \x3c!-- <kui-progress-indicator *ngIf="isLoading" [color]="\'#D88958\'"></kui-progress-indicator> --\x3e\n\n  <div fxLayout="row wrap" fxLayout.xs="column" fxLayoutGap="grid">\n\n    <div fxFlex.sm="50" fxFlex.md="33.3" fxFlex.lg="20" fxFlex.xl="16.6" fxFlex="16.6" *ngFor="let res of result" class="gv-preview">\n      <mat-card class="link" (click)="openResource(res.id)">\n\n        <mat-card-subtitle>{{ontologyInfo?.getLabelForResourceClass(res.type)}}</mat-card-subtitle>\n        <mat-card-title>{{res.label}}</mat-card-title>\n\n\n        <mat-card-content *ngFor="let prop of res.properties | kuiKey">\n          \x3c!-- description --\x3e\n          <div *ngFor="let val of prop.value | kuiKey">\n            <div [ngSwitch]="val.value.getClassName()">\n              <div class="lv-html-text" *ngSwitchCase="KnoraConstants.ReadTextValueAsHtml">\n                <kui-text-value-as-html [valueObject]="val.value" [ontologyInfo]="ontologyInfo" [bindEvents]="false"></kui-text-value-as-html>\n                <p class="lv-read-more"></p>\n              </div>\n              <div>\n                <kui-date-value *ngSwitchCase="KnoraConstants.ReadDateValue" [valueObject]="val.value" [calendar]="true" [era]="true"></kui-date-value>\n                <span *ngSwitchDefault="">{{val.value.getContent()}}</span>\n              </div>\n              <br>\n              <span *ngIf="ontologyInfo?.getLabelForProperty(prop.key) !== \'Text\'">\n                {{ontologyInfo?.getLabelForProperty(prop.key)}}\n              </span>\n            </div>\n          </div>\n        </mat-card-content>\n\n      </mat-card>\n    </div>\n  </div>\n\n\n</div>',styles:[".mat-form-field{width:320px}.fill-remaining-space{flex:1 1 auto}.center{text-align:center}a{text-decoration:none;color:inherit}.kui-link{cursor:pointer;border-bottom:2px solid rgba(0,105,92,.25)}.kui-link:hover{box-shadow:0 -10px 0 rgba(0,105,92,.25) inset}.lv-html-text{max-height:60px;position:relative;overflow:hidden}.lv-read-more{position:absolute;bottom:0;left:0;width:100%;text-align:center;margin:0;padding:30px 0;border-radius:3px}.gv-preview{margin:6px 0;padding:24px;word-wrap:break-word;border-radius:5px}.gv-preview .mat-card{height:160px;color:rgba(0,0,0,.81);overflow:hidden;padding-bottom:25px}.gv-preview .mat-card:hover{background:rgba(0,105,92,.39);color:#000}.gv-preview .mat-card:active{background:rgba(0,105,92,.61)}.gv-preview .mat-card .mat-card-title{font-size:12pt;font-weight:600}"]}),I("design:paramtypes",[o.Router])],e)}(),re=function(){function e(e){this._router=e,this.KnoraConstants=n.KnoraConstants}return e.prototype.openResource=function(e){var t="/resource/"+encodeURIComponent(e);this._router.navigate([t])},O([t.Input(),I("design:type",Object)],e.prototype,"result",void 0),O([t.Input(),I("design:type",n.OntologyInformation)],e.prototype,"ontologyInfo",void 0),e=O([t.Component({selector:"kui-list-view",template:'<div>\n    \x3c!-- <kui-progress-indicator *ngIf="isLoading" [color]="\'#D88958\'"></kui-progress-indicator> --\x3e\n\n    <mat-list class="list-view lv-items" *ngFor="let res of result; let i = index; let last = last;">\n        <mat-list-item class="link" (click)="openResource(res.id)">\n            <mat-icon matListIcon>image_search</mat-icon>\n            <p matLine class="lv-res-label">{{ontologyInfo?.getLabelForResourceClass(res.type)}}</p>\n            <h3 matLine class="lv-label">{{res.label}}</h3>\n\n            <div matLine *ngFor="let prop of res.properties | kuiKey">\n\n                <div matLine *ngFor="let val of prop.value | kuiKey">\n\n                    <div [ngSwitch]="val.value.getClassName()">\n                        <span *ngIf="ontologyInfo?.getLabelForProperty(prop.key) !== \'Text\'" class="lv-prop-label">\n                            {{ontologyInfo?.getLabelForProperty(prop.key)}}:&nbsp;\n                        </span>\n\n                        <div class="lv-html-text">\n\n                            <div *ngSwitchCase="KnoraConstants.ReadTextValueAsHtml">\n                                <kui-text-value-as-html [valueObject]="val.value" [ontologyInfo]="ontologyInfo" [bindEvents]="false"></kui-text-value-as-html>\n                            </div>\n\n                            <kui-date-value *ngSwitchCase="KnoraConstants.ReadDateValue" [valueObject]="val.value" [calendar]="true" [era]="true"></kui-date-value>\n\n                            <span *ngSwitchDefault="">{{val.value.getContent()}}</span>\n\n                            \x3c!-- slice the end of long texts --\x3e\n                            <p class="lv-read-more"></p>\n\n                        </div>\n\n                    </div>\n\n                </div>\n\n            </div>\n\n        </mat-list-item>\n\n        <mat-divider *ngIf="!last"></mat-divider>\n\n    </mat-list>\n</div>\n',styles:[".mat-form-field{width:320px}.fill-remaining-space{flex:1 1 auto}.center{text-align:center}a{text-decoration:none;color:inherit}.kui-link{cursor:pointer;border-bottom:2px solid rgba(0,105,92,.25)}.kui-link:hover{box-shadow:0 -10px 0 rgba(0,105,92,.25) inset}.lv-html-text{max-height:60px;position:relative;overflow:hidden}.lv-read-more{position:absolute;bottom:0;left:0;width:100%;text-align:center;margin:0;padding:30px 0;border-radius:3px}.mat-list .mat-list-item .mat-line{white-space:normal!important}.list-view .mat-list-item{height:auto;min-height:40px;padding:8px 0}.lv-label{font-weight:700!important;font-size:16px!important;line-height:1.5}.lv-res-label{color:rgba(0,0,0,.54);font-size:14px!important}.lv-prop-label{font-style:italic}"]}),I("design:paramtypes",[o.Router])],e)}(),ae=function(){function e(e){this._router=e,this.loading=!1,this.KnoraConstants=n.KnoraConstants}return e.prototype.openLink=function(e){this.loading=!0,this._router.navigate(["/resource/"+encodeURIComponent(e)])},O([t.Input(),I("design:type",n.GuiOrder)],e.prototype,"guiOrder",void 0),O([t.Input(),I("design:type",Object)],e.prototype,"properties",void 0),O([t.Input(),I("design:type",Array)],e.prototype,"annotations",void 0),O([t.Input(),I("design:type",Array)],e.prototype,"incomingLinks",void 0),O([t.Input(),I("design:type",n.OntologyInformation)],e.prototype,"ontologyInfo",void 0),e=O([t.Component({selector:"kui-properties-view",template:'\x3c!-- properties --\x3e\n<div class="properties">\n    <div *ngFor="let prop of guiOrder; let last = last">\n        <div *ngIf="properties[prop?.property]" class="property">\n            <div class="property-label">\n                \x3c!-- label of the property --\x3e\n                <h3 class="label mat-subheading-1">\n                    {{ontologyInfo.getLabelForProperty(prop?.property)}}\n                </h3>\n            </div>\n            <div class="property-value">\n\n                \x3c!-- the value(s) of the property --\x3e\n                <div class="property-value-item" *ngFor="let val of properties[prop?.property]; let lastItem = last">\n                    <span [ngSwitch]="val.getClassName()" [class.list]="properties[prop?.property].length > 1"\n                          [class.lastItem]="lastItem">\n                        <kui-text-value-as-string *ngSwitchCase="KnoraConstants.ReadTextValueAsString"\n                                                  [valueObject]="val">\n                        </kui-text-value-as-string>\n                        <kui-text-value-as-xml *ngSwitchCase="KnoraConstants.ReadTextValueAsXml" [valueObject]="val">\n                        </kui-text-value-as-xml>\n                        <kui-date-value *ngSwitchCase="KnoraConstants.ReadDateValue" [valueObject]="val"\n                                        [calendar]="true" [era]="true">\n                        </kui-date-value>\n                        <kui-link-value class="app-link" *ngSwitchCase="KnoraConstants.ReadLinkValue"\n                                        [valueObject]="val" [ontologyInfo]="ontologyInfo"\n                                        (referredResourceClicked)="openLink(val.referredResourceIri)">\n                        </kui-link-value>\n                        <kui-integer-value *ngSwitchCase="KnoraConstants.ReadIntegerValue" [valueObject]="val">\n                        </kui-integer-value>\n                        <kui-decimal-value *ngSwitchCase="KnoraConstants.ReadDecimalValue" [valueObject]="val">\n                        </kui-decimal-value>\n                        <kui-geometry-value *ngSwitchCase="KnoraConstants.ReadGeomValue" [valueObject]="val">\n                        </kui-geometry-value>\n                        <kui-color-value *ngSwitchCase="KnoraConstants.ReadColorValue" [valueObject]="val">\n                        </kui-color-value>\n                        <kui-uri-value *ngSwitchCase="KnoraConstants.ReadUriValue" [valueObject]="val">\n                        </kui-uri-value>\n                        <kui-boolean-value *ngSwitchCase="KnoraConstants.ReadBooleanValue" [valueObject]="val">\n                        </kui-boolean-value>\n                        <kui-interval-value *ngSwitchCase="KnoraConstants.ReadIntervalValue" [valueObject]="val">\n                        </kui-interval-value>\n                        <kui-list-value *ngSwitchCase="KnoraConstants.ReadListValue" [valueObject]="val">\n                        </kui-list-value>\n                        <kui-textfile-value *ngSwitchCase="KnoraConstants.TextFileValue" [valueObject]="val">\n                        </kui-textfile-value>\n                        <span *ngSwitchDefault>Not supported {{val.getClassName()}}</span>\n                        <br>\n                    </span>\n                </div>\n            </div>\n        </div>\n    </div>\n\n</div>\n<div class="incoming">\n\n    \x3c!-- annotations are resources like region, sequence etc. --\x3e\n    \x3c!-- TODO: we can\'t display incoming annotations as expected\n    <div class="annotations">\n        \x3c!-- *ngIf="annotations?.length > 0"> --\n        <h3 class="label mat-subheading-1">\n            Annotations\n        </h3>\n        <mat-list *ngFor="let annotation of annotations">\n            <mat-list-item class="kui-link" (click)="openLink(annotation.id)">\n                <span>{{annotation.label}}</span>\n            </mat-list-item>\n        </mat-list>\n    </div>\n    --\x3e\n\n    \x3c!-- incoming links --\x3e\n    <div class="links" *ngIf="incomingLinks?.length > 0">\n        <h3 class="label mat-subheading-1">\n            Links\n        </h3>\n        <ul>\n            <li *ngFor="let incoming of incomingLinks" class="kui-link" (click)="openLink(incoming.id)">\n                {{incoming.label}}\n            </li>\n        </ul>\n    </div>\n</div>\n',styles:['.mat-form-field{width:320px}.fill-remaining-space{flex:1 1 auto}.center{text-align:center}a{text-decoration:none;color:inherit}.kui-link{cursor:pointer;border-bottom:2px solid rgba(0,105,92,.25)}.kui-link:hover{box-shadow:0 -10px 0 rgba(0,105,92,.25) inset}.lv-html-text{max-height:60px;position:relative;overflow:hidden}.lv-read-more{position:absolute;bottom:0;left:0;width:100%;text-align:center;margin:0;padding:30px 0;border-radius:3px}:host{display:-ms-grid;display:grid;-ms-grid-columns:(1fr)[6];grid-template-columns:repeat(6,1fr);gap:16px}:host .incoming,:host .properties{margin-top:16px}:host .properties{-ms-grid-column:1;-ms-grid-column-span:4;grid-column:1/span 4}:host .properties .property{-ms-grid-row:1;grid-row:1/1;display:-ms-grid;display:grid;-ms-grid-columns:(1fr)[4];grid-template-columns:repeat(4,1fr);gap:16px}:host .properties .property .property-label,:host .properties .property .property-value{padding:2px;overflow-wrap:break-word}:host .properties .property .property-label{-ms-grid-column:1;-ms-grid-column-span:1;grid-column:1/span 1}:host .properties .property .property-label .label{text-align:right}:host .properties .property .property-value{padding-top:5px;-ms-grid-column:2;-ms-grid-column-span:3;grid-column:2/span 3}:host .incoming{-ms-grid-column:5;-ms-grid-column-span:2;grid-column:5/span 2;display:-ms-grid;display:grid;gap:16px;-ms-grid-columns:1fr 1fr;grid-template-columns:1fr 1fr;-ms-grid-rows:(minmax(60px,auto))[6];grid-template-rows:repeat(6,minmax(60px,auto))}:host .incoming .annotations,:host .incoming .links{padding:16px;-ms-grid-column:1;-ms-grid-column-span:2;grid-column:1/span 2;border-radius:6px}:host .incoming .annotations ul,:host .incoming .links ul{-webkit-padding-start:5px;padding-inline-start:5px;list-style-type:none}:host .incoming .annotations ul li,:host .incoming .links ul li{margin-bottom:10px;text-indent:-8px}:host .incoming .annotations ul li:before,:host .incoming .links ul li:before{content:"- "}:host .incoming .annotations{background:rgba(245,222,179,.39)}:host .incoming .links{background:rgba(222,184,135,.39)}.label{color:rgba(0,0,0,.54)}@media screen and (max-width:768px){.incoming,.properties{-ms-grid-column:1!important;-ms-grid-column-span:6!important;grid-column:1/span 6!important;gap:0!important}.incoming .property,.properties .property{gap:0!important}.incoming .annotations,.incoming .links,.incoming .property-label,.incoming .property-value,.properties .annotations,.properties .links,.properties .property-label,.properties .property-value{-ms-grid-column:1!important;-ms-grid-column-span:4!important;grid-column:1/span 4!important}h3.label{text-align:left!important;margin:16px 0 0!important}}']}),I("design:paramtypes",[o.Router])],e)}(),se=(require("jsonld"),function(){function e(e,t,o,i){this._route=e,this._router=t,this._resourceService=o,this._incomingService=i,this.KnoraConstants=n.KnoraConstants}return e.prototype.ngOnInit=function(){},e.prototype.ngOnChanges=function(){this.getResource(this.iri)},e.prototype.getResource=function(e){var t=this;this.loading=!0,this._resourceService.getResource(decodeURIComponent(e)).subscribe(function(e){console.log("getResource result",e),t.sequence=e,t.guiOrder=e.ontologyInformation.getResourceClasses()[t.sequence.resources[0].type].guiOrder,setTimeout(function(){t.currentResource=t.sequence.resources[0].incomingFileRepresentations[0],console.log("currentResource",t.sequence.resources[0].incomingFileRepresentations[0]),t.loading=!1},1e3)},function(e){console.error(e)})},e.prototype.requestIncomingResources=function(){this.sequence!==undefined&&(this.sequence.resources[0].properties[n.KnoraConstants.hasStillImageFileValue],this.getIncomingLinks(0))},e.prototype.getIncomingLinks=function(e,t){var n=this;this.loading=!0,this._incomingService.getIncomingLinksForResource(this.sequence.resources[0].id,e).subscribe(function(e){n.ontologyInfo.updateOntologyInformation(e.ontologyInformation),Array.prototype.push.apply(n.sequence.resources[0].incomingLinks,e.resources),t!==undefined&&t(e.resources.length),n.loading=!1},function(e){console.error(e),n.loading=!1})},e.prototype.openLink=function(e){this.loading=!0,this._router.navigate(["/resource/"+encodeURIComponent(e)])},e.prototype.refreshProperties=function(e){console.log("from still-image-component: ",e),this.currentResource=this.sequence.resources[0].incomingFileRepresentations[e],console.log(this.currentResource)},O([t.Input(),I("design:type",String)],e.prototype,"iri",void 0),O([t.ViewChild("kuiStillImage",{"static":!1}),I("design:type",E)],e.prototype,"kuiStillImage",void 0),e=O([t.Component({selector:"kui-resource-view",template:'<div class="resource-view">\n    <kui-progress-indicator *ngIf="loading"></kui-progress-indicator>\n\n    <div *ngIf="!loading && sequence?.resources.length > 0">\n\n        <div class="resource" *ngFor="let resource of sequence.resources; let last = last">\n\n            \x3c!-- 0) Title first? --\x3e\n            \x3c!--             <mat-list>\n\n                <h3 class="mat-subheader">\n                    {{sequence.ontologyInformation.getLabelForResourceClass(resource.type)}}\n                </h3>\n\n                <mat-list-item>\n                    <h2 class="mat-headline">{{resource.label}}</h2>\n                </mat-list-item>\n\n            </mat-list> --\x3e\n\n            \x3c!-- 1) show fileRepresentation first--\x3e\n\n            \x3c!-- show file representation --\x3e\n            <div *ngIf="resource.fileRepresentationsToDisplay?.stillImage && resource.fileRepresentationsToDisplay?.stillImage.length > 0"\n                 class="media">\n                <kui-still-image #kuiStillImage class="osd-viewer"\n                                 [images]="resource.fileRepresentationsToDisplay.stillImage">\n                </kui-still-image>\n            </div>\n            \x3c!--\n                <div [ngSwitch]="resource.fileRepresentationsToDisplay[0].type" class="media">\n                    <div *ngSwitchCase="KnoraConstants.StillImageFileValue">\n                        \x3c!-- TODO: fix: this shows only the first image, not all stillImages from fileRepresentationsToDisplay --\n\n                        \x3c!-- [imageCaption]="sequence.ontologyInformation.getLabelForProperty(prop.key)" --\n                    </div>\n\n\n                    <div *ngSwitchCase="KnoraConstants.hasMovingImageFileValue" class="media">\n                        <kui-moving-image></kui-moving-image>\n                    </div>\n\n                    <div *ngSwitchDefault>\n                        <p>This media type {{resource.fileRepresentationsToDisplay[0].type}} is not yet implemented</p>\n                    </div>\n                </div>\n                --\x3e\n\n\n\n            \x3c!--\n            <div *ngFor="let prop of resource.properties | kuiKey">\n                <div [ngSwitch]="prop.key">\n                    \x3c!-- <p>{{prop.key}}</p> --\x3e\n\n            \x3c!-- <div *ngSwitchCase="KnoraConstants.hasStillImageFileValue" class="media"> --\x3e\n            \x3c!-- if the property is of type stillImageFileValue, show the image with osd viewer from @knora/viewer TODO: the fileValue will be part of an own resource property --\x3e\n\n\n            \x3c!-- </div> --\x3e\n\n\n            \x3c!-- TODO: switch through all other media type --\x3e\n            \x3c!--\n                    <kui-moving-image></kui-moving-image>\n                    <kui-audio></kui-audio>\n                    <kui-ddd></kui-ddd>\n                    <kui-document></kui-document>\n\n                    <kui-collection></kui-collection>\n\n                    <kui-annotation></kui-annotation>\n                    <kui-link-obj></kui-link-obj>\n                    <kui-object></kui-object>\n                    <kui-region></kui-region>\n                    <kui-text></kui-text>\n                    --\x3e\n            \x3c!--\n                    <div *ngSwitchDefault>\n                        <p>This media type ({{prop.key}}) is not yet implemented</p>\n                    </div>\n                </div>\n            </div>\n            --\x3e\n            \x3c!-- 2) show properties, annotations (list of regions, sequences etc.), incomming resources (links, files) --\x3e\n            <mat-tab-group animationDuration="0ms" class="full-width data">\n                \x3c!-- first tab for the main resource e.g. book --\x3e\n                <mat-tab [label]="sequence.ontologyInformation.getLabelForResourceClass(resource.type)">\n                    <kui-properties-view [properties]="resource.properties" [guiOrder]="guiOrder"\n                                         [ontologyInfo]="sequence.ontologyInformation"\n                                         [incomingLinks]="resource.incomingLinks">\n                    </kui-properties-view>\n                </mat-tab>\n                \x3c!-- TODO: second tab for a "part-of"-resource e.g. book page --\x3e\n\n                <mat-tab *ngIf="resource.incomingFileRepresentations.length > 0 && currentResource"\n                         [label]="sequence.ontologyInformation.getLabelForResourceClass(currentResource.type)">\n                    <kui-properties-view [properties]="currentResource?.properties"\n                                         [guiOrder]="sequence.ontologyInformation.getResourceClasses()[currentResource.type].guiOrder"\n                                         [ontologyInfo]="sequence.ontologyInformation">\n                    </kui-properties-view>\n                    \x3c!--\n                    <kui-properties-view [properties]="resource.incomingFileRepresentations[0].resource.properties"\n                                         [guiOrder]="sequence.ontologyInformation.getResourceClasses()[resource.incomingFileRepresentations[0].type].guiOrder"\n                                         [ontologyInfo]="sequence.ontologyInformation"\n                                         [incomingLinks]="resource.incomingFileRepresentations[0].incomingLinks">\n                    </kui-properties-view>\n                --\x3e\n                </mat-tab>\n                \x3c!-- TODO: third tab for a "region"-resource --\x3e\n            </mat-tab-group>\n\n\n\n\n            \x3c!-- in case of more than one resource --\x3e\n            <mat-divider *ngIf="!last"></mat-divider>\n\n        </div>\n\n    </div>\n</div>\n',styles:['.mat-form-field{width:320px}.fill-remaining-space{flex:1 1 auto}.center{text-align:center}a{text-decoration:none;color:inherit}.kui-link{cursor:pointer;border-bottom:2px solid rgba(0,105,92,.25)}.kui-link:hover{box-shadow:0 -10px 0 rgba(0,105,92,.25) inset}.lv-html-text{max-height:60px;position:relative;overflow:hidden}.lv-read-more{position:absolute;bottom:0;left:0;width:100%;text-align:center;margin:0;padding:30px 0;border-radius:3px}.resource-view{max-width:960px;margin:0 auto}.resource-view .resource .media{width:800px;height:500px;display:block;margin:0 auto}.resource-view .resource .data{min-height:700px;padding:24px 36px}.hidden{display:none}.property{margin-bottom:12px}.property .property-value-item{min-height:48px;height:auto}.property .property-value-item li{list-style-type:none}.property .property-value-item li.list:before{content:"-    "}.property .property-value-item li.lastItem{margin-bottom:12px}@media (max-width:576px){.resource-view .resource .media{width:auto}}']}),I("design:paramtypes",[o.ActivatedRoute,o.Router,n.ResourceService,n.IncomingService])],e)}()),le=function(){function e(){this.KnoraConstants=n.KnoraConstants}return e.prototype.ngOnInit=function(){},O([t.Input(),I("design:type",Object)],e.prototype,"result",void 0),O([t.Input(),I("design:type",Object)],e.prototype,"ontologyInfo",void 0),O([t.Input(),I("design:type",Object)],e.prototype,"isLoading",void 0),e=O([t.Component({selector:"kui-table-view",template:"<p>\n  table-view works!\n</p>\n",styles:[""]}),I("design:paramtypes",[])],e)}(),pe=function(){function e(e,t,o,i){var r=this;this._route=e,this._searchService=t,this._searchParamsService=o,this._router=i,this.complexView=!1,this.KnoraConstants=n.KnoraConstants,this.offset=0,this.maxOffset=0,this.result=[],this.badRequest=!1,this.loading=!0,this.errorMessage=new n.ApiServiceError,this.pagingLimit=25,this.processSearchResults=function(e){r.ontologyInfo===undefined?r.ontologyInfo=e.ontologyInformation:r.ontologyInfo.updateOntologyInformation(e.ontologyInformation),r.result=r.result.concat(e.resources),r.loading=!1},this.showNumberOfAllResults=function(e){r.numberOfAllResults=e.numberOfResults,r.numberOfAllResults>0?r.maxOffset=Math.floor((r.numberOfAllResults-1)/r.pagingLimit):r.maxOffset=0}}return e.prototype.ngOnInit=function(){},e.prototype.ngOnChanges=function(){var e=this;this._route.paramMap.subscribe(function(t){e.searchMode||(e.searchMode=t.get("mode")),t.get("project")&&e.projectIri!==decodeURIComponent(t.get("project"))&&(e.projectIri=decodeURIComponent(t.get("project"))),e.offset=0,e.result=[],"fulltext"===e.searchMode?(e.searchQuery=t.get("q"),e.badRequest=e.searchQuery.length<3):"extended"===e.searchMode&&(e.gravsearchGenerator=e._searchParamsService.getSearchParams(),e.searchQuery?e.gravSearchQuery=e.searchQuery:e.generateGravsearchQuery()),e.getResult()})},e.prototype.generateGravsearchQuery=function(){var e=this.gravsearchGenerator.generateGravsearch(this.offset);!1!==e?this.gravSearchQuery=e:this._router.navigate([""],{relativeTo:this._route})},e.prototype.getResult=function(){var e=this;if(this.loading=!0,this.errorMessage=undefined,"fulltext"===this.searchMode)if(this.badRequest)this.errorMessage=new n.ApiServiceError,this.errorMessage.errorInfo="A search value is expected to have at least length of 3 characters.",this.loading=!1;else{var t=void 0;this.projectIri!==undefined&&(t={limitToProject:this.projectIri}),0===this.offset&&this._searchService.doFullTextSearchCountQueryCountQueryResult(this.searchQuery,t).subscribe(this.showNumberOfAllResults,function(t){e.errorMessage=t}),this._searchService.doFullTextSearchReadResourceSequence(this.searchQuery,this.offset,t).subscribe(this.processSearchResults,function(t){e.errorMessage=t,console.log("error",t),console.log("message",e.errorMessage)})}else"extended"===this.searchMode?(0===this.offset&&this._searchService.doExtendedSearchCountQueryCountQueryResult(this.gravSearchQuery).subscribe(this.showNumberOfAllResults,function(t){e.errorMessage=t}),this._searchService.doExtendedSearchReadResourceSequence(this.gravSearchQuery).subscribe(this.processSearchResults,function(t){e.errorMessage=t})):(this.errorMessage=new n.ApiServiceError,this.errorMessage.errorInfo="search mode invalid: "+this.searchMode)},e.prototype.loadMore=function(e){this.offset<this.maxOffset&&(this.offset++,"extended"===this.searchMode&&this.generateGravsearchQuery(),this.getResult())},O([t.Input(),I("design:type",Boolean)],e.prototype,"complexView",void 0),O([t.Input(),I("design:type",String)],e.prototype,"searchQuery",void 0),O([t.Input(),I("design:type",String)],e.prototype,"searchMode",void 0),O([t.Input(),I("design:type",String)],e.prototype,"projectIri",void 0),e=O([t.Component({selector:"kui-search-results",template:'<kui-progress-indicator *ngIf="loading"></kui-progress-indicator>\n\n<div *ngIf="!loading && !badRequest">\n\n    <div *ngIf="numberOfAllResults !== 0 && result; else noResult">\n\n        <mat-tab-group animationDuration="0ms" [selectedIndex]="1">\n            <mat-tab disabled>\n                <ng-template mat-tab-label>\n                    \x3c!-- <mat-icon class="tab-icon">hashtag</mat-icon> --\x3e\n                    <h4 class="search-results-title">Results: {{numberOfAllResults}}</h4>\n                </ng-template>\n            </mat-tab>\n            <mat-tab>\n                <ng-template mat-tab-label>\n                    <mat-icon class="tab-icon">view_list</mat-icon>\n                    List\n                </ng-template>\n                <kui-list-view [result]="result" [ontologyInfo]="ontologyInfo"></kui-list-view>\n            </mat-tab>\n\n            \x3c!-- in caase of complexView: show tab to switch to grid view --\x3e\n            <mat-tab *ngIf="complexView">\n                <ng-template mat-tab-label>\n                    <mat-icon class="tab-icon">view_module</mat-icon>\n                    Grid\n                </ng-template>\n                <kui-grid-view [result]="result" [ontologyInfo]="ontologyInfo"></kui-grid-view>\n            </mat-tab>\n            \x3c!-- not yet implemented! --\n            <mat-tab>\n                <ng-template mat-tab-label>\n                    <mat-icon class="tab-icon">table_chart</mat-icon>\n                    Table\n                </ng-template>\n                <kui-table-view [result]="result" [ontologyInfo]="ontologyInfo">\n                </kui-table-view>\n            </mat-tab>\n            --\x3e\n\n            \x3c!-- the following tab we don\'t need anymore? The GravSearch view will be part of the export menu --\n            <mat-tab>\n                <ng-template mat-tab-label>\n                    <mat-icon class="tab-icon">code</mat-icon>\n                    Gravsearch\n                </ng-template>\n                <kui-gravsearch-view></kui-gravsearch-view>\n            </mat-tab>\n            --\x3e\n\n        </mat-tab-group>\n        \x3c!-- <div>\n            <p>List view n°2</p>\n            <kui-list-view [result]="result" [ontologyInfo]="ontologyInfo" *ngIf="!complexView"></kui-list-view>\n        </div> --\x3e\n\n        <div class="load-panel" *ngIf="result.length > 0">\n            <button mat-flat-button color="primary" class="link center" (click)="loadMore(offset)"\n                    *ngIf="offset < maxOffset">Load more\n                <mat-icon>keyboard_arrow_down</mat-icon>\n            </button>\n        </div>\n\n    </div>\n\n    \x3c!-- In case of 0 result --\x3e\n    <ng-template #noResult>\n        <kui-message [message]="{status: 404, statusMsg: \'No results\', statusText: \'Sorry, but we couldn\\\'t find any results matching your search\'}"\n                     [medium]="true"></kui-message>\n        \x3c!-- <p><strong>No result</strong></p> --\x3e\n    </ng-template>\n\n</div>\n\n\x3c!-- Error message --\x3e\n<kui-message *ngIf="errorMessage" [message]="{status: 400, statusText: errorMessage.errorInfo}" [medium]="true">\n</kui-message>\n',styles:[".load-panel{width:100%}.load-panel .center{display:block;line-height:24px;margin:12px auto}.tab-icon{margin-right:8px}"]}),I("design:paramtypes",[o.ActivatedRoute,n.SearchService,n.SearchParamsService,o.Router])],e)}(),ue=function(){function e(){}return e=O([t.NgModule({imports:[i.CommonModule,n.KuiCoreModule,w.KuiActionModule,s.MatAutocompleteModule,l.MatButtonModule,p.MatCardModule,u.MatCheckboxModule,k.MatDatepickerModule,d.MatExpansionModule,g.MatFormFieldModule,h.MatInputModule,m.MatIconModule,f.MatListModule,c.MatNativeDateModule,v.MatSlideToggleModule,y.MatTabsModule,x.MatToolbarModule,b.MatTooltipModule,r.ReactiveFormsModule,a.FlexLayoutModule],declarations:[C,S,j,V,_,M,L,P,D,E,K,Y,W,$,ee,U,z,G,N,te,q,H,Q,X,J,Z,B,re,ie,le,se,ne,oe,ae,pe],exports:[C,S,j,V,_,M,L,P,D,E,K,Y,W,$,ee,U,z,G,N,te,q,H,Q,X,J,Z,B,re,ie,le,se,ne,oe,ae,pe]})],e)}();e.AnnotationComponent=C,e.AudioComponent=S,e.BooleanValueComponent=q,e.CollectionComponent=j,e.ColorValueComponent=G,e.CompareViewComponent=ne,e.DateValueComponent=U,e.DddComponent=V,e.DecimalValueComponent=N,e.DocumentComponent=_,e.ExternalResValueComponent=B,e.GeometryForRegion=A,e.GeometryValueComponent=H,e.GeonameValueComponent=Q,e.GraphViewComponent=oe,e.GridViewComponent=ie,e.ImageRegion=F,e.IntegerValueComponent=z,e.IntervalValueComponent=X,e.KuiViewerModule=ue,e.LinkObjComponent=M,e.LinkValueComponent=Z,e.ListValueComponent=J,e.ListViewComponent=re,e.MovingImageComponent=L,e.ObjectComponent=P,e.PropertiesViewComponent=ae,e.RegionComponent=D,e.ResourceViewComponent=se,e.SearchResultsComponent=pe,e.StillImageComponent=E,e.StillImageRepresentation=T,e.TableViewComponent=le,e.TextComponent=K,e.TextValueAsHtmlComponent=Y,e.TextValueAsStringComponent=W,e.TextValueAsXmlComponent=$,e.TextfileValueComponent=ee,e.UriValueComponent=te,e.ɵa=C,e.ɵb=S,e.ɵba=B,e.ɵbb=re,e.ɵbc=ie,e.ɵbd=le,e.ɵbe=se,e.ɵbf=ne,e.ɵbg=oe,e.ɵbh=ae,e.ɵbi=pe,e.ɵc=j,e.ɵd=V,e.ɵe=_,e.ɵf=M,e.ɵg=L,e.ɵh=P,e.ɵi=D,e.ɵj=E,e.ɵk=K,e.ɵl=Y,e.ɵm=W,e.ɵn=$,e.ɵo=ee,e.ɵp=U,e.ɵq=z,e.ɵr=G,e.ɵs=N,e.ɵt=te,e.ɵu=q,e.ɵv=H,e.ɵw=Q,e.ɵx=X,e.ɵy=J,e.ɵz=Z,Object.defineProperty(e,"__esModule",{value:!0})});
//# sourceMappingURL=knora-viewer.umd.min.js.map