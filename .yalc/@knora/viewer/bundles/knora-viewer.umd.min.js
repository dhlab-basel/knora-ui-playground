!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports,require("@angular/core"),require("@knora/core"),require("@angular/router"),require("@angular/common"),require("@angular/forms"),require("@angular/flex-layout"),require("@angular/material/autocomplete"),require("@angular/material/button"),require("@angular/material/card"),require("@angular/material/checkbox"),require("@angular/material/core"),require("@angular/material/expansion"),require("@angular/material/form-field"),require("@angular/material/icon"),require("@angular/material/input"),require("@angular/material/list"),require("@angular/material/slide-toggle"),require("@angular/material/tabs"),require("@angular/material/toolbar"),require("@angular/material/tooltip"),require("@angular/material/datepicker"),require("@knora/action")):"function"==typeof define&&define.amd?define("@knora/viewer",["exports","@angular/core","@knora/core","@angular/router","@angular/common","@angular/forms","@angular/flex-layout","@angular/material/autocomplete","@angular/material/button","@angular/material/card","@angular/material/checkbox","@angular/material/core","@angular/material/expansion","@angular/material/form-field","@angular/material/icon","@angular/material/input","@angular/material/list","@angular/material/slide-toggle","@angular/material/tabs","@angular/material/toolbar","@angular/material/tooltip","@angular/material/datepicker","@knora/action"],t):t(((e=e||self).knora=e.knora||{},e.knora.viewer={}),e.ng.core,e["@knora/core"],e.ng.router,e.ng.common,e.ng.forms,e.ng["flex-layout"],e.ng.material.autocomplete,e.ng.material.button,e.ng.material.card,e.ng.material.checkbox,e.ng.material.core,e.ng.material.expansion,e.ng.material["form-field"],e.ng.material.icon,e.ng.material.input,e.ng.material.list,e.ng.material["slide-toggle"],e.ng.material.tabs,e.ng.material.toolbar,e.ng.material.tooltip,e.ng.material.datepicker,e["@knora/action"])}(this,function(e,t,n,o,i,a,r,l,s,u,p,c,g,d,m,f,v,h,y,b,x,w,k){"use strict";function O(e,t,n,o){var i,a=arguments.length,r=a<3?t:null===o?o=Object.getOwnPropertyDescriptor(t,n):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)r=Reflect.decorate(e,t,n,o);else for(var l=e.length-1;l>=0;l--)(i=e[l])&&(r=(a<3?i(r):a>3?i(t,n,r):i(t,n))||r);return a>3&&r&&Object.defineProperty(t,n,r),r}function I(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)}function C(e){var t="function"==typeof Symbol&&e[Symbol.iterator],n=0;return t?t.call(e):{next:function(){return e&&n>=e.length&&(e=void 0),{value:e&&e[n++],done:!e}}}}var R=function(){function e(){}return e.prototype.ngOnInit=function(){},e=O([t.Component({selector:"kui-annotation",template:"<p>\n  annotation works!\n</p>\n",styles:[""]}),I("design:paramtypes",[])],e)}(),S=function(){function e(){}return e.prototype.ngOnInit=function(){},e=O([t.Component({selector:"kui-audio",template:"<p>\n  audio works!\n</p>\n",styles:[""]}),I("design:paramtypes",[])],e)}(),j=function(){function e(){}return e.prototype.ngOnInit=function(){},e=O([t.Component({selector:"kui-collection",template:"<p>\n  collection works!\n</p>\n",styles:[""]}),I("design:paramtypes",[])],e)}(),V=function(){function e(){}return e.prototype.ngOnInit=function(){},e=O([t.Component({selector:"kui-ddd",template:"<p>\n  ddd works!\n</p>\n",styles:[""]}),I("design:paramtypes",[])],e)}(),_=function(){function e(){}return e.prototype.ngOnInit=function(){},e=O([t.Component({selector:"kui-document",template:"<p>\n  document works!\n</p>\n",styles:[""]}),I("design:paramtypes",[])],e)}(),M=function(){function e(){}return e.prototype.ngOnInit=function(){},e=O([t.Component({selector:"kui-link-obj",template:"<p>\n  link-obj works!\n</p>\n",styles:[""]}),I("design:paramtypes",[])],e)}(),L=function(){function e(){}return e.prototype.ngOnInit=function(){},e=O([t.Component({selector:"kui-moving-image",template:"<p>\n  moving-image works!\n</p>\n",styles:[""]}),I("design:paramtypes",[])],e)}(),P=function(){function e(){}return e.prototype.ngOnInit=function(){},e=O([t.Component({selector:"kui-object",template:"<p>\n  object works!\n</p>",styles:[""]}),I("design:paramtypes",[])],e)}(),A=function(){function e(){}return e.prototype.ngOnInit=function(){},e=O([t.Component({selector:"kui-region",template:"<p>\n  region works!\n</p>\n",styles:[""]}),I("design:paramtypes",[])],e)}(),K=function(){function e(e){this.regionResource=e}return e.prototype.getGeometries=function(){return this.regionResource.properties[n.KnoraConstants.hasGeometry]},e}(),F=function(){return function(e,t){this.stillImageFileValue=e,this.regions=t}}(),D=function(){return function(e,t){this.geometry=e,this.region=t}}(),T=function(){function e(e){this.elementRef=e,this.regionHovered=new t.EventEmitter,this.regions={}}var o;return o=e,e.surfaceOfRectangularRegion=function(e){return"rectangle"!==e.type?(console.log("expected rectangular region, but "+e.type+" given"),0):(Math.max(e.points[0].x,e.points[1].x)-Math.min(e.points[0].x,e.points[1].x))*(Math.max(e.points[0].y,e.points[1].y)-Math.min(e.points[0].y,e.points[1].y))},e.prepareTileSourcesFromFileValues=function(e){var t,n,o=0,i=[];try{for(var a=C(e),r=a.next();!r.done;r=a.next()){var l=r.value,s=l.imageServerIIIFBaseURL+"/"+l.imageFilename,u=l.dimX,p=l.dimY;i.push({tileSource:{"@context":"http://iiif.io/api/image/2/context.json","@id":s,height:p,width:u,profile:["http://iiif.io/api/image/2/level2.json"],protocol:"http://iiif.io/api/image",tiles:[{scaleFactors:[1,2,4,8,16,32],width:1024}]},x:o,y:0}),o++}}catch(c){t={error:c}}finally{try{r&&!r.done&&(n=a["return"])&&n.call(a)}finally{if(t)throw t.error}}return i},e.prototype.ngOnChanges=function(e){e.images&&e.images.isFirstChange()&&this.setupViewer(),e.images?(this.openImages(),this.renderRegions(),this.unhighlightAllRegions(),this.activateRegion!==undefined&&this.highlightRegion(this.activateRegion)):e.activateRegion&&(this.unhighlightAllRegions(),this.activateRegion!==undefined&&this.highlightRegion(this.activateRegion))},e.prototype.ngOnInit=function(){},e.prototype.ngOnDestroy=function(){this.viewer&&(this.viewer.destroy(),this.viewer=undefined)},e.prototype.updateImages=function(){this.viewer||this.setupViewer(),this.openImages()},e.prototype.updateRegions=function(){this.viewer||this.setupViewer(),this.renderRegions()},e.prototype.highlightRegion=function(e){var t,n,o=this.regions[e];if(o!==undefined)try{for(var i=C(o),a=i.next();!a.done;a=i.next()){a.value.setAttribute("class","roi-svgoverlay active")}}catch(r){t={error:r}}finally{try{a&&!a.done&&(n=i["return"])&&n.call(i)}finally{if(t)throw t.error}}},e.prototype.unhighlightAllRegions=function(){var e,t;for(var n in this.regions)if(this.regions.hasOwnProperty(n))try{for(var o=C(this.regions[n]),i=o.next();!i.done;i=o.next()){i.value.setAttribute("class","roi-svgoverlay")}}catch(a){e={error:a}}finally{try{i&&!i.done&&(t=o["return"])&&t.call(o)}finally{if(e)throw e.error}}},e.prototype.setupViewer=function(){var e=this.elementRef.nativeElement.getElementsByClassName("osd-container")[0],t={element:e,sequenceMode:!0,showReferenceStrip:!0,showNavigator:!0,zoomInButton:"KUI_OSD_ZOOM_IN",zoomOutButton:"KUI_OSD_ZOOM_OUT",previousButton:"KUI_OSD_PREV_PAGE",nextButton:"KUI_OSD_NEXT_PAGE",homeButton:"KUI_OSD_HOME",fullPageButton:"KUI_OSD_FULL_PAGE",rotateLeftButton:"KUI_OSD_ROTATE_LEFT",rotateRightButton:"KUI_OSD_ROTATE_RIGHT"};this.viewer=new OpenSeadragon.Viewer(t),this.viewer.addHandler("full-screen",function(t){t.fullScreen?e.classList.add("fullscreen"):e.classList.remove("fullscreen")}),this.viewer.addHandler("resize",function(e){e.eventSource.svgOverlay().resize()})},e.prototype.openImages=function(){var e=this.images.map(function(e){return e.stillImageFileValue}),t=o.prepareTileSourcesFromFileValues(e);this.removeOverlays(),this.viewer.open(t)},e.prototype.removeOverlays=function(){var e,t;for(var n in this.regions)if(this.regions.hasOwnProperty(n))try{for(var o=C(this.regions[n]),i=o.next();!i.done;i=o.next()){var a=i.value;a instanceof SVGPolygonElement&&a.remove()}}catch(r){e={error:r}}finally{try{i&&!i.done&&(t=o["return"])&&t.call(o)}finally{if(e)throw e.error}}this.regions={},this.viewer.clearOverlays()},e.prototype.renderRegions=function(){var e,t,n=this;this.removeOverlays();var i=0,a=function(e){var t,a,l=e.stillImageFileValue.dimY/e.stillImageFileValue.dimX,s=[];e.regions.map(function(e){n.regions[e.regionResource.id]=[],e.getGeometries().map(function(t){var n=new D(t.geometry,e.regionResource);s.push(n)})}),s.sort(function(e,t){return"rectangle"===e.geometry.type&&"rectangle"===t.geometry.type?o.surfaceOfRectangularRegion(e.geometry)<o.surfaceOfRectangularRegion(t.geometry)?1:-1:0});try{for(var u=C(s),p=u.next();!p.done;p=u.next()){var c=p.value,g=c.geometry;r.createSVGOverlay(c.region.id,g,l,i,c.region.label)}}catch(d){t={error:d}}finally{try{p&&!p.done&&(a=u["return"])&&a.call(u)}finally{if(t)throw t.error}}i++},r=this;try{for(var l=C(this.images),s=l.next();!s.done;s=l.next()){a(s.value)}}catch(u){e={error:u}}finally{try{s&&!s.done&&(t=l["return"])&&t.call(l)}finally{if(e)throw e.error}}},e.prototype.createSVGOverlay=function(e,t,n,o,i){var a,r=this,l=t.lineColor,s=t.lineWidth;switch(t.type){case"rectangle":a=document.createElementNS("http://www.w3.org/2000/svg","polygon"),this.addSVGAttributesRectangle(a,t,n,o);break;case"polygon":a=document.createElementNS("http://www.w3.org/2000/svg","polygon"),this.addSVGAttributesPolygon(a,t,n,o);break;case"circle":a=document.createElementNS("http://www.w3.org/2000/svg","circle"),this.addSVGAttributesCircle(a,t,n,o);break;default:return void console.log("ERROR: StillImageOSDViewerComponent.createSVGOverlay: unknown geometryType: "+t.type)}a.id="roi-svgoverlay-"+1e4*Math.random(),a.setAttribute("class","roi-svgoverlay"),a.setAttribute("style","stroke: "+l+"; stroke-width: "+s+"px;"),a.addEventListener("click",function(){r.regionHovered.emit(e)},!1);var u=document.createElementNS("http://www.w3.org/2000/svg","title");u.textContent=i;var p=document.createElementNS("http://www.w3.org/2000/svg","g");p.appendChild(u),p.appendChild(a),this.viewer.svgOverlay().node().appendChild(p),this.regions[e].push(a)},e.prototype.addSVGAttributesRectangle=function(e,t,o,i){var a=t.points[0],r=t.points[1],l=new n.Point2D(Math.min(a.x,r.x),Math.min(a.y,r.y)),s=new n.Point2D(Math.max(a.x,r.x),Math.max(a.y,r.y)),u=[l,new n.Point2D(Math.max(a.x,r.x),Math.min(a.y,r.y)),s,new n.Point2D(Math.min(a.x,r.x),Math.max(a.y,r.y))],p=this.image2ViewPortCoords(u,o,i),c=this.createSVGPolygonPointsAttribute(p);e.setAttribute("points",c)},e.prototype.addSVGAttributesPolygon=function(e,t,n,o){var i=this.image2ViewPortCoords(t.points,n,o),a=this.createSVGPolygonPointsAttribute(i);e.setAttribute("points",a)},e.prototype.addSVGAttributesCircle=function(e,t,n,o){var i=this.image2ViewPortCoords(t.points,n,o),a=String(i[0].x),r=String(i[0].y),l=String(Math.sqrt(t.radius.x*t.radius.x+n*n*t.radius.y*t.radius.y));e.setAttribute("cx",a),e.setAttribute("cy",r),e.setAttribute("r",l)},e.prototype.image2ViewPortCoords=function(e,t,o){return e.map(function(e){return new n.Point2D(e.x+o,e.y*t)})},e.prototype.createSVGPolygonPointsAttribute=function(e){var t="";for(var n in e)e.hasOwnProperty(n)&&(t+=e[n].x,t+=",",t+=e[n].y,t+=" ");return t},O([t.Input(),I("design:type",Array)],e.prototype,"images",void 0),O([t.Input(),I("design:type",String)],e.prototype,"imageCaption",void 0),O([t.Input(),I("design:type",String)],e.prototype,"activateRegion",void 0),O([t.Output(),I("design:type",Object)],e.prototype,"regionHovered",void 0),e=o=O([t.Component({selector:"kui-still-image",template:'<div class="still-image-viewer">\n    <div class="navigation left">\n        <button mat-button class="full-size" id="KUI_OSD_PREV_PAGE">\n            <mat-icon>keyboard_arrow_left</mat-icon>\n        </button>\n    </div>\n\n    \x3c!-- main content with navigation and osd viewer --\x3e\n    <div class="content">\n\n        \x3c!-- openseadragon (osd) viewer --\x3e\n        <div class="osd-container"></div>\n        \x3c!-- /openseadragon (osd) --\x3e\n\n        \x3c!-- footer with image caption e.g. copyright information --\x3e\n        <div class="footer">\n            <p class="mat-caption" [innerHtml]="imageCaption"></p>\n        </div>\n\n        \x3c!-- action panel with tools for image --\x3e\n        <mat-toolbar class="action">\n            <mat-toolbar-row>\n                \x3c!-- home button --\x3e\n                <span>\n                <button mat-icon-button id="KUI_OSD_HOME"><mat-icon>home</mat-icon></button>\n            </span>\n                \x3c!-- zoom buttons --\x3e\n                <span class="fill-remaining-space"></span>\n                <span>\n                <button mat-icon-button id="KUI_OSD_ZOOM_IN"><mat-icon>add</mat-icon></button>\n                <button mat-icon-button id="KUI_OSD_ZOOM_OUT"><mat-icon>remove</mat-icon></button>\n            </span>\n                \x3c!-- window button --\x3e\n                <span class="fill-remaining-space"></span>\n                <span>\n                <button mat-icon-button id="KUI_OSD_FULL_PAGE"><mat-icon>fullscreen</mat-icon></button>\n            </span>\n            </mat-toolbar-row>\n        </mat-toolbar>\n\n    </div>\n\n    <div class="navigation right">\n        <button mat-button class="full-size" id="KUI_OSD_NEXT_PAGE">\n            <mat-icon>keyboard_arrow_right</mat-icon>\n        </button>\n    </div>\n\n</div>\n\n\x3c!-- simple image viewer e.g. as a preview --\x3e\n\x3c!-- TODO: handle images array --\x3e\n\x3c!--<img *ngIf="simple && images?.length === 1; else osdViewer" [src]="simpleImageExample">--\x3e\n\n\n\x3c!--\n    <div>\n        <span *ngIf="images.length > 1" (click)="gotoLeft()">&lt;&lt;</span>\n        <span *ngIf="images.length > 1" (click)="gotoRight()">&gt;&gt;</span>\n    </div>\n--\x3e\n\n\n\n',styles:[".still-image-viewer{display:-webkit-inline-box;display:inline-flex;height:400px;max-width:800px;width:100%}@media (max-height:636px){.still-image-viewer{height:300px}}.still-image-viewer .navigation{height:calc(400px + 64px + 24px);width:36px}.still-image-viewer .navigation .mat-button.full-size{height:100%!important;width:36px!important;padding:0!important;min-width:36px!important}.still-image-viewer .content{height:calc(400px + 64px + 24px);max-width:calc(800px - (2 * 36px));width:calc(100% - (2 * 36px))}.still-image-viewer .content .osd-container{color:#ccc;background-color:#000;height:400px}.still-image-viewer .content .osd-container.fullscreen{max-width:100vw}.still-image-viewer .content .footer p{color:#ccc;background-color:#000;height:24px;margin:0;padding:0 16px}::ng-deep .roi-svgoverlay{opacity:.4;fill:transparent;stroke:#00695c;stroke-width:2px;vector-effect:non-scaling-stroke}.roi-svgoverlay:focus,::ng-deep .roi-svgoverlay:hover{opacity:1}::ng-deep .roi-svgoverlay.active{opacity:1}"]}),I("design:paramtypes",[t.ElementRef])],e)}(),E=function(){function e(){}return e.prototype.ngOnInit=function(){},e=O([t.Component({selector:"kui-text",template:"<p>\n  text works!\n</p>\n",styles:[""]}),I("design:paramtypes",[])],e)}(),q=function(){function e(){}return Object.defineProperty(e.prototype,"valueObject",{get:function(){return this._booleanValueObj},set:function(e){this._booleanValueObj=e},enumerable:!0,configurable:!0}),O([t.Input(),I("design:type",n.ReadBooleanValue),I("design:paramtypes",[n.ReadBooleanValue])],e.prototype,"valueObject",null),e=O([t.Component({selector:"kui-boolean-value",template:'<mat-checkbox [checked]="valueObject.bool" disabled="true"></mat-checkbox>\n',styles:[".mat-form-field{width:320px}.fill-remaining-space{-webkit-box-flex:1;flex:1 1 auto}.center{text-align:center}.link{cursor:pointer}.lv-html-text{max-height:60px;position:relative;overflow:hidden}.lv-read-more{position:absolute;bottom:0;left:0;width:100%;text-align:center;margin:0;padding:30px 0;border-radius:3px}"]}),I("design:paramtypes",[])],e)}(),G=function(){function e(){}return Object.defineProperty(e.prototype,"valueObject",{get:function(){return this._colorValueObj},set:function(e){this._colorValueObj=e},enumerable:!0,configurable:!0}),O([t.Input(),I("design:type",n.ReadColorValue),I("design:paramtypes",[n.ReadColorValue])],e.prototype,"valueObject",null),e=O([t.Component({selector:"kui-color-value",template:'<span [style.background-color]="valueObject.colorHex">{{valueObject.colorHex}}</span>',styles:[".fill-remaining-space{-webkit-box-flex:1;flex:1 1 auto}.center{text-align:center}.link{cursor:pointer}.lv-html-text{max-height:60px;position:relative;overflow:hidden}.lv-read-more{position:absolute;bottom:0;left:0;width:100%;text-align:center;margin:0;padding:30px 0;border-radius:3px}.mat-form-field{width:36px;overflow-x:visible}"]}),I("design:paramtypes",[])],e)}(),N=function(){function e(){}return Object.defineProperty(e.prototype,"calendar",{get:function(){return this._calendar},set:function(e){this._calendar=e},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"era",{get:function(){return this._era},set:function(e){this._era=e},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"valueObject",{get:function(){return this._dateValueObj},set:function(e){this._dateValueObj=e;var t=this.valueObject.getDateSalsah();t instanceof n.DateRangeSalsah?(this.period=!0,this.dates=[this.getJSDate(t.start),this.getJSDate(t.end)]):(this.period=!1,this.dates=[this.getJSDate(t)])},enumerable:!0,configurable:!0}),e.prototype.getJSDate=function(e){return e.precision===n.Precision.yearPrecision?{format:"yyyy",date:new Date(e.year.toString()),era:e.era,calendar:e.calendar}:e.precision===n.Precision.monthPrecision?{format:"MMMM yyyy",date:new Date(e.year,e.month-1,1),era:e.era,calendar:e.calendar}:e.precision===n.Precision.dayPrecision?{format:"longDate",date:new Date(e.year,e.month-1,e.day),era:e.era,calendar:e.calendar}:void console.error("Error: incorrect precision for date")},O([t.Input(),I("design:type",Boolean),I("design:paramtypes",[Boolean])],e.prototype,"calendar",null),O([t.Input(),I("design:type",Boolean),I("design:paramtypes",[Boolean])],e.prototype,"era",null),O([t.Input(),I("design:type",n.ReadDateValue),I("design:paramtypes",[n.ReadDateValue])],e.prototype,"valueObject",null),e=O([t.Component({selector:"kui-date-value",template:'<span *ngIf="period; else preciseDate">\n    {{dates[0].date | date: dates[0].format}}\n    <span *ngIf="era">\n        {{dates[0].era}}\n    </span>\n    - {{dates[1].date | date: dates[1].format}}\n    <span *ngIf="era">\n        {{dates[1].era}}\n    </span>\n\n    <span *ngIf="calendar">\n        ({{dates[0].calendar}})\n    </span>\n</span>\n\n<ng-template #preciseDate>\n\n    <span>\n        {{dates[0].date | date: dates[0].format}}\n        <span *ngIf="era">\n            {{dates[0].era}}\n        </span>\n        <span *ngIf="calendar">\n            ({{dates[0].calendar}})\n        </span>\n    </span>\n\n</ng-template>\n',styles:[".mat-form-field{width:320px}.fill-remaining-space{-webkit-box-flex:1;flex:1 1 auto}.center{text-align:center}.link{cursor:pointer}.lv-html-text{max-height:60px;position:relative;overflow:hidden}.lv-read-more{position:absolute;bottom:0;left:0;width:100%;text-align:center;margin:0;padding:30px 0;border-radius:3px}"]}),I("design:paramtypes",[])],e)}(),U=function(){function e(){}return Object.defineProperty(e.prototype,"valueObject",{get:function(){return this._decimalValueObj},set:function(e){this._decimalValueObj=e},enumerable:!0,configurable:!0}),O([t.Input(),I("design:type",n.ReadDecimalValue),I("design:paramtypes",[n.ReadDecimalValue])],e.prototype,"valueObject",null),e=O([t.Component({selector:"kui-decimal-value",template:"<span>{{valueObject.decimal}}</span>",styles:[".mat-form-field{width:320px}.fill-remaining-space{-webkit-box-flex:1;flex:1 1 auto}.center{text-align:center}.link{cursor:pointer}.lv-html-text{max-height:60px;position:relative;overflow:hidden}.lv-read-more{position:absolute;bottom:0;left:0;width:100%;text-align:center;margin:0;padding:30px 0;border-radius:3px}"]}),I("design:paramtypes",[])],e)}(),B=function(){function e(){}return e.prototype.ngOnInit=function(){},e=O([t.Component({selector:"kui-external-res-value",template:"<p>\n  external-res-value works!\n</p>\n",styles:[".mat-form-field{width:320px}.fill-remaining-space{-webkit-box-flex:1;flex:1 1 auto}.center{text-align:center}.link{cursor:pointer}.lv-html-text{max-height:60px;position:relative;overflow:hidden}.lv-read-more{position:absolute;bottom:0;left:0;width:100%;text-align:center;margin:0;padding:30px 0;border-radius:3px}"]}),I("design:paramtypes",[])],e)}(),H=function(){function e(){}return Object.defineProperty(e.prototype,"valueObject",{get:function(){return this._geomValueObj},set:function(e){this._geomValueObj=e},enumerable:!0,configurable:!0}),O([t.Input(),I("design:type",n.ReadGeomValue),I("design:paramtypes",[n.ReadGeomValue])],e.prototype,"valueObject",null),e=O([t.Component({selector:"kui-geometry-value",template:"<span>{{valueObject.geometryString}}</span>",styles:[".mat-form-field{width:320px}.fill-remaining-space{-webkit-box-flex:1;flex:1 1 auto}.center{text-align:center}.link{cursor:pointer}.lv-html-text{max-height:60px;position:relative;overflow:hidden}.lv-read-more{position:absolute;bottom:0;left:0;width:100%;text-align:center;margin:0;padding:30px 0;border-radius:3px}"]}),I("design:paramtypes",[])],e)}(),Q=function(){function e(){}return e.prototype.ngOnInit=function(){},e=O([t.Component({selector:"kui-geoname-value",template:"<p>\n  geoname-value works!\n</p>",styles:[".mat-form-field{width:320px}.fill-remaining-space{-webkit-box-flex:1;flex:1 1 auto}.center{text-align:center}.link{cursor:pointer}.lv-html-text{max-height:60px;position:relative;overflow:hidden}.lv-read-more{position:absolute;bottom:0;left:0;width:100%;text-align:center;margin:0;padding:30px 0;border-radius:3px}"]}),I("design:paramtypes",[])],e)}(),z=function(){function e(){}return Object.defineProperty(e.prototype,"valueObject",{get:function(){return this._integerValueObj},set:function(e){this._integerValueObj=e},enumerable:!0,configurable:!0}),O([t.Input(),I("design:type",n.ReadIntegerValue),I("design:paramtypes",[n.ReadIntegerValue])],e.prototype,"valueObject",null),e=O([t.Component({selector:"kui-integer-value",template:"<span>{{valueObject.integer}}</span>",styles:[".mat-form-field{width:320px}.fill-remaining-space{-webkit-box-flex:1;flex:1 1 auto}.center{text-align:center}.link{cursor:pointer}.lv-html-text{max-height:60px;position:relative;overflow:hidden}.lv-read-more{position:absolute;bottom:0;left:0;width:100%;text-align:center;margin:0;padding:30px 0;border-radius:3px}"]}),I("design:paramtypes",[])],e)}(),X=function(){function e(){}return Object.defineProperty(e.prototype,"valueObject",{get:function(){return this._intervalValueObj},set:function(e){this._intervalValueObj=e},enumerable:!0,configurable:!0}),O([t.Input(),I("design:type",n.ReadIntervalValue),I("design:paramtypes",[n.ReadIntervalValue])],e.prototype,"valueObject",null),e=O([t.Component({selector:"kui-interval-value",template:"<span>{{valueObject.intervalStart}} - {{valueObject.intervalEnd}}</span>",styles:[".mat-form-field{width:320px}.fill-remaining-space{-webkit-box-flex:1;flex:1 1 auto}.center{text-align:center}.link{cursor:pointer}.lv-html-text{max-height:60px;position:relative;overflow:hidden}.lv-read-more{position:absolute;bottom:0;left:0;width:100%;text-align:center;margin:0;padding:30px 0;border-radius:3px}"]}),I("design:paramtypes",[])],e)}(),J=function(){function e(){this.referredResourceClicked=new t.EventEmitter}return Object.defineProperty(e.prototype,"ontologyInfo",{get:function(){return this._ontoInfo},set:function(e){this._ontoInfo=e},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"valueObject",{get:function(){return this._linkValueObj},set:function(e){this._linkValueObj=e,this.valueObject.referredResource!==undefined?this.referredResource=this.valueObject.referredResource.label:this.referredResource=this.valueObject.referredResourceIri},enumerable:!0,configurable:!0}),e.prototype.refResClicked=function(){this.referredResourceClicked.emit(this._linkValueObj)},O([t.Input(),I("design:type",n.OntologyInformation),I("design:paramtypes",[n.OntologyInformation])],e.prototype,"ontologyInfo",null),O([t.Input(),I("design:type",n.ReadLinkValue),I("design:paramtypes",[n.ReadLinkValue])],e.prototype,"valueObject",null),O([t.Output(),I("design:type",t.EventEmitter)],e.prototype,"referredResourceClicked",void 0),e=O([t.Component({selector:"kui-link-value",template:'<a class="salsah-link" (click)="refResClicked()">{{referredResource}}</a>',styles:[".mat-form-field{width:320px}.fill-remaining-space{-webkit-box-flex:1;flex:1 1 auto}.center{text-align:center}.link{cursor:pointer}.lv-html-text{max-height:60px;position:relative;overflow:hidden}.lv-read-more{position:absolute;bottom:0;left:0;width:100%;text-align:center;margin:0;padding:30px 0;border-radius:3px}"]}),I("design:paramtypes",[])],e)}(),Z=function(){function e(e){this._listCacheService=e}return Object.defineProperty(e.prototype,"valueObject",{get:function(){return this._listValueObj},set:function(e){this._listValueObj=e},enumerable:!0,configurable:!0}),e.prototype.ngOnChanges=function(){this.node=this._listCacheService.getListNode(this._listValueObj.listNodeIri)},O([t.Input(),I("design:type",n.ReadListValue),I("design:paramtypes",[n.ReadListValue])],e.prototype,"valueObject",null),e=O([t.Component({selector:"kui-list-value",template:'<span *ngIf="node | async">{{(node | async )?.label}}</span>\n',styles:[".mat-form-field{width:320px}.fill-remaining-space{-webkit-box-flex:1;flex:1 1 auto}.center{text-align:center}.link{cursor:pointer}.lv-html-text{max-height:60px;position:relative;overflow:hidden}.lv-read-more{position:absolute;bottom:0;left:0;width:100%;text-align:center;margin:0;padding:30px 0;border-radius:3px}"]}),I("design:paramtypes",[n.ListCacheService])],e)}(),Y=function(){function e(e){this.el=e,this.referredResourceClicked=new t.EventEmitter}return Object.defineProperty(e.prototype,"ontologyInfo",{get:function(){return this._ontoInfo},set:function(e){this._ontoInfo=e},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"bindEvents",{get:function(){return this._bindEvents},set:function(e){this._bindEvents=e},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"valueObject",{get:function(){return this._htmlValueObj},set:function(e){this._htmlValueObj=e,this.el.nativeElement.innerHTML&&(this.el.nativeElement.innerHTML=this.valueObject.html)},enumerable:!0,configurable:!0}),e.prototype.refResClicked=function(e){this.referredResourceClicked.emit(e)},e.prototype.onClick=function(e){return this._bindEvents&&"a"===e.nodeName.toLowerCase()&&e.className.toLowerCase().indexOf(n.KnoraConstants.SalsahLink)>=0&&e.href!==undefined?(this.refResClicked(e.href),!1):!(!this.bindEvents||"a"!==e.nodeName.toLowerCase()||e.href===undefined)&&(window.open(e.href,"_blank"),!1)},O([t.Output(),I("design:type",t.EventEmitter)],e.prototype,"referredResourceClicked",void 0),O([t.Input(),I("design:type",n.OntologyInformation),I("design:paramtypes",[n.OntologyInformation])],e.prototype,"ontologyInfo",null),O([t.Input(),I("design:type",Boolean),I("design:paramtypes",[Boolean])],e.prototype,"bindEvents",null),O([t.Input(),I("design:type",n.ReadTextValueAsHtml),I("design:paramtypes",[n.ReadTextValueAsHtml])],e.prototype,"valueObject",null),O([t.HostListener("click",["$event.target"]),I("design:type",Function),I("design:paramtypes",[Object]),I("design:returntype",void 0)],e.prototype,"onClick",null),e=O([t.Component({selector:"kui-text-value-as-html",template:"<div>{{valueObject.html}}</div>",styles:[""]}),I("design:paramtypes",[t.ElementRef])],e)}(),W=function(){function e(){}return Object.defineProperty(e.prototype,"valueObject",{get:function(){return this._textStringValueObj},set:function(e){this._textStringValueObj=e},enumerable:!0,configurable:!0}),O([t.Input(),I("design:type",n.ReadTextValueAsString),I("design:paramtypes",[n.ReadTextValueAsString])],e.prototype,"valueObject",null),e=O([t.Component({selector:"kui-text-value-as-string",template:"<span>{{valueObject.str}}</span>\n",styles:[""]}),I("design:paramtypes",[])],e)}(),$=function(){function e(){}return Object.defineProperty(e.prototype,"valueObject",{get:function(){return this._xmlValueObj},set:function(e){this._xmlValueObj=e},enumerable:!0,configurable:!0}),O([t.Input(),I("design:type",n.ReadTextValueAsXml),I("design:paramtypes",[n.ReadTextValueAsXml])],e.prototype,"valueObject",null),e=O([t.Component({selector:"kui-text-value-as-xml",template:"<span>{{valueObject.xml}}</span>",styles:[""]}),I("design:paramtypes",[])],e)}(),ee=function(){function e(){}return Object.defineProperty(e.prototype,"valueObject",{get:function(){return this._textfileValueObj},set:function(e){this._textfileValueObj=e},enumerable:!0,configurable:!0}),O([t.Input(),I("design:type",n.ReadTextFileValue),I("design:paramtypes",[n.ReadTextFileValue])],e.prototype,"valueObject",null),e=O([t.Component({selector:"kui-textfile-value",template:'<a target="_blank" href="{{valueObject.textFileURL}}">{{valueObject.textFilename}}</a>',styles:[""]}),I("design:paramtypes",[])],e)}(),te=function(){function e(){}return Object.defineProperty(e.prototype,"valueObject",{get:function(){return this.__uriValueObj},set:function(e){this.__uriValueObj=e},enumerable:!0,configurable:!0}),e.prototype.ngOnChanges=function(){this.label===undefined?this.displayString=this.__uriValueObj.uri:this.displayString=this.label},O([t.Input(),I("design:type",n.ReadUriValue),I("design:paramtypes",[n.ReadUriValue])],e.prototype,"valueObject",null),O([t.Input(),I("design:type",String)],e.prototype,"label",void 0),e=O([t.Component({selector:"   kui-uri-value",template:'<a href="{{valueObject.uri}}" target="_blank">{{displayString}}</a>\n',styles:[".mat-form-field{width:320px}.fill-remaining-space{-webkit-box-flex:1;flex:1 1 auto}.center{text-align:center}.link{cursor:pointer}.lv-html-text{max-height:60px;position:relative;overflow:hidden}.lv-read-more{position:absolute;bottom:0;left:0;width:100%;text-align:center;margin:0;padding:30px 0;border-radius:3px}"]}),I("design:paramtypes",[])],e)}(),ne=function(){function e(){}return e.prototype.ngOnInit=function(){},e=O([t.Component({selector:"kui-compare-view",template:"<p>\n  compare-view works!\n</p>\n",styles:[".mat-form-field{width:320px}.fill-remaining-space{-webkit-box-flex:1;flex:1 1 auto}.center{text-align:center}.link{cursor:pointer}.lv-html-text{max-height:60px;position:relative;overflow:hidden}.lv-read-more{position:absolute;bottom:0;left:0;width:100%;text-align:center;margin:0;padding:30px 0;border-radius:3px}"]}),I("design:paramtypes",[])],e)}(),oe=function(){function e(){}return e.prototype.ngOnInit=function(){},e=O([t.Component({selector:"kui-graph-view",template:"<p>This is the GraphView component to visualize the connection of a resource. This view will implement the d3js library</p>\n",styles:[".mat-form-field{width:320px}.fill-remaining-space{-webkit-box-flex:1;flex:1 1 auto}.center{text-align:center}.link{cursor:pointer}.lv-html-text{max-height:60px;position:relative;overflow:hidden}.lv-read-more{position:absolute;bottom:0;left:0;width:100%;text-align:center;margin:0;padding:30px 0;border-radius:3px}"]}),I("design:paramtypes",[])],e)}(),ie=function(){function e(e){this._router=e,this.KnoraConstants=n.KnoraConstants}return e.prototype.ngOnInit=function(){},e.prototype.openResource=function(e){var t="/resource/"+encodeURIComponent(e);this._router.navigate([t])},O([t.Input(),I("design:type",Object)],e.prototype,"result",void 0),O([t.Input(),I("design:type",n.OntologyInformation)],e.prototype,"ontologyInfo",void 0),e=O([t.Component({selector:"kui-grid-view",template:'<div>\n  \x3c!-- <kui-progress-indicator *ngIf="isLoading" [color]="\'#D88958\'"></kui-progress-indicator> --\x3e\n\n  <div fxLayout="row wrap" fxLayout.xs="column" fxLayoutGap="grid">\n\n    <div fxFlex.sm="50" fxFlex.md="33.3" fxFlex.lg="20" fxFlex.xl="16.6" fxFlex="16.6" *ngFor="let res of result" class="gv-preview">\n      <mat-card class="link" (click)="openResource(res.id)">\n\n        <mat-card-subtitle>{{ontologyInfo?.getLabelForResourceClass(res.type)}}</mat-card-subtitle>\n        <mat-card-title>{{res.label}}</mat-card-title>\n\n\n        <mat-card-content *ngFor="let prop of res.properties | kuiKey">\n          \x3c!-- description --\x3e\n          <div *ngFor="let val of prop.value | kuiKey">\n            <div [ngSwitch]="val.value.getClassName()">\n              <div class="lv-html-text" *ngSwitchCase="KnoraConstants.ReadTextValueAsHtml">\n                <kui-text-value-as-html [valueObject]="val.value" [ontologyInfo]="ontologyInfo" [bindEvents]="false"></kui-text-value-as-html>\n                <p class="lv-read-more"></p>\n              </div>\n              <div>\n                <kui-date-value *ngSwitchCase="KnoraConstants.ReadDateValue" [valueObject]="val.value" [calendar]="true" [era]="true"></kui-date-value>\n                <span *ngSwitchDefault="">{{val.value.getContent()}}</span>\n              </div>\n              <br>\n              <span *ngIf="ontologyInfo?.getLabelForProperty(prop.key) !== \'Text\'">\n                {{ontologyInfo?.getLabelForProperty(prop.key)}}\n              </span>\n            </div>\n          </div>\n        </mat-card-content>\n\n      </mat-card>\n    </div>\n  </div>\n\n\n</div>',styles:[".mat-form-field{width:320px}.fill-remaining-space{-webkit-box-flex:1;flex:1 1 auto}.center{text-align:center}.link{cursor:pointer}.lv-html-text{max-height:60px;position:relative;overflow:hidden}.lv-read-more{position:absolute;bottom:0;left:0;width:100%;text-align:center;margin:0;padding:30px 0;border-radius:3px}.gv-preview{margin:6px 0;padding:24px;word-wrap:break-word;border-radius:5px}.gv-preview .mat-card{height:160px;color:rgba(0,0,0,.81);overflow:hidden;padding-bottom:25px}.gv-preview .mat-card:hover{background:rgba(0,105,92,.39);color:#000}.gv-preview .mat-card:active{background:rgba(0,105,92,.61)}.gv-preview .mat-card .mat-card-title{font-size:12pt;font-weight:600}"]}),I("design:paramtypes",[o.Router])],e)}(),ae=function(){function e(e){this._router=e,this.KnoraConstants=n.KnoraConstants}return e.prototype.openResource=function(e){var t="/resource/"+encodeURIComponent(e);this._router.navigate([t])},O([t.Input(),I("design:type",Object)],e.prototype,"result",void 0),O([t.Input(),I("design:type",n.OntologyInformation)],e.prototype,"ontologyInfo",void 0),e=O([t.Component({selector:"kui-list-view",template:'<div>\n    \x3c!-- <kui-progress-indicator *ngIf="isLoading" [color]="\'#D88958\'"></kui-progress-indicator> --\x3e\n\n    <mat-list class="list-view lv-items" *ngFor="let res of result; let i = index; let last = last;">\n        <mat-list-item class="link" (click)="openResource(res.id)">\n            <mat-icon matListIcon>image_search</mat-icon>\n            <p matLine class="lv-res-label">{{ontologyInfo?.getLabelForResourceClass(res.type)}}</p>\n            <h3 matLine class="lv-label">{{res.label}}</h3>\n\n            <div matLine *ngFor="let prop of res.properties | kuiKey">\n\n                <div matLine *ngFor="let val of prop.value | kuiKey">\n\n                    <div [ngSwitch]="val.value.getClassName()">\n                        <span *ngIf="ontologyInfo?.getLabelForProperty(prop.key) !== \'Text\'" class="lv-prop-label">\n                            {{ontologyInfo?.getLabelForProperty(prop.key)}}:&nbsp;\n                        </span>\n\n                        <div class="lv-html-text">\n\n                            <div *ngSwitchCase="KnoraConstants.ReadTextValueAsHtml">\n                                <kui-text-value-as-html [valueObject]="val.value" [ontologyInfo]="ontologyInfo" [bindEvents]="false"></kui-text-value-as-html>\n                            </div>\n\n                            <kui-date-value *ngSwitchCase="KnoraConstants.ReadDateValue" [valueObject]="val.value" [calendar]="true" [era]="true"></kui-date-value>\n\n                            <span *ngSwitchDefault="">{{val.value.getContent()}}</span>\n\n                            \x3c!-- slice the end of long texts --\x3e\n                            <p class="lv-read-more"></p>\n\n                        </div>\n\n                    </div>\n\n                </div>\n\n            </div>\n\n        </mat-list-item>\n\n        <mat-divider *ngIf="!last"></mat-divider>\n\n    </mat-list>\n</div>\n',styles:[".mat-form-field{width:320px}.fill-remaining-space{-webkit-box-flex:1;flex:1 1 auto}.center{text-align:center}.link{cursor:pointer}.lv-html-text{max-height:60px;position:relative;overflow:hidden}.lv-read-more{position:absolute;bottom:0;left:0;width:100%;text-align:center;margin:0;padding:30px 0;border-radius:3px}.mat-list .mat-list-item .mat-line{white-space:normal!important}.list-view .mat-list-item{height:auto;min-height:40px;padding:8px 0}.lv-label{font-weight:700!important;font-size:16px!important;line-height:1.5}.lv-res-label{color:rgba(0,0,0,.54);font-size:14px!important}.lv-prop-label{font-style:italic}"]}),I("design:paramtypes",[o.Router])],e)}(),re=function(){function e(){}return e=O([t.Component({selector:"kui-properties-view",template:"<p>\n    properties-view works!\n</p>",styles:[".mat-form-field{width:320px}.fill-remaining-space{-webkit-box-flex:1;flex:1 1 auto}.center{text-align:center}.link{cursor:pointer}.lv-html-text{max-height:60px;position:relative;overflow:hidden}.lv-read-more{position:absolute;bottom:0;left:0;width:100%;text-align:center;margin:0;padding:30px 0;border-radius:3px}"]}),I("design:paramtypes",[])],e)}(),le=(require("jsonld"),function(){function e(e,t,o,i){this._route=e,this._router=t,this._resourceService=o,this._incomingService=i,this.KnoraConstants=n.KnoraConstants}return e.prototype.ngOnInit=function(){this.getResource(this.iri)},e.prototype.ngOnChanges=function(){this.getResource(this.iri)},e.prototype.getResource=function(e){var t=this;this.loading=!0,this._resourceService.getReadResource(decodeURIComponent(e)).subscribe(function(e){t.sequence=e,t.ontologyInfo=e.ontologyInformation;var n=t.sequence.resources[0].type;t.guiOrder=e.ontologyInformation.getResourceClasses()[n].guiOrder,t.collectImagesAndRegionsForResource(t.sequence.resources[0]),t.requestIncomingResources(),setTimeout(function(){t.loading=!1},1e3)},function(e){console.error(e)})},e.prototype.collectFileRepresentationsAndFileAnnotations=function(e){},e.prototype.collectImagesAndRegionsForResource=function(e){var t,o,i,a,r,l,s,u,p=[];if(e.properties[n.KnoraConstants.hasStillImageFileValue]!==undefined){var c=e.properties[n.KnoraConstants.hasStillImageFileValue].filter(function(e){return!e.isPreview});try{for(var g=C(c),d=g.next();!d.done;d=g.next()){var m=d.value,f=[];try{for(var v=C(e.incomingRegions),h=v.next();!h.done;h=v.next()){var y=h.value,b=new n.ImageRegion(y);f.push(b)}}catch(S){i={error:S}}finally{try{h&&!h.done&&(a=v["return"])&&a.call(v)}finally{if(i)throw i.error}}var x=new n.StillImageRepresentation(m,f);p.push(x)}}catch(j){t={error:j}}finally{try{d&&!d.done&&(o=g["return"])&&o.call(g)}finally{if(t)throw t.error}}}else if(e.incomingStillImageRepresentations.length>0){var w=e.incomingStillImageRepresentations.map(function(e){return e.properties[n.KnoraConstants.hasStillImageFileValue].filter(function(e){return!e.isPreview})}).reduce(function(e,t){return e.concat(t)});try{for(var k=C(w),O=k.next();!O.done;O=k.next()){m=O.value,f=[];try{for(var I=C(e.incomingRegions),R=I.next();!R.done;R=I.next()){y=R.value,b=new n.ImageRegion(y);f.push(b)}}catch(V){s={error:V}}finally{try{R&&!R.done&&(u=I["return"])&&u.call(I)}finally{if(s)throw s.error}}x=new n.StillImageRepresentation(m,f);p.push(x)}}catch(_){r={error:_}}finally{try{O&&!O.done&&(l=k["return"])&&l.call(k)}finally{if(r)throw r.error}}}e.stillImageRepresentationsToDisplay=p},e.prototype.requestIncomingResources=function(){this.sequence!==undefined&&(this.sequence.resources[0].properties[n.KnoraConstants.hasStillImageFileValue]&&this.getIncomingRegions(0),this.getIncomingLinks(0))},e.prototype.getIncomingRegions=function(e,t){var n=this;this._incomingService.getIncomingRegions(this.sequence.resources[0].id,e).subscribe(function(e){n.ontologyInfo.updateOntologyInformation(e.ontologyInformation),Array.prototype.push.apply(n.sequence.resources[0].incomingRegions,e.resources),n.collectImagesAndRegionsForResource(n.sequence.resources[0]),t!==undefined&&t(e.resources.length)},function(e){console.error(e),n.loading=!1})},e.prototype.getIncomingLinks=function(e,t){var n=this;this.loading=!0,this._incomingService.getIncomingLinksForResource(this.sequence.resources[0].id,e).subscribe(function(e){n.ontologyInfo.updateOntologyInformation(e.ontologyInformation),Array.prototype.push.apply(n.sequence.resources[0].incomingLinks,e.resources),t!==undefined&&t(e.resources.length),n.loading=!1},function(e){console.error(e),n.loading=!1})},e.prototype.openLink=function(e){this.loading=!0,this._router.navigate(["/resource/"+encodeURIComponent(e)])},O([t.Input(),I("design:type",String)],e.prototype,"iri",void 0),e=O([t.Component({selector:"kui-resource-view",template:'<div class="resource-view">\n\n    <kui-progress-indicator *ngIf="loading"></kui-progress-indicator>\n\n    <div *ngIf="!loading">\n\n        <div class="resource" *ngFor="let resource of sequence.resources; let last = last">\n\n            \x3c!-- 0) Title first? --\x3e\n            <mat-list>\n\n                <h3 class="mat-subheader">\n                    {{sequence.ontologyInformation.getLabelForResourceClass(resource.type)}}\n                </h3>\n\n                <mat-list-item>\n                    <h2 class="mat-headline">{{resource.label}}</h2>\n                </mat-list-item>\n\n            </mat-list>\n\n            \x3c!-- 1) show fileRepresentation first--\x3e\n            <div *ngFor="let prop of resource.properties | kuiKey">\n                <div [ngSwitch]="prop.key">\n\n                    <div *ngSwitchCase="KnoraConstants.hasStillImageFileValue" class="media">\n                        \x3c!-- if the property is of type stillImageFileValue, show the image with osd viewer from @knora/viewer TODO: the fileValue will be part of an own resource property --\x3e\n                        <kui-still-image *ngIf="resource.stillImageRepresentationsToDisplay.length > 0" class="osd-viewer" [imageCaption]="sequence.ontologyInformation.getLabelForProperty(prop.key)" [images]="resource.stillImageRepresentationsToDisplay">\n                        </kui-still-image>\n                    </div>\n\n                    \x3c!-- TODO: switch through all other media type --\x3e\n                    \x3c!--\n                    <kui-moving-image></kui-moving-image>\n                    <kui-audio></kui-audio>\n                    <kui-ddd></kui-ddd>\n                    <kui-document></kui-document>\n  \n                    <kui-collection></kui-collection>\n  \n                    <kui-annotation></kui-annotation>\n                    <kui-link-obj></kui-link-obj>\n                    <kui-object></kui-object>\n                    <kui-region></kui-region>\n                    <kui-text></kui-text>\n                    --\x3e\n\n                    <div *ngSwitchDefault class="hidden">\n                        \x3c!--<p>This media type ({{prop.key}}) is not yet implemented</p>--\x3e\n                    </div>\n                </div>\n            </div>\n\n            \x3c!-- 2) show properties, annotations (list of regions, sequences etc.), incomming resources (links, files) --\x3e\n            <div class="data">\n\n                <mat-tab-group class="full-width">\n                    <mat-tab label="Metadata">\n                        <mat-list>\n                            <div *ngFor="let prop of guiOrder; let last = last" class="property">\n                                <div *ngIf="resource.properties[prop?.property]">\n                                    \x3c!-- label of the property --\x3e\n                                    <h3 mat-subheader class="property-label">\n                                        {{sequence.ontologyInformation.getLabelForProperty(prop?.property)}}\n                                    </h3>\n                                    \x3c!-- the value(s) of the property --\x3e\n                                    <mat-list-item class="property-value-item" *ngFor="let val of resource.properties[prop?.property]; let lastItem = last">\n                                        <li [ngSwitch]="val.getClassName()" [class.list]="resource.properties[prop?.property].length > 1" [class.lastItem]="lastItem">\n                                            <kui-text-value-as-string *ngSwitchCase="KnoraConstants.ReadTextValueAsString" [valueObject]="val"></kui-text-value-as-string>\n                                            <kui-text-value-as-xml *ngSwitchCase="KnoraConstants.ReadTextValueAsXml" [valueObject]="val"></kui-text-value-as-xml>\n                                            <kui-date-value *ngSwitchCase="KnoraConstants.ReadDateValue" [valueObject]="val" [calendar]="true" [era]="true"></kui-date-value>\n                                            <kui-link-value class="app-link" *ngSwitchCase="KnoraConstants.ReadLinkValue" [valueObject]="val" [ontologyInfo]="ontologyInfo" (referredResourceClicked)="openLink(val.referredResourceIri)">\n                                            </kui-link-value>\n                                            <kui-integer-value *ngSwitchCase="KnoraConstants.ReadIntegerValue" [valueObject]="val"></kui-integer-value>\n                                            <kui-decimal-value *ngSwitchCase="KnoraConstants.ReadDecimalValue" [valueObject]="val"></kui-decimal-value>\n                                            <kui-geometry-value *ngSwitchCase="KnoraConstants.ReadGeomValue" [valueObject]="val"></kui-geometry-value>\n                                            <kui-color-value *ngSwitchCase="KnoraConstants.ReadColorValue" [valueObject]="val"></kui-color-value>\n                                            <kui-uri-value *ngSwitchCase="KnoraConstants.ReadUriValue" [valueObject]="val"></kui-uri-value>\n                                            <kui-boolean-value *ngSwitchCase="KnoraConstants.ReadBooleanValue" [valueObject]="val"></kui-boolean-value>\n                                            <kui-interval-value *ngSwitchCase="KnoraConstants.ReadIntervalValue" [valueObject]="val"></kui-interval-value>\n                                            <kui-list-value *ngSwitchCase="KnoraConstants.ReadListValue" [valueObject]="val"></kui-list-value>\n                                            <kui-textfile-value *ngSwitchCase="KnoraConstants.TextFileValue" [valueObject]="val"></kui-textfile-value>\n                                            <span *ngSwitchDefault>Not supported {{val.getClassName()}}</span>\n                                        </li>\n                                    </mat-list-item>\n                                </div>\n                            </div>\n                        </mat-list>\n                    </mat-tab>\n\n                    <mat-tab label="Annotations" *ngIf="resource.annotations?.length > 0">\n\n                    </mat-tab>\n\n                    <mat-tab label="Links / Connections" *ngIf="resource.incomingLinks?.length > 0">\n                        <div>\n                            <mat-list *ngFor="let incoming of resource.incomingLinks">\n                                <mat-list-item class="app-link link" (click)="openLink(incoming.id)">\n                                    <span>{{incoming.label}}</span>\n                                </mat-list-item>\n                            </mat-list>\n                        </div>\n                    </mat-tab>\n\n                </mat-tab-group>\n\n            </div>\n\n            \x3c!-- in case of more than one resource --\x3e\n            <mat-divider *ngIf="!last"></mat-divider>\n\n        </div>\n\n    </div>\n</div>\n\n\n\x3c!-- OLD / first template\n  <mat-card>\n  \n  \n    <h2>metadata for resource {{ resource?.label}} ({{ resource?.id }})</h2>\n    <h3>type: {{ontologyInfo?.getLabelForResourceClass(resource?.type)}}</h3>\n  \n    <div *ngFor="let prop of resource?.properties | kuiKey">\n        <mat-list>\n            <span>{{ontologyInfo?.getLabelForProperty(prop.key)}}</span>\n            <mat-list-item *ngFor="let val of prop.value">\n                <span [ngSwitch]="val.getClassName()">\n                    <kui-color-value *ngSwitchCase="KnoraConstants.ReadColorValue"\n                                     [valueObject]="val"></kui-color-value>\n                    <kui-text-value-as-html *ngSwitchCase="KnoraConstants.ReadTextValueAsHtml" [valueObject]="val"\n                                            [ontologyInfo]="ontologyInfo" [bindEvents]="true"></kui-text-value-as-html>\n                    <kui-text-value-as-string *ngSwitchCase="KnoraConstants.ReadTextValueAsString"\n                                              [valueObject]="val"></kui-text-value-as-string>\n                    <kui-text-value-as-xml *ngSwitchCase="KnoraConstants.ReadTextValueAsXml"\n                                           [valueObject]="val"></kui-text-value-as-xml>\n                    <kui-date-value *ngSwitchCase="KnoraConstants.ReadDateValue" [valueObject]="val"></kui-date-value>\n                    <kui-link-value *ngSwitchCase="KnoraConstants.ReadLinkValue" [valueObject]="val"\n                                    [ontologyInfo]="ontologyInfo"></kui-link-value>\n                    <kui-integer-value *ngSwitchCase="KnoraConstants.ReadIntegerValue"\n                                       [valueObject]="val"></kui-integer-value>\n                    <kui-decimal-value *ngSwitchCase="KnoraConstants.ReadDecimalValue"\n                                       [valueObject]="val"></kui-decimal-value>\n                    <kui-geometry-value *ngSwitchCase="KnoraConstants.ReadGeomValue"\n                                        [valueObject]="val"></kui-geometry-value>\n                    <kui-uri-value *ngSwitchCase="KnoraConstants.ReadUriValue" [valueObject]="val"></kui-uri-value>\n                    <kui-boolean-value *ngSwitchCase="KnoraConstants.ReadBooleanValue"\n                                       [valueObject]="val"></kui-boolean-value>\n                    <kui-interval-value *ngSwitchCase="KnoraConstants.ReadIntervalValue"\n                                        [valueObject]="val"></kui-interval-value>\n                    <kui-list-value *ngSwitchCase="KnoraConstants.ReadListValue" [valueObject]="val"></kui-list-value>\n                    <kui-textfile-value *ngSwitchCase="KnoraConstants.TextFileValue"\n                                        [valueObject]="val"></kui-textfile-value>\n                    <span *ngSwitchDefault="">Not supported {{val.getClassName()}}</span>\n                </span>\n            </mat-list-item>\n        </mat-list>\n    </div>\n  \n  </mat-card>\n  --\x3e\n',styles:[".mat-form-field{width:320px}.fill-remaining-space{-webkit-box-flex:1;flex:1 1 auto}.center{text-align:center}.link{cursor:pointer}.lv-html-text{max-height:60px;position:relative;overflow:hidden}.lv-read-more{position:absolute;bottom:0;left:0;width:100%;text-align:center;margin:0;padding:30px 0;border-radius:3px}.resource-view{max-width:720px;margin:0 auto}.resource-view .resource .media{width:720px;height:calc(720px / (4 / 3))}.resource-view .resource .data{min-height:700px;padding:24px 36px}.hidden{display:none}.property{margin-bottom:12px}.property .property-value-item{min-height:48px;height:auto}.property .property-value-item li{list-style-type:none}.property .property-value-item li.list:before{content:'-    '}.property .property-value-item li.lastItem{margin-bottom:12px}.app-link:hover{background-color:#f1f1f1}"]}),I("design:paramtypes",[o.ActivatedRoute,o.Router,n.ResourceService,n.IncomingService])],e)}()),se=function(){function e(){this.KnoraConstants=n.KnoraConstants}return e.prototype.ngOnInit=function(){},O([t.Input(),I("design:type",Object)],e.prototype,"result",void 0),O([t.Input(),I("design:type",Object)],e.prototype,"ontologyInfo",void 0),O([t.Input(),I("design:type",Object)],e.prototype,"isLoading",void 0),e=O([t.Component({selector:"kui-table-view",template:"<p>\n  table-view works!\n</p>\n",styles:[""]}),I("design:paramtypes",[])],e)}(),ue=function(){function e(e,t,o,i){var a=this;this._route=e,this._searchService=t,this._searchParamsService=o,this._router=i,this.complexView=!1,this.KnoraConstants=n.KnoraConstants,this.offset=0,this.maxOffset=0,this.result=[],this.badRequest=!1,this.loading=!0,this.errorMessage=new n.ApiServiceError,this.pagingLimit=25,this.processSearchResults=function(e){a.ontologyInfo===undefined?a.ontologyInfo=e.ontologyInformation:a.ontologyInfo.updateOntologyInformation(e.ontologyInformation),a.result=a.result.concat(e.resources),a.loading=!1},this.showNumberOfAllResults=function(e){a.numberOfAllResults=e.numberOfResults,a.numberOfAllResults>0?a.maxOffset=Math.floor((a.numberOfAllResults-1)/a.pagingLimit):a.maxOffset=0}}return e.prototype.ngOnInit=function(){},e.prototype.ngOnChanges=function(){var e=this;this._route.paramMap.subscribe(function(t){e.searchMode||(e.searchMode=t.get("mode")),t.get("project")&&e.projectIri!==decodeURIComponent(t.get("project"))&&(e.projectIri=decodeURIComponent(t.get("project"))),e.offset=0,e.result=[],"fulltext"===e.searchMode?(e.searchQuery=t.get("q"),e.badRequest=e.searchQuery.length<3):"extended"===e.searchMode&&(e.gravsearchGenerator=e._searchParamsService.getSearchParams(),e.searchQuery?e.gravSearchQuery=e.searchQuery:e.generateGravsearchQuery()),e.getResult()})},e.prototype.generateGravsearchQuery=function(){var e=this.gravsearchGenerator.generateGravsearch(this.offset);!1!==e?this.gravSearchQuery=e:this._router.navigate([""],{relativeTo:this._route})},e.prototype.getResult=function(){var e=this;if(this.loading=!0,this.errorMessage=undefined,"fulltext"===this.searchMode)if(this.badRequest)this.errorMessage=new n.ApiServiceError,this.errorMessage.errorInfo="A search value is expected to have at least length of 3 characters.",this.loading=!1;else{var t=void 0;this.projectIri!==undefined&&(t={limitToProject:this.projectIri}),0===this.offset&&this._searchService.doFullTextSearchCountQueryCountQueryResult(this.searchQuery,t).subscribe(this.showNumberOfAllResults,function(t){e.errorMessage=t}),this._searchService.doFullTextSearchReadResourceSequence(this.searchQuery,this.offset,t).subscribe(this.processSearchResults,function(t){e.errorMessage=t,console.log("error",t),console.log("message",e.errorMessage)})}else"extended"===this.searchMode?(0===this.offset&&this._searchService.doExtendedSearchCountQueryCountQueryResult(this.gravSearchQuery).subscribe(this.showNumberOfAllResults,function(t){e.errorMessage=t}),this._searchService.doExtendedSearchReadResourceSequence(this.gravSearchQuery).subscribe(this.processSearchResults,function(t){e.errorMessage=t})):(this.errorMessage=new n.ApiServiceError,this.errorMessage.errorInfo="search mode invalid: "+this.searchMode)},e.prototype.loadMore=function(e){this.offset<this.maxOffset&&(this.offset++,"extended"===this.searchMode&&this.generateGravsearchQuery(),this.getResult())},O([t.Input(),I("design:type",Boolean)],e.prototype,"complexView",void 0),O([t.Input(),I("design:type",String)],e.prototype,"searchQuery",void 0),O([t.Input(),I("design:type",String)],e.prototype,"searchMode",void 0),O([t.Input(),I("design:type",String)],e.prototype,"projectIri",void 0),e=O([t.Component({selector:"kui-search-results",template:'<kui-progress-indicator *ngIf="loading"></kui-progress-indicator>\n\n<div *ngIf="!loading && !badRequest">\n\n    <div *ngIf="numberOfAllResults !== 0 && result; else noResult">\n\n        <mat-tab-group animationDuration="0ms" [selectedIndex]="1">\n            <mat-tab disabled>\n                <ng-template mat-tab-label>\n                    \x3c!-- <mat-icon class="tab-icon">hashtag</mat-icon> --\x3e\n                    <h4 class="search-results-title">Results: {{numberOfAllResults}}</h4>\n                </ng-template>\n            </mat-tab>\n            <mat-tab>\n                <ng-template mat-tab-label>\n                    <mat-icon class="tab-icon">view_list</mat-icon>\n                    List\n                </ng-template>\n                <kui-list-view [result]="result" [ontologyInfo]="ontologyInfo"></kui-list-view>\n            </mat-tab>\n\n            \x3c!-- in caase of complexView: show tab to switch to grid view --\x3e\n            <mat-tab *ngIf="complexView">\n                <ng-template mat-tab-label>\n                    <mat-icon class="tab-icon">view_module</mat-icon>\n                    Grid\n                </ng-template>\n                <kui-grid-view [result]="result" [ontologyInfo]="ontologyInfo"></kui-grid-view>\n            </mat-tab>\n            \x3c!-- not yet implemented! --\n            <mat-tab>\n                <ng-template mat-tab-label>\n                    <mat-icon class="tab-icon">table_chart</mat-icon>\n                    Table\n                </ng-template>\n                <kui-table-view [result]="result" [ontologyInfo]="ontologyInfo">\n                </kui-table-view>\n            </mat-tab>\n            --\x3e\n\n            \x3c!-- the following tab we don\'t need anymore? The GravSearch view will be part of the export menu --\n            <mat-tab>\n                <ng-template mat-tab-label>\n                    <mat-icon class="tab-icon">code</mat-icon>\n                    Gravsearch\n                </ng-template>\n                <kui-gravsearch-view></kui-gravsearch-view>\n            </mat-tab>\n            --\x3e\n\n        </mat-tab-group>\n        \x3c!-- <div>\n            <p>List view n°2</p>\n            <kui-list-view [result]="result" [ontologyInfo]="ontologyInfo" *ngIf="!complexView"></kui-list-view>\n        </div> --\x3e\n\n        <div class="load-panel" *ngIf="result.length > 0">\n            <button mat-flat-button color="primary" class="link center" (click)="loadMore(offset)"\n                    *ngIf="offset < maxOffset">Load more\n                <mat-icon>keyboard_arrow_down</mat-icon>\n            </button>\n        </div>\n\n    </div>\n\n    \x3c!-- In case of 0 result --\x3e\n    <ng-template #noResult>\n        <kui-message [message]="{status: 404, statusMsg: \'No results\', statusText: \'Sorry, but we couldn\\\'t find any results matching your search\'}"\n                     [medium]="true"></kui-message>\n        \x3c!-- <p><strong>No result</strong></p> --\x3e\n    </ng-template>\n\n</div>\n\n\x3c!-- Error message --\x3e\n<kui-message *ngIf="errorMessage" [message]="{status: 400, statusText: errorMessage.errorInfo}" [medium]="true">\n</kui-message>\n',styles:[".load-panel{width:100%}.load-panel .center{display:block;line-height:24px;margin:12px auto}.tab-icon{margin-right:8px}"]}),I("design:paramtypes",[o.ActivatedRoute,n.SearchService,n.SearchParamsService,o.Router])],e)}(),pe=function(){function e(){}return e=O([t.NgModule({imports:[i.CommonModule,n.KuiCoreModule,k.KuiActionModule,l.MatAutocompleteModule,s.MatButtonModule,u.MatCardModule,p.MatCheckboxModule,w.MatDatepickerModule,g.MatExpansionModule,d.MatFormFieldModule,f.MatInputModule,m.MatIconModule,v.MatListModule,c.MatNativeDateModule,h.MatSlideToggleModule,y.MatTabsModule,b.MatToolbarModule,x.MatTooltipModule,a.ReactiveFormsModule,r.FlexLayoutModule],declarations:[R,S,j,V,_,M,L,P,A,T,E,Y,W,$,ee,N,z,G,U,te,q,H,Q,X,Z,J,B,ae,ie,se,le,ne,oe,re,ue],exports:[R,S,j,V,_,M,L,P,A,T,E,Y,W,$,ee,N,z,G,U,te,q,H,Q,X,Z,J,B,ae,ie,se,le,ne,oe,re,ue]})],e)}();e.AnnotationComponent=R,e.AudioComponent=S,e.BooleanValueComponent=q,e.CollectionComponent=j,e.ColorValueComponent=G,e.CompareViewComponent=ne,e.DateValueComponent=N,e.DddComponent=V,e.DecimalValueComponent=U,e.DocumentComponent=_,e.ExternalResValueComponent=B,e.GeometryForRegion=D,e.GeometryValueComponent=H,e.GeonameValueComponent=Q,e.GraphViewComponent=oe,e.GridViewComponent=ie,e.ImageRegion=K,e.IntegerValueComponent=z,e.IntervalValueComponent=X,e.KuiViewerModule=pe,e.LinkObjComponent=M,e.LinkValueComponent=J,e.ListValueComponent=Z,e.ListViewComponent=ae,e.MovingImageComponent=L,e.ObjectComponent=P,e.PropertiesViewComponent=re,e.RegionComponent=A,e.ResourceViewComponent=le,e.SearchResultsComponent=ue,e.StillImageComponent=T,e.StillImageRepresentation=F,e.TableViewComponent=se,e.TextComponent=E,e.TextValueAsHtmlComponent=Y,e.TextValueAsStringComponent=W,e.TextValueAsXmlComponent=$,e.TextfileValueComponent=ee,e.UriValueComponent=te,e.ɵa=R,e.ɵb=S,e.ɵba=B,e.ɵbb=ae,e.ɵbc=ie,e.ɵbd=se,e.ɵbe=le,e.ɵbf=ne,e.ɵbg=oe,e.ɵbh=re,e.ɵbi=ue,e.ɵc=j,e.ɵd=V,e.ɵe=_,e.ɵf=M,e.ɵg=L,e.ɵh=P,e.ɵi=A,e.ɵj=T,e.ɵk=E,e.ɵl=Y,e.ɵm=W,e.ɵn=$,e.ɵo=ee,e.ɵp=N,e.ɵq=z,e.ɵr=G,e.ɵs=U,e.ɵt=te,e.ɵu=q,e.ɵv=H,e.ɵw=Q,e.ɵx=X,e.ɵy=Z,e.ɵz=J,Object.defineProperty(e,"__esModule",{value:!0})});
//# sourceMappingURL=knora-viewer.umd.min.js.map