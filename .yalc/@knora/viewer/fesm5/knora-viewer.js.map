{"version":3,"file":"knora-viewer.js.map","sources":["ng://@knora/viewer/lib/resource/annotation/annotation.component.ts","ng://@knora/viewer/lib/resource/audio/audio.component.ts","ng://@knora/viewer/lib/resource/collection/collection.component.ts","ng://@knora/viewer/lib/resource/ddd/ddd.component.ts","ng://@knora/viewer/lib/resource/document/document.component.ts","ng://@knora/viewer/lib/resource/link-obj/link-obj.component.ts","ng://@knora/viewer/lib/resource/moving-image/moving-image.component.ts","ng://@knora/viewer/lib/resource/object/object.component.ts","ng://@knora/viewer/lib/resource/region/region.component.ts","ng://@knora/viewer/lib/resource/still-image/still-image.component.ts","ng://@knora/viewer/lib/resource/text/text.component.ts","ng://@knora/viewer/lib/property/boolean-value/boolean-value.component.ts","ng://@knora/viewer/lib/property/color-value/color-value.component.ts","ng://@knora/viewer/lib/property/date-value/date-value.component.ts","ng://@knora/viewer/lib/property/decimal-value/decimal-value.component.ts","ng://@knora/viewer/lib/property/external-res-value/external-res-value.component.ts","ng://@knora/viewer/lib/property/geometry-value/geometry-value.component.ts","ng://@knora/viewer/lib/property/geoname-value/geoname-value.component.ts","ng://@knora/viewer/lib/property/integer-value/integer-value.component.ts","ng://@knora/viewer/lib/property/interval-value/interval-value.component.ts","ng://@knora/viewer/lib/property/link-value/link-value.component.ts","ng://@knora/viewer/lib/property/list-value/list-value.component.ts","ng://@knora/viewer/lib/property/text-value/text-value-as-html/text-value-as-html.component.ts","ng://@knora/viewer/lib/property/text-value/text-value-as-string/text-value-as-string.component.ts","ng://@knora/viewer/lib/property/text-value/text-value-as-xml/text-value-as-xml.component.ts","ng://@knora/viewer/lib/property/textfile-value/textfile-value.component.ts","ng://@knora/viewer/lib/property/uri-value/uri-value.component.ts","ng://@knora/viewer/lib/view/compare-view/compare-view.component.ts","ng://@knora/viewer/lib/view/graph-view/graph-view.component.ts","ng://@knora/viewer/lib/view/grid-view/grid-view.component.ts","ng://@knora/viewer/lib/view/list-view/list-view.component.ts","ng://@knora/viewer/lib/view/properties-view/properties-view.component.ts","ng://@knora/viewer/lib/view/resource-view/resource-view.component.ts","ng://@knora/viewer/lib/view/table-view/table-view.component.ts","ng://@knora/viewer/lib/view/search-results/search-results.component.ts","ng://@knora/viewer/lib/viewer.module.ts","ng://@knora/viewer/public_api.ts","ng://@knora/viewer/knora-viewer.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'kui-annotation',\n  templateUrl: './annotation.component.html',\n  styleUrls: ['./annotation.component.scss']\n})\nexport class AnnotationComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'kui-audio',\n  templateUrl: './audio.component.html',\n  styleUrls: ['./audio.component.scss']\n})\nexport class AudioComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'kui-collection',\n  templateUrl: './collection.component.html',\n  styleUrls: ['./collection.component.scss']\n})\nexport class CollectionComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'kui-ddd',\n  templateUrl: './ddd.component.html',\n  styleUrls: ['./ddd.component.scss']\n})\nexport class DddComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'kui-document',\n  templateUrl: './document.component.html',\n  styleUrls: ['./document.component.scss']\n})\nexport class DocumentComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'kui-link-obj',\n  templateUrl: './link-obj.component.html',\n  styleUrls: ['./link-obj.component.scss']\n})\nexport class LinkObjComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'kui-moving-image',\n  templateUrl: './moving-image.component.html',\n  styleUrls: ['./moving-image.component.scss']\n})\nexport class MovingImageComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'kui-object',\n  templateUrl: './object.component.html',\n  styleUrls: ['./object.component.scss']\n})\nexport class ObjectComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'kui-region',\n  templateUrl: './region.component.html',\n  styleUrls: ['./region.component.scss']\n})\nexport class RegionComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import {\n    Component,\n    ElementRef,\n    EventEmitter,\n    Input,\n    OnChanges,\n    OnDestroy,\n    OnInit,\n    Output,\n    SimpleChange\n} from '@angular/core';\nimport {\n    KnoraConstants,\n    Point2D,\n    ReadGeomValue,\n    ReadResource,\n    ReadStillImageFileValue,\n    RegionGeometry\n} from '@knora/core';\n\n\n// This component needs the openseadragon library itself, as well as the openseadragon plugin openseadragon-svg-overlay\n// Both libraries are installed via package.json, and loaded globally via the script tag in .angular-cli.json\n\n// OpenSeadragon does not export itself as ES6/ECMA2015 module,\n// it is loaded globally in scripts tag of angular-cli.json,\n// we still need to declare the namespace to make TypeScript compiler happy.\ndeclare let OpenSeadragon: any;\n\n/**\n * Represents a region.\n * Contains a reference to the resource representing the region and its geometries.\n */\nexport class ImageRegion {\n\n    /**\n     *\n     * @param regionResource a resource of type Region\n     */\n    constructor(readonly regionResource: ReadResource) {\n\n    }\n\n    /**\n     * Get all geometry information belonging to this region.\n     *\n     * @returns\n     */\n    getGeometries() {\n        return this.regionResource.properties[KnoraConstants.hasGeometry] as ReadGeomValue[];\n    }\n}\n\n/**\n * Represents an image including its regions.\n */\nexport class StillImageRepresentation {\n\n    /**\n     *\n     * @param stillImageFileValue a [[ReadStillImageFileValue]] representing an image.\n     * @param regions the regions belonging to the image.\n     */\n    constructor(readonly stillImageFileValue: ReadStillImageFileValue, readonly regions: ImageRegion[]) {\n\n    }\n\n}\n\n/**\n * Represents a geometry belonging to a specific region.\n */\nexport class GeometryForRegion {\n\n    /**\n     *\n     * @param geometry the geometrical information.\n     * @param region the region the geometry belongs to.\n     */\n    constructor(readonly geometry: RegionGeometry, readonly region: ReadResource) {\n    }\n\n}\n\n/**\n * Collection of `SVGPolygonElement` for individual regions.\n */\ninterface PolygonsForRegion {\n\n    [key: string]: SVGPolygonElement[];\n\n}\n\n/**\n * This component creates a OpenSeadragon viewer instance.\n * Accepts an array of ReadResource containing (among other resources) ReadStillImageFileValues to be rendered.\n * @member resources - resources containing (among other resources) the StillImageFileValues and incoming regions to be rendered. (Use as angular @Input data binding property.)\n */\n@Component({\n    selector: 'kui-still-image',\n    templateUrl: './still-image.component.html',\n    styleUrls: ['./still-image.component.scss']\n})\nexport class StillImageComponent implements OnInit, OnChanges, OnDestroy {\n\n    @Input() images: StillImageRepresentation[];\n    @Input() imageCaption?: string;\n    @Input() activateRegion: string; // highlight a region\n\n    @Output() regionHovered = new EventEmitter<string>();\n\n    private viewer;\n    private regions: PolygonsForRegion = {};\n\n    /**\n     * Calculates the surface of a rectangular region.\n     *\n     * @param geom the region's geometry.\n     * @returns the surface.\n     */\n    private static surfaceOfRectangularRegion(geom: RegionGeometry): number {\n\n        if (geom.type !== 'rectangle') {\n            console.log('expected rectangular region, but ' + geom.type + ' given');\n            return 0;\n        }\n\n        const w = Math.max(geom.points[0].x, geom.points[1].x) - Math.min(geom.points[0].x, geom.points[1].x);\n        const h = Math.max(geom.points[0].y, geom.points[1].y) - Math.min(geom.points[0].y, geom.points[1].y);\n\n        return w * h;\n\n    }\n\n    /**\n     * Prepare tile sources from the given sequence of [[ReadStillImageFileValue]].\n     *\n     * @param imagesToDisplay the given file values to de displayed.\n     * @returns the tile sources to be passed to OSD viewer.\n     */\n    private static prepareTileSourcesFromFileValues(imagesToDisplay: ReadStillImageFileValue[]): Object[] {\n        let imageXOffset = 0;\n        const imageYOffset = 0;\n        const tileSources = [];\n\n        for (const image of imagesToDisplay) {\n            const sipiBasePath = image.imageServerIIIFBaseURL + '/' + image.imageFilename;\n            const width = image.dimX;\n            const height = image.dimY;\n\n            // construct OpenSeadragon tileSources according to https://openseadragon.github.io/docs/OpenSeadragon.Viewer.html#open\n            tileSources.push({\n                // construct IIIF tileSource configuration according to\n                // http://iiif.io/api/image/2.1/#technical-properties\n                // see also http://iiif.io/api/image/2.0/#a-implementation-notes\n                'tileSource': {\n                    '@context': 'http://iiif.io/api/image/2/context.json',\n                    '@id': sipiBasePath,\n                    'height': height,\n                    'width': width,\n                    'profile': ['http://iiif.io/api/image/2/level2.json'],\n                    'protocol': 'http://iiif.io/api/image',\n                    'tiles': [{\n                        'scaleFactors': [1, 2, 4, 8, 16, 32],\n                        'width': 1024\n                    }]\n                },\n                'x': imageXOffset,\n                'y': imageYOffset\n            });\n\n            imageXOffset++;\n        }\n\n        return tileSources;\n    }\n\n    constructor(private elementRef: ElementRef) {\n    }\n\n    ngOnChanges(changes: { [key: string]: SimpleChange }) {\n        if (changes['images'] && changes['images'].isFirstChange()) {\n            this.setupViewer();\n        }\n        if (changes['images']) {\n            this.openImages();\n            this.renderRegions();\n\n            this.unhighlightAllRegions();\n            if (this.activateRegion !== undefined) {\n                this.highlightRegion(this.activateRegion);\n            }\n        } else if (changes['activateRegion']) {\n            this.unhighlightAllRegions();\n            if (this.activateRegion !== undefined) {\n                this.highlightRegion(this.activateRegion);\n            }\n        }\n    }\n\n    ngOnInit() {\n        // initialisation is done on first run of ngOnChanges\n    }\n\n    ngOnDestroy() {\n        if (this.viewer) {\n            this.viewer.destroy();\n            this.viewer = undefined;\n        }\n    }\n\n    /**\n     * Renders all ReadStillImageFileValues to be found in [[this.images]].\n     * (Although this.images is a Angular Input property, the built-in change detection of Angular does not detect changes in complex objects or arrays, only reassignment of objects/arrays.\n     * Use this method if additional ReadStillImageFileValues were added to this.images after creation/assignment of the this.images array.)\n     */\n    updateImages() {\n        if (!this.viewer) {\n            this.setupViewer();\n        }\n        this.openImages();\n    }\n\n    /**\n     * Renders all regions to be found in [[this.images]].\n     * (Although this.images is a Angular Input property, the built-in change detection of Angular does not detect changes in complex objects or arrays, only reassignment of objects/arrays.\n     * Use this method if additional regions were added to the resources.images)\n     */\n    updateRegions() {\n        if (!this.viewer) {\n            this.setupViewer();\n        }\n        this.renderRegions();\n    }\n\n    /**\n     * Highlights the polygon elements associated with the given region.\n     *\n     * @param regionIri the Iri of the region whose polygon elements should be highlighted..\n     */\n    private highlightRegion(regionIri) {\n\n        const activeRegion: SVGPolygonElement[] = this.regions[regionIri];\n\n        if (activeRegion !== undefined) {\n            for (const pol of activeRegion) {\n                pol.setAttribute('class', 'roi-svgoverlay active');\n            }\n        }\n    }\n\n    /**\n     * Unhighlights the polygon elements of all regions.\n     *\n     */\n    private unhighlightAllRegions() {\n\n        for (const reg in this.regions) {\n            if (this.regions.hasOwnProperty(reg)) {\n                for (const pol of this.regions[reg]) {\n                    pol.setAttribute('class', 'roi-svgoverlay');\n                }\n            }\n        }\n    }\n\n    /**\n     * Initializes the OpenSeadragon viewer\n     */\n    private setupViewer(): void {\n        const viewerContainer = this.elementRef.nativeElement.getElementsByClassName('osd-container')[0];\n        const osdOptions = {\n            element: viewerContainer,\n            sequenceMode: true,\n            showReferenceStrip: true,\n            showNavigator: true,\n            zoomInButton: 'KUI_OSD_ZOOM_IN',\n            zoomOutButton: 'KUI_OSD_ZOOM_OUT',\n            previousButton: 'KUI_OSD_PREV_PAGE',\n            nextButton: 'KUI_OSD_NEXT_PAGE',\n            homeButton: 'KUI_OSD_HOME',\n            fullPageButton: 'KUI_OSD_FULL_PAGE',\n            rotateLeftButton: 'KUI_OSD_ROTATE_LEFT',        // doesn't work yet\n            rotateRightButton: 'KUI_OSD_ROTATE_RIGHT'       // doesn't work yet\n\n        };\n        this.viewer = new OpenSeadragon.Viewer(osdOptions);\n        this.viewer.addHandler('full-screen', function (args) {\n            if (args.fullScreen) {\n                viewerContainer.classList.add('fullscreen');\n            } else {\n                viewerContainer.classList.remove('fullscreen');\n            }\n        });\n        this.viewer.addHandler('resize', function (args) {\n            args.eventSource.svgOverlay().resize();\n        });\n\n    }\n\n    /**\n     * Adds all images in this.images to the viewer.\n     * Images are positioned in a horizontal row next to each other.\n     */\n    private openImages(): void {\n        // imageXOffset controls the x coordinate of the left side of each image in the OpenSeadragon viewport coordinate system.\n        // The first image has its left side at x = 0, and all images are scaled to have a width of 1 in viewport coordinates.\n        // see also: https://openseadragon.github.io/examples/viewport-coordinates/\n\n        const fileValues: ReadStillImageFileValue[] = this.images.map(\n            (img) => {\n                return img.stillImageFileValue;\n            });\n\n        // display only the defined range of this.images\n        const tileSources: Object[] = StillImageComponent.prepareTileSourcesFromFileValues(fileValues);\n\n        this.removeOverlays();\n        this.viewer.open(tileSources);\n    }\n\n    /**\n     * Removes SVG overlays from the DOM.\n     */\n    private removeOverlays() {\n\n        for (const reg in this.regions) {\n            if (this.regions.hasOwnProperty(reg)) {\n                for (const pol of this.regions[reg]) {\n                    if (pol instanceof SVGPolygonElement) {\n                        pol.remove();\n                    }\n                }\n            }\n        }\n\n        this.regions = {};\n\n        // TODO: make this work by using osdviewer's addOverlay method\n        this.viewer.clearOverlays();\n    }\n\n    /**\n     * Adds a ROI-overlay to the viewer for every region of every image in this.images\n     */\n    private renderRegions(): void {\n\n        this.removeOverlays();\n\n        let imageXOffset = 0; // see documentation in this.openImages() for the usage of imageXOffset\n\n        for (const image of this.images) {\n            const aspectRatio = (image.stillImageFileValue.dimY / image.stillImageFileValue.dimX);\n\n            // collect all geometries belonging to this page\n            const geometries: GeometryForRegion[] = [];\n            image.regions.map((reg) => {\n\n                this.regions[reg.regionResource.id] = [];\n                const geoms = reg.getGeometries();\n\n                geoms.map((geom) => {\n                    const geomForReg = new GeometryForRegion(geom.geometry, reg.regionResource);\n\n                    geometries.push(geomForReg);\n                });\n            });\n\n            // sort all geometries belonging to this page\n            geometries.sort((geom1, geom2) => {\n\n                if (geom1.geometry.type === 'rectangle' && geom2.geometry.type === 'rectangle') {\n\n                    const surf1 = StillImageComponent.surfaceOfRectangularRegion(geom1.geometry);\n                    const surf2 = StillImageComponent.surfaceOfRectangularRegion(geom2.geometry);\n\n                    // if reg1 is smaller than reg2, return 1\n                    // reg1 then comes after reg2 and thus is rendered later\n                    if (surf1 < surf2) {\n                        return 1;\n                    } else {\n                        return -1;\n                    }\n\n                } else {\n                    return 0;\n                }\n\n\n            });\n\n            // render all geometries for this page\n            for (const geom of geometries) {\n\n                const geometry = geom.geometry;\n                this.createSVGOverlay(geom.region.id, geometry, aspectRatio, imageXOffset, geom.region.label);\n\n            }\n\n            imageXOffset++;\n        }\n\n    }\n\n    /**\n     * Creates and adds a ROI-overlay to the viewer\n     * @param regionIri the Iri of the region.\n     * @param geometry - the geometry describing the ROI\n     * @param aspectRatio -  the aspectRatio (h/w) of the image on which the geometry should be placed\n     * @param xOffset -  the x-offset in Openseadragon viewport coordinates of the image on which the geometry should be placed\n     * @param toolTip -  the tooltip which should be displayed on mousehover of the svg element\n     */\n    private createSVGOverlay(regionIri: string, geometry: RegionGeometry, aspectRatio: number, xOffset: number, toolTip: string): void {\n        const lineColor = geometry.lineColor;\n        const lineWidth = geometry.lineWidth;\n\n        let svgElement;\n        switch (geometry.type) {\n            case 'rectangle':\n                svgElement = document.createElementNS('http://www.w3.org/2000/svg', 'polygon');  // yes, we render rectangles as svg polygon elements\n                this.addSVGAttributesRectangle(svgElement, geometry, aspectRatio, xOffset);\n                break;\n            case 'polygon':\n                svgElement = document.createElementNS('http://www.w3.org/2000/svg', 'polygon');\n                this.addSVGAttributesPolygon(svgElement, geometry, aspectRatio, xOffset);\n                break;\n            case 'circle':\n                svgElement = document.createElementNS('http://www.w3.org/2000/svg', 'circle');\n                this.addSVGAttributesCircle(svgElement, geometry, aspectRatio, xOffset);\n                break;\n            default:\n                console.log('ERROR: StillImageOSDViewerComponent.createSVGOverlay: unknown geometryType: ' + geometry.type);\n                return;\n        }\n        svgElement.id = 'roi-svgoverlay-' + Math.random() * 10000;\n        svgElement.setAttribute('class', 'roi-svgoverlay');\n        svgElement.setAttribute('style', 'stroke: ' + lineColor + '; stroke-width: ' + lineWidth + 'px;');\n\n        // event when a region is clicked (output)\n        svgElement.addEventListener('click', () => {\n            this.regionHovered.emit(regionIri);\n        }, false);\n\n        const svgTitle = document.createElementNS('http://www.w3.org/2000/svg', 'title');\n        svgTitle.textContent = toolTip;\n\n        const svgGroup = document.createElementNS('http://www.w3.org/2000/svg', 'g');\n        svgGroup.appendChild(svgTitle);\n        svgGroup.appendChild(svgElement);\n\n        const overlay = this.viewer.svgOverlay();\n        overlay.node().appendChild(svgGroup); // TODO: use method osdviewer's method addOverlay\n\n        this.regions[regionIri].push(svgElement);\n    }\n\n    /**\n     * Adds the necessary attributes to create a ROI-overlay of type 'rectangle' to a SVGElement\n     * @param svgElement - an SVGElement (should have type 'polygon' (sic))\n     * @param geometry - the geometry describing the rectangle\n     * @param aspectRatio - the aspectRatio (h/w) of the image on which the circle should be placed\n     * @param xOffset - the x-offset in Openseadragon viewport coordinates of the image on which the circle should be placed\n     */\n    private addSVGAttributesRectangle(svgElement: SVGElement, geometry: RegionGeometry, aspectRatio: number, xOffset: number): void {\n        const pointA = geometry.points[0];\n        const pointB = geometry.points[1];\n\n        // geometry.points contains two diagonally opposed corners of the rectangle, but the order of the corners is arbitrary.\n        // We therefore construct the upperleft (UL), lowerright (LR), upperright (UR) and lowerleft (LL) positions of the corners with min and max operations.\n        const positionUL = new Point2D(Math.min(pointA.x, pointB.x), Math.min(pointA.y, pointB.y));\n        const positionLR = new Point2D(Math.max(pointA.x, pointB.x), Math.max(pointA.y, pointB.y));\n        const positionUR = new Point2D(Math.max(pointA.x, pointB.x), Math.min(pointA.y, pointB.y));\n        const positionLL = new Point2D(Math.min(pointA.x, pointB.x), Math.max(pointA.y, pointB.y));\n\n        const points = [positionUL, positionUR, positionLR, positionLL];\n        const viewCoordPoints = this.image2ViewPortCoords(points, aspectRatio, xOffset);\n        const pointsString = this.createSVGPolygonPointsAttribute(viewCoordPoints);\n        svgElement.setAttribute('points', pointsString);\n    }\n\n    /**\n     * Adds the necessary attributes to create a ROI-overlay of type 'polygon' to a SVGElement\n     * @param svgElement - an SVGElement (should have type 'polygon')\n     * @param geometry - the geometry describing the polygon\n     * @param aspectRatio - the aspectRatio (h/w) of the image on which the circle should be placed\n     * @param xOffset - the x-offset in Openseadragon viewport coordinates of the image on which the circle should be placed\n     */\n    private addSVGAttributesPolygon(svgElement: SVGElement, geometry: RegionGeometry, aspectRatio: number, xOffset: number): void {\n        const viewCoordPoints = this.image2ViewPortCoords(geometry.points, aspectRatio, xOffset);\n        const pointsString = this.createSVGPolygonPointsAttribute(viewCoordPoints);\n        svgElement.setAttribute('points', pointsString);\n    }\n\n    /**\n     * Adds the necessary attributes to create a ROI-overlay of type 'circle' to a SVGElement\n     * @param svgElement - an SVGElement (should have type 'circle')\n     * @param geometry - the geometry describing the circle\n     * @param aspectRatio - the aspectRatio (h/w) of the image on which the circle should be placed\n     * @param xOffset - the x-offset in Openseadragon viewport coordinates of the image on which the circle should be placed\n     */\n    private addSVGAttributesCircle(svgElement: SVGElement, geometry: RegionGeometry, aspectRatio: number, xOffset: number): void {\n        const viewCoordPoints = this.image2ViewPortCoords(geometry.points, aspectRatio, xOffset);\n        const cx = String(viewCoordPoints[0].x);\n        const cy = String(viewCoordPoints[0].y);\n        // geometry.radius contains not the radius itself, but the coordinates of a (arbitrary) point on the circle.\n        // We therefore have to calculate the length of the vector geometry.radius to get the actual radius. -> sqrt(x^2 + y^2)\n        // Since geometry.radius has its y coordinate scaled to the height of the image,\n        // we need to multiply it with the aspectRatio to get to the scale used by Openseadragon, analoguous to this.image2ViewPortCoords()\n        const radius = String(Math.sqrt(geometry.radius.x * geometry.radius.x + aspectRatio * aspectRatio * geometry.radius.y * geometry.radius.y));\n        svgElement.setAttribute('cx', cx);\n        svgElement.setAttribute('cy', cy);\n        svgElement.setAttribute('r', radius);\n    }\n\n    /**\n     * Maps a Point2D[] with coordinates relative to an image to a new Point2D[] with coordinates in the viewport coordinate system of Openseadragon\n     * see also: https://openseadragon.github.io/examples/viewport-coordinates/\n     * @param points - an array of points in coordinate system relative to an image\n     * @param aspectRatio - the aspectRatio (h/w) of the image\n     * @param xOffset - the x-offset in viewport coordinates of the image\n     * @returns - a new Point2D[] with coordinates in the viewport coordinate system of Openseadragon\n     */\n    private image2ViewPortCoords(points: Point2D[], aspectRatio: number, xOffset: number): Point2D[] {\n        return points.map((point) => {\n            return new Point2D(point.x + xOffset, point.y * aspectRatio);\n        });\n    }\n\n    /**\n     * Returns a string in the format expected by the 'points' attribute of a SVGElement\n     * @param points - an array of points to be serialized to a string\n     * @returns - the points serialized to a string in the format expected by the 'points' attribute of a SVGElement\n     */\n    private createSVGPolygonPointsAttribute(points: Point2D[]): string {\n        let pointsString = '';\n        for (const i in points) {\n            if (points.hasOwnProperty(i)) {\n                pointsString += points[i].x;\n                pointsString += ',';\n                pointsString += points[i].y;\n                pointsString += ' ';\n            }\n        }\n        return pointsString;\n    }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'kui-text',\n  templateUrl: './text.component.html',\n  styleUrls: ['./text.component.scss']\n})\nexport class TextComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { Component, Input } from '@angular/core';\nimport { ReadBooleanValue } from '@knora/core';\n\n@Component({\n  selector: 'kui-boolean-value',\n  templateUrl: './boolean-value.component.html',\n  styleUrls: ['./boolean-value.component.scss']\n})\nexport class BooleanValueComponent {\n\n  @Input()\n  set valueObject(value: ReadBooleanValue) {\n      this._booleanValueObj = value;\n  }\n\n  get valueObject() {\n      return this._booleanValueObj;\n  }\n\n  private _booleanValueObj: ReadBooleanValue;\n\n  constructor() { }\n\n}\n","import { Component, Input } from '@angular/core';\nimport { ReadColorValue } from '@knora/core';\n\n@Component({\n    selector: 'kui-color-value',\n    templateUrl: './color-value.component.html',\n    styleUrls: ['./color-value.component.scss']\n})\nexport class ColorValueComponent {\n\n    @Input()\n    set valueObject(value: ReadColorValue) {\n        this._colorValueObj = value;\n    }\n\n    get valueObject() {\n        return this._colorValueObj;\n    }\n\n    private _colorValueObj: ReadColorValue;\n\n    constructor() {\n    }\n\n}\n","import { Component, Input } from '@angular/core';\nimport { DateRangeSalsah, DateSalsah, Precision, ReadDateValue } from '@knora/core';\n\n@Component({\n  selector: 'kui-date-value',\n  templateUrl: './date-value.component.html',\n  styleUrls: ['./date-value.component.scss']\n})\nexport class DateValueComponent {\n\n  @Input()\n  set calendar(value: boolean) {\n    this._calendar = value;\n  }\n\n  get calendar() {\n    return this._calendar;\n  }\n\n  @Input()\n  set era(value: boolean) {\n    this._era = value;\n  }\n\n  get era() {\n    return this._era;\n  }\n\n  @Input()\n  set valueObject(value: ReadDateValue) {\n    this._dateValueObj = value;\n\n    const dateOrRange: DateSalsah | DateRangeSalsah = this.valueObject.getDateSalsah();\n    if (dateOrRange instanceof DateRangeSalsah) {\n      // period (start and end dates)\n      this.period = true;\n      this.dates = [this.getJSDate(dateOrRange.start), this.getJSDate(dateOrRange.end)];\n    } else {\n      // single date\n      this.period = false;\n      this.dates = [this.getJSDate(dateOrRange)];\n    }\n\n  }\n\n  get valueObject() {\n    return this._dateValueObj;\n  }\n\n  dates: DateFormatter[];\n  period: boolean;\n  private _calendar: boolean;\n  private _era: boolean;\n  private _dateValueObj: ReadDateValue;\n\n  constructor() { }\n\n  /**\n   * Converts a `DateSalsah` to a JS Date, providing necessary formatting information.\n   * JULIAN and GREGORIAN calendar are the only available for the moment.\n   *\n   * @param date the date to be converted.\n   * @return DateFormatter.\n   */\n  getJSDate(date: DateSalsah): DateFormatter {\n\n    if (date.precision === Precision.yearPrecision) {\n      return {\n        format: 'yyyy',\n        date: new Date(date.year.toString()),\n        era: date.era,\n        calendar: date.calendar\n      };\n    } else if (date.precision === Precision.monthPrecision) {\n      return {\n        format: 'MMMM ' + 'yyyy',\n        date: new Date(date.year, date.month - 1, 1), // 0 base month\n        era: date.era,\n        calendar: date.calendar\n      };\n    } else if (date.precision === Precision.dayPrecision) {\n      return {\n        format: 'longDate',\n        date: new Date(date.year, date.month - 1, date.day),  // 0 base month\n        era: date.era,\n        calendar: date.calendar\n      };\n    } else {\n      console.error('Error: incorrect precision for date');\n    }\n\n  }\n\n}\n\n/**\n * Date structure for the template\n */\nexport interface DateFormatter {\n  format: string;\n  date: Date;\n  era: string;\n  calendar: string;\n}\n","import { Component, Input } from '@angular/core';\nimport { ReadDecimalValue } from '@knora/core';\n\n@Component({\n  selector: 'kui-decimal-value',\n  templateUrl: './decimal-value.component.html',\n  styleUrls: ['./decimal-value.component.scss']\n})\nexport class DecimalValueComponent {\n\n  @Input()\n  set valueObject(value: ReadDecimalValue) {\n    this._decimalValueObj = value;\n  }\n\n  get valueObject() {\n    return this._decimalValueObj;\n  }\n\n  private _decimalValueObj: ReadDecimalValue;\n\n  constructor() { }\n\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'kui-external-res-value',\n  templateUrl: './external-res-value.component.html',\n  styleUrls: ['./external-res-value.component.scss']\n})\nexport class ExternalResValueComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { Component, Input } from '@angular/core';\nimport { ReadGeomValue } from '@knora/core';\n\n@Component({\n  selector: 'kui-geometry-value',\n  templateUrl: './geometry-value.component.html',\n  styleUrls: ['./geometry-value.component.scss']\n})\nexport class GeometryValueComponent {\n\n  @Input()\n  set valueObject(value: ReadGeomValue) {\n    this._geomValueObj = value;\n  }\n\n  get valueObject() {\n    return this._geomValueObj;\n  }\n\n  private _geomValueObj: ReadGeomValue;\n\n  constructor() { }\n\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'kui-geoname-value',\n  templateUrl: './geoname-value.component.html',\n  styleUrls: ['./geoname-value.component.scss']\n})\nexport class GeonameValueComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { Component, Input } from '@angular/core';\nimport { ReadIntegerValue } from '@knora/core';\n\n@Component({\n    selector: 'kui-integer-value',\n    templateUrl: './integer-value.component.html',\n    styleUrls: ['./integer-value.component.scss']\n})\nexport class IntegerValueComponent {\n\n    @Input()\n    set valueObject(value: ReadIntegerValue) {\n        this._integerValueObj = value;\n    }\n\n    get valueObject() {\n        return this._integerValueObj;\n    }\n\n    private _integerValueObj: ReadIntegerValue;\n\n    constructor() {\n    }\n\n}\n","import { Component, Input } from '@angular/core';\nimport { ReadIntervalValue } from '@knora/core';\n\n@Component({\n  selector: 'kui-interval-value',\n  templateUrl: './interval-value.component.html',\n  styleUrls: ['./interval-value.component.scss']\n})\nexport class IntervalValueComponent {\n\n  @Input()\n  set valueObject(value: ReadIntervalValue) {\n    this._intervalValueObj = value;\n  }\n\n  get valueObject() {\n    return this._intervalValueObj;\n  }\n\n  private _intervalValueObj: ReadIntervalValue;\n\n  constructor() { }\n\n}\n","import { Component, EventEmitter, Inject, Input, Output } from '@angular/core';\nimport { OntologyInformation, ReadLinkValue } from '@knora/core';\n\n@Component({\n    selector: 'kui-link-value',\n    templateUrl: './link-value.component.html',\n    styleUrls: ['./link-value.component.scss']\n})\nexport class LinkValueComponent {\n\n    @Input()\n    set ontologyInfo(value: OntologyInformation) {\n        this._ontoInfo = value;\n    }\n\n    get ontologyInfo() {\n        return this._ontoInfo;\n    }\n\n    @Input()\n    set valueObject(value: ReadLinkValue) {\n        this._linkValueObj = value;\n\n        if (this.valueObject.referredResource !== undefined) {\n            this.referredResource = this.valueObject.referredResource.label;\n        } else {\n            this.referredResource = this.valueObject.referredResourceIri;\n        }\n    }\n\n    get valueObject() {\n        return this._linkValueObj;\n    }\n\n    @Output()\n    referredResourceClicked: EventEmitter<ReadLinkValue> = new EventEmitter();\n\n    private _linkValueObj: ReadLinkValue;\n    private _ontoInfo: OntologyInformation;\n    referredResource: string;\n\n    constructor() { }\n\n    refResClicked() {\n        this.referredResourceClicked.emit(this._linkValueObj);\n    }\n}\n","import { Component, Input, OnChanges, OnInit } from '@angular/core';\nimport { ReadListValue } from '@knora/core';\nimport { ListCacheService, ListNodeV2 } from '@knora/core';\nimport { Observable } from 'rxjs';\n\n@Component({\n    selector: 'kui-list-value',\n    templateUrl: './list-value.component.html',\n    styleUrls: ['./list-value.component.scss']\n})\nexport class ListValueComponent implements OnChanges {\n\n    @Input()\n    set valueObject(value: ReadListValue) {\n        this._listValueObj = value;\n    }\n\n    get valueObject() {\n        return this._listValueObj;\n    }\n\n    private _listValueObj: ReadListValue;\n\n    node: Observable<ListNodeV2>;\n\n    constructor(private _listCacheService: ListCacheService) {\n    }\n\n    ngOnChanges() {\n        // given the node's Iri, ask the list cache service\n        this.node = this._listCacheService.getListNode(this._listValueObj.listNodeIri);\n\n    }\n\n}\n","import { Component, ElementRef, EventEmitter, HostListener, Input, Output } from '@angular/core';\nimport { KnoraConstants, OntologyInformation, ReadTextValueAsHtml } from '@knora/core';\n\n@Component({\n    selector: 'kui-text-value-as-html',\n    templateUrl: './text-value-as-html.component.html',\n    styleUrls: ['./text-value-as-html.component.scss']\n})\nexport class TextValueAsHtmlComponent {\n\n    @Output()\n    referredResourceClicked: EventEmitter<string> = new EventEmitter();\n\n    @Input()\n    set ontologyInfo(value: OntologyInformation) {\n        this._ontoInfo = value;\n    }\n\n    get ontologyInfo() {\n        return this._ontoInfo;\n    }\n\n    @Input()\n    set bindEvents(value: Boolean) {\n        this._bindEvents = value;\n    }\n\n    get bindEvents() {\n        return this._bindEvents;\n    }\n\n    @Input()\n    set valueObject(value: ReadTextValueAsHtml) {\n        this._htmlValueObj = value;\n\n        if (this.el.nativeElement.innerHTML) {\n            this.el.nativeElement.innerHTML = this.valueObject.html;\n        }\n    }\n\n    get valueObject() {\n        return this._htmlValueObj;\n    }\n\n    html: string;\n    private _htmlValueObj: ReadTextValueAsHtml;\n    private _ontoInfo: OntologyInformation;\n    private _bindEvents: Boolean;\n\n    constructor(private el: ElementRef) {\n    }\n\n    refResClicked(refResourceIri: string) {\n        this.referredResourceClicked.emit(refResourceIri);\n    }\n\n    /**\n     * Binds a click event to standoff links that shows the referred resource.\n     *\n     * @param targetElement\n     */\n    @HostListener('click', ['$event.target'])\n    onClick(targetElement) {\n        if (this._bindEvents && targetElement.nodeName.toLowerCase() === 'a'\n            && targetElement.className.toLowerCase().indexOf(KnoraConstants.SalsahLink) >= 0\n            && targetElement.href !== undefined) {\n            this.refResClicked(targetElement.href);\n            // prevent propagation\n            return false;\n        } else if (this.bindEvents && targetElement.nodeName.toLowerCase() === 'a' && targetElement.href !== undefined) {\n            // open link in a new window\n            window.open(targetElement.href, '_blank');\n            // prevent propagation\n            return false;\n        } else {\n            // prevent propagation\n            return false;\n        }\n    }\n\n}\n","import { Component, Input } from '@angular/core';\nimport { ReadTextValueAsString } from '@knora/core';\n\n@Component({\n    selector: 'kui-text-value-as-string',\n    templateUrl: './text-value-as-string.component.html',\n    styleUrls: ['./text-value-as-string.component.scss']\n})\nexport class TextValueAsStringComponent {\n\n    @Input()\n    set valueObject(value: ReadTextValueAsString) {\n        this._textStringValueObj = value;\n    }\n\n    get valueObject() {\n        return this._textStringValueObj;\n    }\n\n    private _textStringValueObj: ReadTextValueAsString;\n\n    constructor() {\n    }\n\n}\n","import { Component, Input } from '@angular/core';\nimport { ReadTextValueAsXml } from '@knora/core';\n\n@Component({\n    selector: 'kui-text-value-as-xml',\n    templateUrl: './text-value-as-xml.component.html',\n    styleUrls: ['./text-value-as-xml.component.scss']\n})\nexport class TextValueAsXmlComponent {\n\n    @Input()\n    set valueObject(value: ReadTextValueAsXml) {\n        this._xmlValueObj = value;\n    }\n\n    get valueObject() {\n        return this._xmlValueObj;\n    }\n\n    private _xmlValueObj: ReadTextValueAsXml;\n\n    constructor() {\n    }\n\n}\n","import { Component, Input } from '@angular/core';\nimport { ReadTextFileValue } from '@knora/core';\n\n@Component({\n  selector: 'kui-textfile-value',\n  templateUrl: './textfile-value.component.html',\n  styleUrls: ['./textfile-value.component.scss']\n})\nexport class TextfileValueComponent {\n\n  @Input()\n  set valueObject(value: ReadTextFileValue) {\n    this._textfileValueObj = value;\n  }\n\n  get valueObject() {\n    return this._textfileValueObj;\n  }\n\n  private _textfileValueObj: ReadTextFileValue;\n\n  constructor() { }\n\n}\n","import { Component, Input, OnChanges } from '@angular/core';\nimport { ReadUriValue } from '@knora/core';\nimport { isUndefined } from 'util';\n\n@Component({\n  selector: '   kui-uri-value',\n  templateUrl: './uri-value.component.html',\n  styleUrls: ['./uri-value.component.scss']\n})\nexport class UriValueComponent implements OnChanges {\n\n  @Input()\n  set valueObject(value: ReadUriValue) {\n    this.__uriValueObj = value;\n\n  }\n  get valueObject() {\n    return this.__uriValueObj;\n  }\n  @Input() label?: string;\n  private __uriValueObj: ReadUriValue;\n  public displayString: string;\n  constructor() { }\n\n  ngOnChanges() {\n      if (this.label === undefined) {\n          this.displayString = this.__uriValueObj.uri;\n      } else {\n          this.displayString = this.label;\n      }\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'kui-compare-view',\n  templateUrl: './compare-view.component.html',\n  styleUrls: ['./compare-view.component.scss']\n})\nexport class CompareViewComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'kui-graph-view',\n  templateUrl: './graph-view.component.html',\n  styleUrls: ['./graph-view.component.scss']\n})\nexport class GraphViewComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { Component, Input, OnInit } from '@angular/core';\nimport { KnoraConstants, OntologyInformation } from '@knora/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'kui-grid-view',\n  templateUrl: './grid-view.component.html',\n  styleUrls: ['./grid-view.component.scss']\n})\nexport class GridViewComponent implements OnInit {\n\n  /**\n   * @param  {any} result Search result received from SearchResultsComponent\n   */\n  @Input() result: any;\n\n  /**\n   * @param  {OntologyInformation} ontologyInfo Ontology information received from SearchResultsComponent\n   */\n  @Input() ontologyInfo: OntologyInformation;\n\n  // @Input() isLoading: boolean;\n\n  KnoraConstants = KnoraConstants;\n\n  constructor(\n    private _router: Router\n  ) { }\n\n  ngOnInit() {\n  }\n\n  /**\n   * Navigate to the resource viewer when clicking on one resource of the search result grid\n   * @param {string} id \n   */\n  openResource(id: string) {\n    const url: string = '/resource/' + encodeURIComponent(id);\n    this._router.navigate([url]);\n  }\n}\n","import { Component, Input, OnDestroy, OnInit } from '@angular/core';\nimport { KnoraConstants, OntologyInformation } from '@knora/core';\nimport { Router } from '@angular/router';\n\n@Component({\n    selector: 'kui-list-view',\n    templateUrl: './list-view.component.html',\n    styleUrls: ['./list-view.component.scss']\n})\nexport class ListViewComponent {\n\n    /**\n     * @param  {any} result Search result received from SearchResultsComponent\n     */\n    @Input() result: any;\n\n    /**\n     * @param  {OntologyInformation} ontologyInfo Ontology information received from SearchResultsComponent\n     */\n    @Input() ontologyInfo: OntologyInformation;\n\n    // @Input() isLoading: boolean;\n\n    KnoraConstants = KnoraConstants;\n\n    constructor(\n        private _router: Router\n    ) { }\n\n    /**\n     * Navigate to the resource viewer when clicking on one resource of the search result list\n     * @param {string} id\n     */\n    openResource(id: string) {\n        const url: string = '/resource/' + encodeURIComponent(id);\n        this._router.navigate([url]);\n    }\n\n}\n","import { Component } from '@angular/core';\n\n/**\n * Deprecated!?\n */\n@Component({\n    selector: 'kui-properties-view',\n    templateUrl: './properties-view.component.html',\n    styleUrls: ['./properties-view.component.scss']\n})\nexport class PropertiesViewComponent {\n\n    constructor() { }\n\n}\n","import { Component, Input, OnInit, OnChanges, ChangeDetectionStrategy } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport {\n    ApiServiceError,\n    GuiOrder,\n    ImageRegion,\n    IncomingService,\n    KnoraConstants,\n    OntologyInformation,\n    ReadResource,\n    ReadResourcesSequence,\n    ReadStillImageFileValue,\n    ResourceService,\n    StillImageRepresentation\n} from '@knora/core';\n\n// import { ImageRegion, StillImageRepresentation } from '../../resource';\n\ndeclare let require: any;\nconst jsonld = require('jsonld');\n\n@Component({\n    selector: 'kui-resource-view',\n    templateUrl: './resource-view.component.html',\n    styleUrls: ['./resource-view.component.scss']\n})\nexport class ResourceViewComponent implements OnInit, OnChanges {\n\n    /**\n     * @param {string} [iri] Resource iri\n     */\n    @Input() iri?: string;\n\n    sequence: ReadResourcesSequence;\n\n    ontologyInfo: OntologyInformation;\n    guiOrder: GuiOrder[];\n    loading: boolean;\n    error: any;\n    KnoraConstants = KnoraConstants;\n\n    // does the resource has a file representation (media file)?\n    fileRepresentation: boolean;\n\n    constructor(protected _route: ActivatedRoute,\n        protected _router: Router,\n        protected _resourceService: ResourceService,\n        protected _incomingService: IncomingService\n    ) {\n\n    }\n\n    ngOnInit() {\n        this.getResource(this.iri);\n    }\n\n    ngOnChanges() {\n        this.getResource(this.iri);\n    }\n\n    /**\n     * Get a read resource sequence with ontology information and incoming resources.\n     *\n     * @param {string} id Resource iri\n     */\n    getResource(id: string) {\n        this.loading = true;\n        this._resourceService.getReadResource(decodeURIComponent(id)).subscribe(\n            (result: ReadResourcesSequence) => {\n                this.sequence = result;\n\n                this.ontologyInfo = result.ontologyInformation;\n\n                const resType = this.sequence.resources[0].type;\n\n                this.guiOrder = result.ontologyInformation.getResourceClasses()[resType].guiOrder;\n\n                // collect images and regions\n                this.collectImagesAndRegionsForResource(this.sequence.resources[0]);\n\n                // get incoming resources\n                this.requestIncomingResources();\n\n\n                // this.fileRepresentation = this.sequence.resources[0].properties.indexOf(KnoraConstants.hasStillImageFileValue) > -1;\n                // console.log(this.fileRepresentation);\n\n                // wait until the resource is ready\n                setTimeout(() => {\n                    // console.log(this.sequence);\n                    this.loading = false;\n                }, 1000);\n            },\n            (error: ApiServiceError) => {\n                console.error(error);\n            }\n        );\n    }\n\n\n    /**\n     * Collect all file representations (stillImage, movingImage, audio etc.) and annotations (region, sequence etc.)\n     *\n     * @param resource\n     */\n    collectFileRepresentationsAndFileAnnotations(resource: ReadResource): void {\n        const fileRepresentations: any[] = [];\n    }\n\n\n    collectImagesAndRegionsForResource(resource: ReadResource): void {\n\n        const imgRepresentations: StillImageRepresentation[] = [];\n\n        if (resource.properties[KnoraConstants.hasStillImageFileValue] !== undefined) {\n            // TODO: check if resources is a StillImageRepresentation using the ontology responder (support for subclass relations required)\n            // resource has StillImageFileValues that are directly attached to it (properties)\n\n            const fileValues: ReadStillImageFileValue[] = resource.properties[KnoraConstants.hasStillImageFileValue] as ReadStillImageFileValue[];\n            const imagesToDisplay: ReadStillImageFileValue[] = fileValues.filter((image) => {\n                return !image.isPreview;\n            });\n\n\n            for (const img of imagesToDisplay) {\n\n                const regions: ImageRegion[] = [];\n                for (const incomingRegion of resource.incomingRegions) {\n\n                    const region = new ImageRegion(incomingRegion);\n\n                    regions.push(region);\n\n                }\n\n                const stillImage = new StillImageRepresentation(img, regions);\n                imgRepresentations.push(stillImage);\n\n            }\n\n\n        } else if (resource.incomingStillImageRepresentations.length > 0) {\n            // there are StillImageRepresentations pointing to this resource (incoming)\n\n            const readStillImageFileValues: ReadStillImageFileValue[] = resource.incomingStillImageRepresentations.map(\n                (stillImageRes: ReadResource) => {\n                    const fileValues = stillImageRes.properties[KnoraConstants.hasStillImageFileValue] as ReadStillImageFileValue[];\n                    // TODO: check if resources is a StillImageRepresentation using the ontology responder (support for subclass relations required)\n                    const imagesToDisplay = fileValues.filter((image) => {\n                        return !image.isPreview;\n\n                    });\n\n                    return imagesToDisplay;\n                }\n            ).reduce(function (prev, curr) {\n                // transform ReadStillImageFileValue[][] to ReadStillImageFileValue[]\n                return prev.concat(curr);\n            });\n\n            for (const img of readStillImageFileValues) {\n\n                const regions: ImageRegion[] = [];\n                for (const incomingRegion of resource.incomingRegions) {\n\n                    const region = new ImageRegion(incomingRegion);\n                    regions.push(region);\n\n                }\n\n                const stillImage = new StillImageRepresentation(img, regions);\n                imgRepresentations.push(stillImage);\n            }\n\n        }\n\n        resource.stillImageRepresentationsToDisplay = imgRepresentations;\n\n    }\n\n    /**\n     * Get incoming resources: incoming links, incoming regions, incoming still image representations.\n     */\n    requestIncomingResources(): void {\n\n        // make sure that this.sequence has been initialized correctly\n        if (this.sequence === undefined) {\n            return;\n        }\n\n        // request incoming regions\n        if (this.sequence.resources[0].properties[KnoraConstants.hasStillImageFileValue]) {\n            // TODO: check if resources is a StillImageRepresentation using the ontology responder (support for subclass relations required)\n            // the resource is a StillImageRepresentation, check if there are regions pointing to it\n\n            this.getIncomingRegions(0);\n\n        } else {\n            // this resource is not a StillImageRepresentation\n            // check if there are StillImageRepresentations pointing to this resource\n\n            // this gets the first page of incoming StillImageRepresentations\n            // more pages may be requested by [[this.viewer]].\n            // TODO: for now, we begin with offset 0. This may have to be changed later (beginning somewhere in a collection)\n            // this.getIncomingStillImageRepresentations(0);\n        }\n\n        // check for incoming links for the current resource\n        this.getIncomingLinks(0);\n\n\n    }\n\n    /**\n     * Get incoming regions for the resource.\n     *\n     * @param offset\n     * @param callback\n     */\n    getIncomingRegions(offset: number, callback?: (numberOfResources: number) => void): void {\n        this._incomingService.getIncomingRegions(this.sequence.resources[0].id, offset).subscribe(\n            (regions: ReadResourcesSequence) => {\n                // update ontology information\n                this.ontologyInfo.updateOntologyInformation(regions.ontologyInformation);\n\n                // Append elements of regions.resources to resource.incoming\n                Array.prototype.push.apply(this.sequence.resources[0].incomingRegions, regions.resources);\n\n                // prepare regions to be displayed\n                this.collectImagesAndRegionsForResource(this.sequence.resources[0]);\n\n                // TODO: implement osdViewer\n                /* if (this.osdViewer) {\n                  this.osdViewer.updateRegions();\n                } */\n\n                // if callback is given, execute function with the amount of new images as the parameter\n                if (callback !== undefined) {\n                    callback(regions.resources.length);\n                }\n            },\n            (error: any) => {\n                console.error(error);\n                this.loading = false;\n            }\n        );\n    }\n\n    /**\n     * Get incoming links for a resource.\n     *\n     * @param offset\n     * @param callback\n     */\n    getIncomingLinks(offset: number, callback?: (numberOfResources: number) => void): void {\n\n        this.loading = true;\n\n        this._incomingService.getIncomingLinksForResource(this.sequence.resources[0].id, offset).subscribe(\n            (incomingResources: ReadResourcesSequence) => {\n                // update ontology information\n                this.ontologyInfo.updateOntologyInformation(incomingResources.ontologyInformation);\n\n                // Append elements incomingResources to this.sequence.incomingLinks\n                Array.prototype.push.apply(this.sequence.resources[0].incomingLinks, incomingResources.resources);\n\n                // if callback is given, execute function with the amount of incoming resources as the parameter\n                if (callback !== undefined) {\n                    callback(incomingResources.resources.length);\n                }\n\n                this.loading = false;\n            },\n            (error: any) => {\n                console.error(error);\n                this.loading = false;\n            }\n        );\n    }\n\n    /**\n     * Navigate to the incoming resource view.\n     *\n     * @param {string} id Incoming resource iri\n     */\n    openLink(id: string) {\n\n        this.loading = true;\n        this._router.navigate(['/resource/' + encodeURIComponent(id)]);\n\n    }\n\n}\n","import { Component, Input, OnInit } from '@angular/core';\nimport { KnoraConstants } from '@knora/core';\n\n@Component({\n  selector: 'kui-table-view',\n  templateUrl: './table-view.component.html',\n  styleUrls: ['./table-view.component.scss']\n})\nexport class TableViewComponent implements OnInit {\n\n  @Input() result;\n  @Input() ontologyInfo;\n  @Input() isLoading;\n\n  KnoraConstants = KnoraConstants;\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { Component, OnInit, Input } from '@angular/core';\nimport { ActivatedRoute, Params, Router } from '@angular/router';\nimport { ApiServiceError, CountQueryResult, ExtendedSearchParams, KnoraConstants, OntologyInformation, ReadResource, ReadResourcesSequence, SearchParamsService, SearchService } from '@knora/core';\nimport { Subscription } from 'rxjs';\n\n/**\n * The search-results gets the search mode and parameters from routes or inputs,\n * and returns the corresponding resources that are displayed in a list or a grid.\n * The results can be filtered by project.\n */\n@Component({\n    selector: 'kui-search-results',\n    templateUrl: './search-results.component.html',\n    styleUrls: ['./search-results.component.scss']\n})\nexport class SearchResultsComponent implements OnInit {\n    /**\n     *\n     * @param  {boolean} [complexView] If true it shows 2 ways to display the search results: list or grid.\n     *\n     */\n    @Input() complexView?: boolean = false;\n\n    /**\n     *\n     * @param  {string} [searchQuery] Search parameters. It can be a gravsearch query (extended mode) or string (fulltext mode).\n     */\n    @Input() searchQuery?: string;\n\n    /**\n     *\n     * @param  {string} [searchMode] Search mode: Extended or fulltext.\n     */\n    @Input() searchMode?: string;\n\n    /**\n     *\n     * @param  {string} [projectIri] Project Iri. To filter the results by project.\n     */\n    @Input() projectIri?: string;\n\n    KnoraConstants = KnoraConstants;\n    offset: number = 0;\n    maxOffset: number = 0;\n    gravSearchQuery: string;\n    gravsearchGenerator: ExtendedSearchParams;\n    result: ReadResource[] = [];\n    ontologyInfo: OntologyInformation;\n    numberOfAllResults: number;\n    rerender: boolean = false;\n    badRequest: boolean = false;\n    loading = true;\n    errorMessage: ApiServiceError = new ApiServiceError();\n    pagingLimit: number = 25;\n\n    constructor (\n        private _route: ActivatedRoute,\n        private _searchService: SearchService,\n        private _searchParamsService: SearchParamsService,\n        private _router: Router\n    ) {\n\n    }\n\n    ngOnInit() {\n        this._route.paramMap.subscribe(\n            (params: Params) => {\n                // get the search mode\n                if (!this.searchMode) {\n                    this.searchMode = params.get('mode');\n                }\n\n                // get the project iri \n                if (params.get('project') && (this.projectIri !== decodeURIComponent(params.get('project')))) {\n                    this.projectIri = decodeURIComponent(params.get('project'));\n                }\n\n                // init offset  and result\n                this.offset = 0;\n                this.result = [];\n\n                // get query params depending on the search mode\n                if (this.searchMode === 'fulltext') {\n                    this.searchQuery = params.get('q');\n                    this.badRequest = this.searchQuery.length < 3;\n                } else if (this.searchMode === 'extended') {\n                    this.gravsearchGenerator = this._searchParamsService.getSearchParams();\n                    if (!this.searchQuery) {\n                        this.generateGravsearchQuery();\n                    } else {\n                        this.gravSearchQuery = this.searchQuery;\n                    }\n                }\n\n                // get results\n                this.rerender = true;\n                this.getResult();\n            }\n        );\n    }\n\n\n    /**\n     * Generates the Gravsearch query for the current offset.\n     * @ignore\n     */\n    private generateGravsearchQuery() {\n        const gravsearch:\n            | string\n            | boolean = this.gravsearchGenerator.generateGravsearch(\n                this.offset\n            );\n        if (gravsearch === false) {\n            // no valid search params (application has been reloaded)\n            // go to root\n            this._router.navigate([''], { relativeTo: this._route });\n            return;\n        } else {\n            this.gravSearchQuery = <string>gravsearch;\n        }\n    }\n\n    /**\n     * Get search result from Knora - 2 cases: simple search and extended search\n     * @ignore\n     */\n    private getResult() {\n        this.loading = true;\n\n        // reset the error message\n        this.errorMessage = undefined;\n\n        // FULLTEXT SEARCH\n        if (this.searchMode === 'fulltext') {\n            this.rerender = true;\n            if (this.badRequest) {\n                this.errorMessage = new ApiServiceError();\n                this.errorMessage.errorInfo =\n                    'A search value is expected to have at least length of 3 characters.';\n                this.loading = false;\n                this.rerender = false;\n            } else {\n\n                let searchParams;\n\n                if (this.projectIri !== undefined) {\n                    searchParams = { limitToProject: this.projectIri };\n                }\n\n                if (this.offset === 0) {\n                    // perform count query\n                    this._searchService\n                        .doFullTextSearchCountQueryCountQueryResult(\n                            this.searchQuery,\n                            searchParams\n                        )\n                        .subscribe(\n                            this.showNumberOfAllResults,\n                            (error: ApiServiceError) => {\n                                this.errorMessage = <ApiServiceError>error;\n                            }\n                        );\n                }\n\n                // perform full text search\n                this._searchService\n                    .doFullTextSearchReadResourceSequence(\n                        this.searchQuery,\n                        this.offset,\n                        searchParams\n                    )\n                    .subscribe(\n                        this.processSearchResults, // function pointer\n                        (error: ApiServiceError) => {\n                            this.errorMessage = <ApiServiceError>error;\n                            console.log('error', error);\n                            console.log('message', this.errorMessage);\n                        }\n                    );\n            }\n\n            // EXTENDED SEARCH\n        } else if (this.searchMode === 'extended') {\n            // perform count query\n            if (this.offset === 0) {\n                this._searchService\n                    .doExtendedSearchCountQueryCountQueryResult(\n                        this.gravSearchQuery\n                    )\n                    .subscribe(\n                        this.showNumberOfAllResults,\n                        (error: ApiServiceError) => {\n                            this.errorMessage = <ApiServiceError>error;\n                        }\n                    );\n            }\n            this._searchService\n                .doExtendedSearchReadResourceSequence(this.gravSearchQuery)\n                .subscribe(\n                    this.processSearchResults, // function pointer\n                    (error: ApiServiceError) => {\n                        this.errorMessage = <ApiServiceError>error;\n                    }\n                );\n        } else {\n            this.errorMessage = new ApiServiceError();\n            this.errorMessage.errorInfo = `search mode invalid: ${\n                this.searchMode\n                }`;\n        }\n    }\n\n    /**\n     *\n     * Converts search results from JSON-LD to a [[ReadResourcesSequence]] and requests information about ontology entities.\n     * This function is passed to `subscribe` as a pointer (instead of redundantly defining the same lambda function).\n     * @ignore\n     *\n     * @param {ReadResourcesSequence} searchResult the answer to a search request.\n     */\n    private processSearchResults = (searchResult: ReadResourcesSequence) => {\n        // assign ontology information to a variable so it can be used in the component's template\n        if (this.ontologyInfo === undefined) {\n            // init ontology information\n            this.ontologyInfo = searchResult.ontologyInformation;\n        } else {\n            // update ontology information\n            this.ontologyInfo.updateOntologyInformation(\n                searchResult.ontologyInformation\n            );\n        }\n        // append results to search results\n        this.result = this.result.concat(searchResult.resources);\n        // console.log('search results', this.result);\n\n        this.loading = false;\n        this.rerender = false;\n    }\n\n    /**\n     * Shows total number of results returned by a count query.\n     * @ignore\n     *\n     * @param {ApiServiceResult} countQueryResult the response to a count query.\n     */\n    private showNumberOfAllResults = (countQueryResult: CountQueryResult) => {\n        this.numberOfAllResults = countQueryResult.numberOfResults;\n\n        if (this.numberOfAllResults > 0) {\n            // offset is 0-based\n            // if numberOfAllResults equals the pagingLimit, the max. offset is 0\n            this.maxOffset = Math.floor(\n                (this.numberOfAllResults - 1) / this.pagingLimit\n            );\n        } else {\n            this.maxOffset = 0;\n        }\n    }\n\n    /**\n     * Loads the next page of results.\n     * The results will be appended to the existing ones.\n     * @ignore\n     *\n     * @param {number} offset\n     * @returns void\n     */\n    loadMore(offset: number): void {\n        // update the page offset when the end of scroll is reached to get the next page of search results\n        if (this.offset < this.maxOffset) {\n            this.offset++;\n        } else {\n            return;\n        }\n\n        if (this.searchMode === 'extended') {\n            this.generateGravsearchQuery();\n        }\n\n        this.getResult();\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n// import { RouterModule } from '@angular/router';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { FlexLayoutModule } from '@angular/flex-layout';\n\nimport {\n    MatAutocompleteModule,\n    MatButtonModule,\n    MatCardModule,\n    MatCheckboxModule,\n    MatExpansionModule,\n    MatFormFieldModule,\n    MatIconModule,\n    MatInputModule,\n    MatListModule,\n    MatNativeDateModule,\n    MatSlideToggleModule,\n    MatTabsModule,\n    MatToolbarModule,\n    MatTooltipModule\n} from '@angular/material';\n\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { KuiActionModule } from '@knora/action';\nimport { KuiCoreModule } from '@knora/core';\n\nimport { BooleanValueComponent } from './property/boolean-value/boolean-value.component';\nimport { ColorValueComponent } from './property/color-value/color-value.component';\nimport { DateValueComponent } from './property/date-value/date-value.component';\nimport { DecimalValueComponent } from './property/decimal-value/decimal-value.component';\nimport { ExternalResValueComponent } from './property/external-res-value/external-res-value.component';\nimport { GeometryValueComponent } from './property/geometry-value/geometry-value.component';\nimport { GeonameValueComponent } from './property/geoname-value/geoname-value.component';\nimport { IntegerValueComponent } from './property/integer-value/integer-value.component';\nimport { IntervalValueComponent } from './property/interval-value/interval-value.component';\nimport { LinkValueComponent } from './property/link-value/link-value.component';\nimport { ListValueComponent } from './property/list-value/list-value.component';\nimport { TextValueAsHtmlComponent } from './property/text-value/text-value-as-html/text-value-as-html.component';\nimport { TextValueAsStringComponent } from './property/text-value/text-value-as-string/text-value-as-string.component';\nimport { TextValueAsXmlComponent } from './property/text-value/text-value-as-xml/text-value-as-xml.component';\nimport { TextfileValueComponent } from './property/textfile-value/textfile-value.component';\nimport { UriValueComponent } from './property/uri-value/uri-value.component';\nimport { AnnotationComponent } from './resource/annotation/annotation.component';\nimport { AudioComponent } from './resource/audio/audio.component';\nimport { CollectionComponent } from './resource/collection/collection.component';\nimport { DddComponent } from './resource/ddd/ddd.component';\nimport { DocumentComponent } from './resource/document/document.component';\nimport { LinkObjComponent } from './resource/link-obj/link-obj.component';\nimport { MovingImageComponent } from './resource/moving-image/moving-image.component';\nimport { ObjectComponent } from './resource/object/object.component';\nimport { RegionComponent } from './resource/region/region.component';\nimport { StillImageComponent } from './resource/still-image/still-image.component';\nimport { TextComponent } from './resource/text/text.component';\nimport { CompareViewComponent } from './view/compare-view/compare-view.component';\nimport { GraphViewComponent } from './view/graph-view/graph-view.component';\nimport { GridViewComponent } from './view/grid-view/grid-view.component';\nimport { ListViewComponent } from './view/list-view/list-view.component';\nimport { PropertiesViewComponent } from './view/properties-view/properties-view.component';\nimport { ResourceViewComponent } from './view/resource-view/resource-view.component';\nimport { TableViewComponent } from './view/table-view/table-view.component';\nimport { SearchResultsComponent } from './view/search-results/search-results.component';\n\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        KuiCoreModule,\n        KuiActionModule,\n        MatAutocompleteModule,\n        MatButtonModule,\n        MatCardModule,\n        MatCheckboxModule,\n        MatDatepickerModule,\n        MatExpansionModule,\n        MatFormFieldModule,\n        MatInputModule,\n        MatIconModule,\n        MatListModule,\n        MatNativeDateModule,\n        MatSlideToggleModule,\n        MatTabsModule,\n        MatToolbarModule,\n        MatTooltipModule,\n        ReactiveFormsModule,\n        FlexLayoutModule\n    ],\n    declarations: [\n        AnnotationComponent,\n        AudioComponent,\n        CollectionComponent,\n        DddComponent,\n        DocumentComponent,\n        LinkObjComponent,\n        MovingImageComponent,\n        ObjectComponent,\n        RegionComponent,\n        StillImageComponent,\n        TextComponent,\n        TextValueAsHtmlComponent,\n        TextValueAsStringComponent,\n        TextValueAsXmlComponent,\n        TextfileValueComponent,\n        DateValueComponent,\n        IntegerValueComponent,\n        ColorValueComponent,\n        DecimalValueComponent,\n        UriValueComponent,\n        BooleanValueComponent,\n        GeometryValueComponent,\n        GeonameValueComponent,\n        IntervalValueComponent,\n        ListValueComponent,\n        LinkValueComponent,\n        ExternalResValueComponent,\n        ListViewComponent,\n        GridViewComponent,\n        TableViewComponent,\n        ResourceViewComponent,\n        CompareViewComponent,\n        GraphViewComponent,\n        PropertiesViewComponent,\n        SearchResultsComponent\n    ],\n    exports: [\n\n        AnnotationComponent,\n        AudioComponent,\n        CollectionComponent,\n        DddComponent,\n        DocumentComponent,\n        LinkObjComponent,\n        MovingImageComponent,\n        ObjectComponent,\n        RegionComponent,\n        StillImageComponent,\n        TextComponent,\n        TextValueAsHtmlComponent,\n        TextValueAsStringComponent,\n        TextValueAsXmlComponent,\n        TextfileValueComponent,\n        DateValueComponent,\n        IntegerValueComponent,\n        ColorValueComponent,\n        DecimalValueComponent,\n        UriValueComponent,\n        BooleanValueComponent,\n        GeometryValueComponent,\n        GeonameValueComponent,\n        IntervalValueComponent,\n        ListValueComponent,\n        LinkValueComponent,\n        ExternalResValueComponent,\n        ListViewComponent,\n        GridViewComponent,\n        TableViewComponent,\n        ResourceViewComponent,\n        CompareViewComponent,\n        GraphViewComponent,\n        PropertiesViewComponent,\n        SearchResultsComponent\n    ]\n})\nexport class KuiViewerModule {\n}\n","/*\n * Public API Surface of viewer\n */\n\n// resource viewer\nexport * from './lib/resource/';\n\n// property (gui) element\nexport * from './lib/property/';\n\n// different kind of views\nexport * from './lib/view/';\n\n// viewer module\nexport * from './lib/viewer.module';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n\nexport {BooleanValueComponent as Éµu} from './lib/property/boolean-value/boolean-value.component';\nexport {ColorValueComponent as Éµr} from './lib/property/color-value/color-value.component';\nexport {DateValueComponent as Éµp} from './lib/property/date-value/date-value.component';\nexport {DecimalValueComponent as Éµs} from './lib/property/decimal-value/decimal-value.component';\nexport {ExternalResValueComponent as Éµba} from './lib/property/external-res-value/external-res-value.component';\nexport {GeometryValueComponent as Éµv} from './lib/property/geometry-value/geometry-value.component';\nexport {GeonameValueComponent as Éµw} from './lib/property/geoname-value/geoname-value.component';\nexport {IntegerValueComponent as Éµq} from './lib/property/integer-value/integer-value.component';\nexport {IntervalValueComponent as Éµx} from './lib/property/interval-value/interval-value.component';\nexport {LinkValueComponent as Éµz} from './lib/property/link-value/link-value.component';\nexport {ListValueComponent as Éµy} from './lib/property/list-value/list-value.component';\nexport {TextValueAsHtmlComponent as Éµl} from './lib/property/text-value/text-value-as-html/text-value-as-html.component';\nexport {TextValueAsStringComponent as Éµm} from './lib/property/text-value/text-value-as-string/text-value-as-string.component';\nexport {TextValueAsXmlComponent as Éµn} from './lib/property/text-value/text-value-as-xml/text-value-as-xml.component';\nexport {TextfileValueComponent as Éµo} from './lib/property/textfile-value/textfile-value.component';\nexport {UriValueComponent as Éµt} from './lib/property/uri-value/uri-value.component';\nexport {AnnotationComponent as Éµa} from './lib/resource/annotation/annotation.component';\nexport {AudioComponent as Éµb} from './lib/resource/audio/audio.component';\nexport {CollectionComponent as Éµc} from './lib/resource/collection/collection.component';\nexport {DddComponent as Éµd} from './lib/resource/ddd/ddd.component';\nexport {DocumentComponent as Éµe} from './lib/resource/document/document.component';\nexport {LinkObjComponent as Éµf} from './lib/resource/link-obj/link-obj.component';\nexport {MovingImageComponent as Éµg} from './lib/resource/moving-image/moving-image.component';\nexport {ObjectComponent as Éµh} from './lib/resource/object/object.component';\nexport {RegionComponent as Éµi} from './lib/resource/region/region.component';\nexport {StillImageComponent as Éµj} from './lib/resource/still-image/still-image.component';\nexport {TextComponent as Éµk} from './lib/resource/text/text.component';\nexport {CompareViewComponent as Éµbf} from './lib/view/compare-view/compare-view.component';\nexport {GraphViewComponent as Éµbg} from './lib/view/graph-view/graph-view.component';\nexport {GridViewComponent as Éµbc} from './lib/view/grid-view/grid-view.component';\nexport {ListViewComponent as Éµbb} from './lib/view/list-view/list-view.component';\nexport {PropertiesViewComponent as Éµbh} from './lib/view/properties-view/properties-view.component';\nexport {ResourceViewComponent as Éµbe} from './lib/view/resource-view/resource-view.component';\nexport {SearchResultsComponent as Éµbi} from './lib/view/search-results/search-results.component';\nexport {TableViewComponent as Éµbd} from './lib/view/table-view/table-view.component';"],"names":["ImageRegion","tslib_1.__values"],"mappings":"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"}
